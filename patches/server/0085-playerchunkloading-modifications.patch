From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Tue, 16 Feb 2021 18:43:43 -0500
Subject: [PATCH] playerchunkloading modifications


diff --git a/src/main/java/com/tuinity/tuinity/config/TuinityConfig.java b/src/main/java/com/tuinity/tuinity/config/TuinityConfig.java
index 5155a79f78eba532d0f1314ca7f4e667d0c5e30f..804e495a5612590140b07fa2278f8762adb0e5d7 100644
--- a/src/main/java/com/tuinity/tuinity/config/TuinityConfig.java
+++ b/src/main/java/com/tuinity/tuinity/config/TuinityConfig.java
@@ -240,9 +240,10 @@ public final class TuinityConfig {
     public static double playerMaxConcurrentChunkSends;
     public static double playerMaxConcurrentChunkLoads;
     public static boolean playerAutoConfigureSendViewDistance;
-    public static boolean enableMC162253Workaround;
+    // public static boolean enableMC162253Workaround;
     public static double playerTargetChunkSendRate;
     public static boolean playerFrustumPrioritisation;
+    public static boolean ucapChunks;
 
     private static void newPlayerChunkManagement() {
         playerMinChunkLoadRadius = TuinityConfig.getInt("player-chunks.min-load-radius", 2);
@@ -250,9 +251,15 @@ public final class TuinityConfig {
         playerMaxConcurrentChunkLoads = TuinityConfig.getDouble("player-chunks.max-concurrent-loads", -9.0);
         playerAutoConfigureSendViewDistance = TuinityConfig.getBoolean("player-chunks.autoconfig-send-distance", true);
         // this costs server bandwidth. latest phosphor or starlight on the client fixes mc162253 anyways.
-        enableMC162253Workaround = TuinityConfig.getBoolean("player-chunks.enable-mc162253-workaround", false);
+        // enableMC162253Workaround = TuinityConfig.getBoolean("player-chunks.enable-mc162253-workaround", false);
         playerTargetChunkSendRate = TuinityConfig.getDouble("player-chunks.target-chunk-send-rate", 81.0 * 20.0);
         playerFrustumPrioritisation = TuinityConfig.getBoolean("player-chunks.enable-frustum-priority", false);
+        ucapChunks = TuinityConfig.getBoolean("player-chunks.uncap-chunk-loading", false);
+        if (ucapChunks) {
+            playerTargetChunkSendRate = -1000000000000000.0D;
+            playerMaxConcurrentChunkSends = 1073741824.0D;
+            playerMaxConcurrentChunkLoads = 1073741824.0D;
+        }
     }
 
     public static final class WorldConfig {
diff --git a/src/main/java/net/minecraft/server/PlayerChunkMap.java b/src/main/java/net/minecraft/server/PlayerChunkMap.java
index 4d66a9006c07d5366396f38c489d1c07ce207250..6e92cfcdfcda34d9308be94842e694fa5411464c 100644
--- a/src/main/java/net/minecraft/server/PlayerChunkMap.java
+++ b/src/main/java/net/minecraft/server/PlayerChunkMap.java
@@ -2204,6 +2204,7 @@ Sections go from 0..16. Now whenever a section is not empty, it can potentially
             apacket[0] = new PacketPlayOutMapChunk(chunk, 65535, chunk.world.chunkPacketBlockController.shouldModify(entityplayer, chunk, 65535)); // Paper - Anti-Xray - Bypass
             apacket[1] = new PacketPlayOutLightUpdate(chunk.getPos(), this.lightEngine, true);
 
+            /*
             // Paper start - Fix MC-162253
             if (com.tuinity.tuinity.config.TuinityConfig.enableMC162253Workaround) { // Tuinity - hide behind config option, this logic has undesirable network effects
             final int lightMask = getLightMask(chunk);
@@ -2231,8 +2232,10 @@ Sections go from 0..16. Now whenever a section is not empty, it can potentially
                 }
             }
         } // Tuinity - hide behind config option, this logic has undesirable network effects
+        */
         }
 
+        /*
         if (com.tuinity.tuinity.config.TuinityConfig.enableMC162253Workaround) { // Tuinity - hide behind config option, this logic has undesirable network effects
         final int viewDistance = this.playerChunkManager.broadcastMap.getLastViewDistance(entityplayer); // Tuinity - replace player chunk loader
         final long lastPosition = this.playerChunkManager.broadcastMap.getLastCoordinate(entityplayer); // Tuinity - replace player chunk loader
@@ -2262,6 +2265,7 @@ Sections go from 0..16. Now whenever a section is not empty, it can potentially
         }
         } // Tuinity - hide behind config option, this logic has undesirable network effects
         // Paper end - Fix MC-162253
+        */
 
         entityplayer.a(chunk.getPos(), apacket[0], apacket[1]);
         PacketDebug.a(this.world, chunk.getPos());
