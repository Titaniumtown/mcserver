From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Tue, 26 Jan 2021 14:58:27 -0500
Subject: [PATCH] cache SpawnerCreature.countMobs


diff --git a/src/main/java/net/minecraft/server/SpawnerCreature.java b/src/main/java/net/minecraft/server/SpawnerCreature.java
index ee91c33a7a2edca02caf5c71fd6429f97eac7e2d..d6ac7b3d8f0e01b6e204bd62028c871d4a99825e 100644
--- a/src/main/java/net/minecraft/server/SpawnerCreature.java
+++ b/src/main/java/net/minecraft/server/SpawnerCreature.java
@@ -19,6 +19,11 @@ import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 // CraftBukkit end
 
 public final class SpawnerCreature {
+    // Yatopia start - cache SpawnerCreature.countMobs
+    public static int countMobsCacheTick;
+    public static SpawnerCreature.d countMobsCache;
+    public static boolean countMobsDebug = false;
+    // Yatopia end
 
     private static final Logger LOGGER = LogManager.getLogger();
     private static final int b = (int) Math.pow(17.0D, 2.0D);
@@ -34,6 +39,10 @@ public final class SpawnerCreature {
     }
     public static SpawnerCreature.d countMobs(int i, Iterable<Entity> iterable, SpawnerCreature.b spawnercreature_b, boolean countMobs) {
         // Paper end - add countMobs parameter
+        // Yatopia start - cache SpawnerCreature.countMobs
+        if (!org.yatopiamc.yatopia.server.YatopiaConfig.shouldCacheCheckMobs || (SpawnerCreature.countMobsCacheTick++ % org.yatopiamc.yatopia.server.YatopiaConfig.cacheCheckMobsInterval == 0)) {
+        if (SpawnerCreature.countMobsDebug) System.out.println("Not using cache");
+
         SpawnerCreatureProbabilities spawnercreatureprobabilities = new SpawnerCreatureProbabilities();
         Object2IntOpenHashMap<EnumCreatureType> object2intopenhashmap = new Object2IntOpenHashMap();
         Iterator iterator = iterable.iterator();
@@ -79,8 +88,12 @@ public final class SpawnerCreature {
                 });
             }
         }
-
-        return new SpawnerCreature.d(i, object2intopenhashmap, spawnercreatureprobabilities);
+        SpawnerCreature.countMobsCache = new SpawnerCreature.d(i, object2intopenhashmap, spawnercreatureprobabilities);
+        } else {
+            if (SpawnerCreature.countMobsDebug) System.out.println("Using cache");
+        }
+        return SpawnerCreature.countMobsCache;
+        // Yatopia end
     }
 
     private static BiomeBase b(BlockPosition blockposition, IChunkAccess ichunkaccess) {
diff --git a/src/main/java/org/yatopiamc/yatopia/server/YatopiaConfig.java b/src/main/java/org/yatopiamc/yatopia/server/YatopiaConfig.java
index 3cfe9ffd09cf09a5d8fa62598a1a2598c2b0d469..fa08f65f72d4840ae63bec0f679c986322a1948d 100644
--- a/src/main/java/org/yatopiamc/yatopia/server/YatopiaConfig.java
+++ b/src/main/java/org/yatopiamc/yatopia/server/YatopiaConfig.java
@@ -291,4 +291,11 @@ public class YatopiaConfig {
         worldGenExecutorSize = getInt("settings.threads.worldgen", -1);
         Preconditions.checkArgument(worldGenExecutorSize == -1 || worldGenExecutorSize > 0, "Invalid settings.threads.worldgen in yatopia.yml");
     }
+
+    public static boolean shouldCacheCheckMobs = false;
+    public static int cacheCheckMobsInterval = 1;
+    private static void cache() {
+        shouldCacheCheckMobs = getBoolean("settings.cache.should-cache-check-mobs", shouldCacheCheckMobs);
+        cacheCheckMobsInterval = getInt("settings.cache.cache-check-mobs-interval", cacheCheckMobsInterval);
+    }
 }
