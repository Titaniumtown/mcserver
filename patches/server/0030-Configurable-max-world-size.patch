From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Tue, 15 Dec 2020 15:42:24 -0500
Subject: [PATCH] Configurable max world size


diff --git a/src/main/java/me/titaniumtown/misc.java b/src/main/java/me/titaniumtown/misc.java
new file mode 100644
index 000000000..1cea90e5f
--- /dev/null
+++ b/src/main/java/me/titaniumtown/misc.java
@@ -0,0 +1,6 @@
+package me.titaniumtown;
+
+public class misc {
+    public static double WborderSize = 4.294967294E9D;
+    public static int biggestInt = 2147483647;
+}
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/BaseBlockPosition.java b/src/main/java/net/minecraft/server/BaseBlockPosition.java
index e811295b4..17044c25e 100644
--- a/src/main/java/net/minecraft/server/BaseBlockPosition.java
+++ b/src/main/java/net/minecraft/server/BaseBlockPosition.java
@@ -22,7 +22,7 @@ public class BaseBlockPosition implements Comparable<BaseBlockPosition> {
 
     // Paper start
     public boolean isValidLocation() {
-        return getX() >= -30000000 && getZ() >= -30000000 && getX() < 30000000 && getZ() < 30000000 && getY() >= 0 && getY() < 256;
+        return getY() < 256; // Purpur - Remove world border limitations
     }
     public boolean isInvalidYLocation() {
         return b < 0 || b >= 256;
diff --git a/src/main/java/net/minecraft/server/CommandForceload.java b/src/main/java/net/minecraft/server/CommandForceload.java
index 57e9e737f..95f583a70 100644
--- a/src/main/java/net/minecraft/server/CommandForceload.java
+++ b/src/main/java/net/minecraft/server/CommandForceload.java
@@ -8,6 +8,7 @@ import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
 import com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
 import it.unimi.dsi.fastutil.longs.LongSet;
+import java.util.function.Consumer;
 
 public class CommandForceload {
 
@@ -80,7 +81,7 @@ public class CommandForceload {
         ResourceKey<World> resourcekey = worldserver.getDimensionKey();
         LongSet longset = worldserver.getForceLoadedChunks();
 
-        longset.forEach((i) -> {
+        longset.forEach((Consumer<? super Long>) (i) -> {
             worldserver.setForceLoaded(ChunkCoordIntPair.getX(i), ChunkCoordIntPair.getZ(i), false);
         });
         commandlistenerwrapper.sendMessage(new ChatMessage("commands.forceload.removed.all", new Object[]{resourcekey.a()}), true);
@@ -93,33 +94,32 @@ public class CommandForceload {
         int k = Math.max(blockposition2d.a, blockposition2d1.a);
         int l = Math.max(blockposition2d.b, blockposition2d1.b);
 
-        if (i >= -30000000 && j >= -30000000 && k < 30000000 && l < 30000000) {
-            int i1 = i >> 4;
-            int j1 = j >> 4;
-            int k1 = k >> 4;
-            int l1 = l >> 4;
-            long i2 = ((long) (k1 - i1) + 1L) * ((long) (l1 - j1) + 1L);
+        int i1 = i >> 4;
+        int j1 = j >> 4;
+        int k1 = k >> 4;
+        int l1 = l >> 4;
+        long i2 = ((long) (k1 - i1) + 1L) * ((long) (l1 - j1) + 1L);
 
-            if (i2 > 256L) {
-                throw CommandForceload.a.create(256, i2);
-            } else {
-                WorldServer worldserver = commandlistenerwrapper.getWorld();
-                ResourceKey<World> resourcekey = worldserver.getDimensionKey();
-                ChunkCoordIntPair chunkcoordintpair = null;
-                int j2 = 0;
-
-                for (int k2 = i1; k2 <= k1; ++k2) {
-                    for (int l2 = j1; l2 <= l1; ++l2) {
-                        boolean flag1 = worldserver.setForceLoaded(k2, l2, flag);
-
-                        if (flag1) {
-                            ++j2;
-                            if (chunkcoordintpair == null) {
-                                chunkcoordintpair = new ChunkCoordIntPair(k2, l2);
-                            }
+        if (i2 > 256L) {
+            throw CommandForceload.a.create(256, i2);
+        } else {
+            WorldServer worldserver = commandlistenerwrapper.getWorld();
+            ResourceKey<World> resourcekey = worldserver.getDimensionKey();
+            ChunkCoordIntPair chunkcoordintpair = null;
+            int j2 = 0;
+
+            for (int k2 = i1; k2 <= k1; ++k2) {
+                for (int l2 = j1; l2 <= l1; ++l2) {
+                    boolean flag1 = worldserver.setForceLoaded(k2, l2, flag);
+
+                    if (flag1) {
+                        ++j2;
+                        if (chunkcoordintpair == null) {
+                            chunkcoordintpair = new ChunkCoordIntPair(k2, l2);
                         }
                     }
                 }
+            }
 
                 if (j2 == 0) {
                     throw (flag ? CommandForceload.c : CommandForceload.d).create();
@@ -135,9 +135,6 @@ public class CommandForceload {
 
                     return j2;
                 }
-            }
-        } else {
-            throw ArgumentPosition.b.create();
         }
     }
 }
diff --git a/src/main/java/net/minecraft/server/CommandTeleport.java b/src/main/java/net/minecraft/server/CommandTeleport.java
index ddc978279..ac797203a 100644
--- a/src/main/java/net/minecraft/server/CommandTeleport.java
+++ b/src/main/java/net/minecraft/server/CommandTeleport.java
@@ -119,12 +119,8 @@ public class CommandTeleport {
 
     private static void a(CommandListenerWrapper commandlistenerwrapper, Entity entity, WorldServer worldserver, double d0, double d1, double d2, Set<PacketPlayOutPosition.EnumPlayerTeleportFlags> set, float f, float f1, @Nullable CommandTeleport.a commandteleport_a) throws CommandSyntaxException {
         BlockPosition blockposition = new BlockPosition(d0, d1, d2);
-        // Paper start - Don't allow teleport command to invalid locations
-        if (d0 <= -30000000 || d2 <= -30000000 || d0 > 30000000 || d2 > 30000000 || d1 > 30000000 || d1 <= -30000000) { // Copy/pasta from BaseBlockPosition#isValidLocation
-            org.bukkit.Bukkit.getLogger().warning("Refused to teleport " + entity.getName() + " to " + d0 + ", " + d1 + ", " + d2);
-            return;
-        }
-        // Paper end
+        org.bukkit.Bukkit.getLogger().warning("Refused to teleport " + entity.getName() + " to " + d0 + ", " + d1 + ", " + d2);
+        return;
 
         if (!World.l(blockposition)) {
             throw CommandTeleport.a.create();
diff --git a/src/main/java/net/minecraft/server/CommandWorldBorder.java b/src/main/java/net/minecraft/server/CommandWorldBorder.java
index 11ad785b2..38d0eba70 100644
--- a/src/main/java/net/minecraft/server/CommandWorldBorder.java
+++ b/src/main/java/net/minecraft/server/CommandWorldBorder.java
@@ -121,7 +121,7 @@ public class CommandWorldBorder {
             throw CommandWorldBorder.b.create();
         } else if (d0 < 1.0D) {
             throw CommandWorldBorder.c.create();
-        } else if (d0 > 6.0E7D) {
+        } else if (d0 > me.titaniumtown.misc.WborderSize) {
             throw CommandWorldBorder.d.create();
         } else {
             if (i > 0L) {
diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index 3ee8d31c4..ea251f260 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -547,7 +547,7 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
 
     @Override
     public int au() {
-        return this.getDedicatedServerProperties().maxWorldSize;
+        return me.titaniumtown.misc.biggestInt; // Purpur - Remove world border limitations
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/DedicatedServerProperties.java b/src/main/java/net/minecraft/server/DedicatedServerProperties.java
index 780474397..91c72127e 100644
--- a/src/main/java/net/minecraft/server/DedicatedServerProperties.java
+++ b/src/main/java/net/minecraft/server/DedicatedServerProperties.java
@@ -48,7 +48,6 @@ public class DedicatedServerProperties extends PropertyManager<DedicatedServerPr
     public final int networkCompressionThreshold;
     public final boolean broadcastRconToOps;
     public final boolean broadcastConsoleToOps;
-    public final int maxWorldSize;
     public final boolean syncChunkWrites;
     public final boolean enableJmxMonitoring;
     public final boolean enableStatus;
@@ -99,9 +98,6 @@ public class DedicatedServerProperties extends PropertyManager<DedicatedServerPr
         this.networkCompressionThreshold = this.getInt("network-compression-threshold", 256);
         this.broadcastRconToOps = this.getBoolean("broadcast-rcon-to-ops", true);
         this.broadcastConsoleToOps = this.getBoolean("broadcast-console-to-ops", true);
-        this.maxWorldSize = this.a("max-world-size", (integer) -> {
-            return MathHelper.clamp(integer, 1, 29999984);
-        }, 29999984);
         this.syncChunkWrites = this.getBoolean("sync-chunk-writes", true) && Boolean.getBoolean("Paper.enable-sync-chunk-writes"); // Paper - hide behind flag
         this.enableJmxMonitoring = this.getBoolean("enable-jmx-monitoring", false);
         this.enableStatus = this.getBoolean("enable-status", true);
diff --git a/src/main/java/net/minecraft/server/IWorldReader.java b/src/main/java/net/minecraft/server/IWorldReader.java
index eb7282c33..9e71ab0ac 100644
--- a/src/main/java/net/minecraft/server/IWorldReader.java
+++ b/src/main/java/net/minecraft/server/IWorldReader.java
@@ -139,7 +139,7 @@ public interface IWorldReader extends IBlockLightAccess, ICollisionAccess, Biome
     }
 
     default int c(BlockPosition blockposition, int i) {
-        return blockposition.getX() >= -30000000 && blockposition.getZ() >= -30000000 && blockposition.getX() < 30000000 && blockposition.getZ() < 30000000 ? this.getLightLevel(blockposition, i) : 15;
+        return this.getLightLevel(blockposition, i); // Purpur - Remove world border limitations
     }
 
     @Deprecated
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 2678d4f39..a6333894c 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1843,7 +1843,7 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
     }
 
     public int au() {
-        return 29999984;
+        return me.titaniumtown.misc.biggestInt; // Purpur - Remove world border limitations
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 34993cb34..fd9ec7bb9 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -418,7 +418,7 @@ public abstract class World implements GeneratorAccess, AutoCloseable {
     }
 
     private static boolean D(BlockPosition blockposition) {
-        return blockposition.getX() >= -30000000 && blockposition.getZ() >= -30000000 && blockposition.getX() < 30000000 && blockposition.getZ() < 30000000;
+        return true; // Purpur - Remove world border limitations
     }
 
     private static boolean d(int i) {
@@ -805,16 +805,13 @@ public abstract class World implements GeneratorAccess, AutoCloseable {
     public final int getHighestBlockY(final HeightMap.Type heightmap, final int x, final int z) { return this.a(heightmap, x, z); } // Paper - OBFHELPER
     @Override public int a(HeightMap.Type heightmap_type, int i, int j) { // Paper - OBFHELPER
         int k;
-
-        if (i >= -30000000 && j >= -30000000 && i < 30000000 && j < 30000000) {
-            if (this.isChunkLoaded(i >> 4, j >> 4)) {
-                k = this.getChunkAt(i >> 4, j >> 4).getHighestBlock(heightmap_type, i & 15, j & 15) + 1;
-            } else {
-                k = 0;
-            }
+        // Purpur start - Remove world border limitations
+        if (this.isChunkLoaded(i >> 4, j >> 4)) {
+            k = this.getChunkAt(i >> 4, j >> 4).getHighestBlock(heightmap_type, i & 15, j & 15) + 1;
         } else {
-            k = this.getSeaLevel() + 1;
+            k = 0;
         }
+        // Purpur end
 
         return k;
     }
diff --git a/src/main/java/net/minecraft/server/WorldBorder.java b/src/main/java/net/minecraft/server/WorldBorder.java
index 0d10d317c..2114d6463 100644
--- a/src/main/java/net/minecraft/server/WorldBorder.java
+++ b/src/main/java/net/minecraft/server/WorldBorder.java
@@ -14,9 +14,9 @@ public class WorldBorder {
     private int f = 5;
     private double g;
     private double h;
-    private int i = 29999984;
-    private WorldBorder.a j = new WorldBorder.d(6.0E7D);
-    public static final WorldBorder.c c = new WorldBorder.c(0.0D, 0.0D, 0.2D, 5.0D, 5, 15, 6.0E7D, 0L, 0.0D);
+    private int i = me.titaniumtown.misc.biggestInt; // Purpur - Remove world border limitations
+    private WorldBorder.a j = new WorldBorder.d(me.titaniumtown.misc.WborderSize);
+    public static final WorldBorder.c c = new WorldBorder.c(0.0D, 0.0D, 0.2D, 5.0D, 5, 15, me.titaniumtown.misc.WborderSize, 0L, 0.0D);
     public WorldServer world; // CraftBukkit
 
     public WorldBorder() {}
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index b3bc2d908..7f81a7dd5 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -652,7 +652,7 @@ public final class CraftServer implements Server {
 
     @Override
     public int getMaxWorldSize() {
-        return this.getProperties().maxWorldSize;
+        return me.titaniumtown.misc.biggestInt; // Purpur - Remove world border limitations
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorldBorder.java b/src/main/java/org/bukkit/craftbukkit/CraftWorldBorder.java
index 044d46ac8..8d59ccc9f 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorldBorder.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorldBorder.java
@@ -18,7 +18,7 @@ public class CraftWorldBorder implements WorldBorder {
 
     @Override
     public void reset() {
-        this.setSize(6.0E7D);
+        this.setSize(me.titaniumtown.misc.WborderSize);
         this.setDamageAmount(0.2D);
         this.setDamageBuffer(5.0D);
         this.setWarningDistance(5);
@@ -39,7 +39,7 @@ public class CraftWorldBorder implements WorldBorder {
     @Override
     public void setSize(double newSize, long time) {
         // PAIL: TODO: Magic Values
-        newSize = Math.min(6.0E7D, Math.max(1.0D, newSize));
+        newSize = Math.min(me.titaniumtown.misc.WborderSize, Math.max(1.0D, newSize));
         time = Math.min(9223372036854775L, Math.max(0L, time));
 
         if (time > 0L) {
