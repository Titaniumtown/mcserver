From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Fri, 12 Feb 2021 16:20:23 -0500
Subject: [PATCH] replace Math.sin and Math.cos with MathHelper


diff --git a/src/main/java/net/minecraft/server/EnderDragonBattle.java b/src/main/java/net/minecraft/server/EnderDragonBattle.java
index 0d8fba494ed11ad79201dfd1c7f3ad5b288ca0ca..bd254110490916fd106a4784577542525364bcfb 100644
--- a/src/main/java/net/minecraft/server/EnderDragonBattle.java
+++ b/src/main/java/net/minecraft/server/EnderDragonBattle.java
@@ -387,8 +387,8 @@ public class EnderDragonBattle {
     private void n() {
         if (!this.gateways.isEmpty()) {
             int i = (Integer) this.gateways.remove(this.gateways.size() - 1);
-            int j = MathHelper.floor(96.0D * Math.cos(2.0D * (-3.141592653589793D + 0.15707963267948966D * (double) i)));
-            int k = MathHelper.floor(96.0D * Math.sin(2.0D * (-3.141592653589793D + 0.15707963267948966D * (double) i)));
+            int j = MathHelper.floor(96.0D * MathHelper.cos(2.0D * (-3.141592653589793D + 0.15707963267948966D * (double) i)));
+            int k = MathHelper.floor(96.0D * MathHelper.sin(2.0D * (-3.141592653589793D + 0.15707963267948966D * (double) i)));
 
             this.a(new BlockPosition(j, 75, k));
         }
diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java
index 72d2eea40c37b5fa627c8deeda1802734e94f866..c7b053c5a3774f3d73a10ec064f1e8f01ce4c7d3 100644
--- a/src/main/java/net/minecraft/server/EntityBoat.java
+++ b/src/main/java/net/minecraft/server/EntityBoat.java
@@ -365,7 +365,7 @@ public class EntityBoat extends Entity {
 
             this.aC = MathHelper.a(this.aC, 0.0F, 1.0F);
             this.aE = this.aD;
-            this.aD = 10.0F * (float) Math.sin((double) (0.5F * (float) this.world.getTime())) * this.aC;
+            this.aD = 10.0F * (float) MathHelper.sin((double) (0.5F * (float) this.world.getTime())) * this.aC;
         } else {
             if (!this.aA) {
                 this.d(0);
diff --git a/src/main/java/net/minecraft/server/EntityEnderSignal.java b/src/main/java/net/minecraft/server/EntityEnderSignal.java
index 132fa358b844a609a9ede3032e98f991c5eac65a..1d0ec1c5a934dea6ed1e23d75b0c31f1020d88da 100644
--- a/src/main/java/net/minecraft/server/EntityEnderSignal.java
+++ b/src/main/java/net/minecraft/server/EntityEnderSignal.java
@@ -91,7 +91,7 @@ public class EntityEnderSignal extends Entity {
 
             int i = this.locY() < this.targetY ? 1 : -1;
 
-            vec3d = new Vec3D(Math.cos((double) f2) * d5, d6 + ((double) i - d6) * 0.014999999664723873D, Math.sin((double) f2) * d5);
+            vec3d = new Vec3D(MathHelper.cos((double) f2) * d5, d6 + ((double) i - d6) * 0.014999999664723873D, MathHelper.sin((double) f2) * d5);
             this.setMot(vec3d);
         }
 
diff --git a/src/main/java/net/minecraft/server/EntityFox.java b/src/main/java/net/minecraft/server/EntityFox.java
index 18d14aca159db9c82a2f56020f503b5d3c4aae59..7a1148096d0d4a8fd60f4d6e815c44a7db02899c 100644
--- a/src/main/java/net/minecraft/server/EntityFox.java
+++ b/src/main/java/net/minecraft/server/EntityFox.java
@@ -1094,8 +1094,8 @@ public class EntityFox extends EntityAnimal {
         private void j() {
             double d0 = 6.283185307179586D * EntityFox.this.getRandom().nextDouble();
 
-            this.c = Math.cos(d0);
-            this.d = Math.sin(d0);
+            this.c = MathHelper.cos(d0);
+            this.d = MathHelper.sin(d0);
             this.e = 80 + EntityFox.this.getRandom().nextInt(20);
         }
     }
diff --git a/src/main/java/net/minecraft/server/EntityGuardian.java b/src/main/java/net/minecraft/server/EntityGuardian.java
index 476f692df79e98779271cc5a395276ab9c755a58..3e291f11a016638d17e979d74b40fd1733722158 100644
--- a/src/main/java/net/minecraft/server/EntityGuardian.java
+++ b/src/main/java/net/minecraft/server/EntityGuardian.java
@@ -362,10 +362,10 @@ public class EntityGuardian extends EntityMonster {
                 float f2 = MathHelper.g(0.125F, this.i.dN(), f1);
 
                 this.i.q(f2);
-                double d4 = Math.sin((double) (this.i.ticksLived + this.i.getId()) * 0.5D) * 0.05D;
-                double d5 = Math.cos((double) (this.i.yaw * 0.017453292F));
-                double d6 = Math.sin((double) (this.i.yaw * 0.017453292F));
-                double d7 = Math.sin((double) (this.i.ticksLived + this.i.getId()) * 0.75D) * 0.05D;
+                double d4 = MathHelper.sin((double) (this.i.ticksLived + this.i.getId()) * 0.5D) * 0.05D;
+                double d5 = MathHelper.cos((double) (this.i.yaw * 0.017453292F));
+                double d6 = MathHelper.sin((double) (this.i.yaw * 0.017453292F));
+                double d7 = MathHelper.sin((double) (this.i.ticksLived + this.i.getId()) * 0.75D) * 0.05D;
 
                 this.i.setMot(this.i.getMot().add(d4 * d5, d7 * (d6 + d5) * 0.25D + (double) f2 * d2 * 0.1D, d4 * d6));
                 ControllerLook controllerlook = this.i.getControllerLook();
diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 0511d2a37a7cfc906f13df72e91ffed993639376..66c63d2eb09ad62abba4c110497b4c5cbd4f8630 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -602,7 +602,7 @@ public abstract class EntityHuman extends EntityLiving {
                 float f5 = this.random.nextFloat() * 6.2831855F;
                 float f6 = 0.02F * this.random.nextFloat();
 
-                entityitem.setMot((double) (-f3 * f2 * 0.3F) + Math.cos((double) f5) * (double) f6, (double) (-f1 * 0.3F + 0.1F + (this.random.nextFloat() - this.random.nextFloat()) * 0.1F), (double) (f4 * f2 * 0.3F) + Math.sin((double) f5) * (double) f6);
+                entityitem.setMot((double) (-f3 * f2 * 0.3F) + MathHelper.cos((double) f5) * (double) f6, (double) (-f1 * 0.3F + 0.1F + (this.random.nextFloat() - this.random.nextFloat()) * 0.1F), (double) (f4 * f2 * 0.3F) + MathHelper.sin((double) f5) * (double) f6);
             }
 
             // CraftBukkit start - fire PlayerDropItemEvent
diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 7a420953b251b746d8c3d28ce08f9e1984c8e4e8..e78cf38bc85d0fcfa0f931e67eb637b8b20d9585 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -157,15 +157,15 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     // Paper start
     public BlockPosition getPointInFront(double inFront) {
         double rads = Math.toRadians(MCUtil.normalizeYaw(this.yaw+90)); // MC rotates yaw 90 for some odd reason
-        final double x = locX() + inFront * Math.cos(rads);
-        final double z = locZ() + inFront * Math.sin(rads);
+        final double x = locX() + inFront * MathHelper.cos(rads);
+        final double z = locZ() + inFront * MathHelper.sin(rads);
         return new BlockPosition(x, locY(), z);
     }
 
     public ChunkCoordIntPair getChunkInFront(double inFront) {
         double rads = Math.toRadians(MCUtil.normalizeYaw(this.yaw+90)); // MC rotates yaw 90 for some odd reason
-        final double x = locX() + (inFront * 16) * Math.cos(rads);
-        final double z = locZ() + (inFront * 16) * Math.sin(rads);
+        final double x = locX() + (inFront * 16) * MathHelper.cos(rads);
+        final double z = locZ() + (inFront * 16) * MathHelper.sin(rads);
         return new ChunkCoordIntPair(MathHelper.floor(x) >> 4, MathHelper.floor(z) >> 4);
     }
     // Paper end
diff --git a/src/main/java/net/minecraft/server/EntityRavager.java b/src/main/java/net/minecraft/server/EntityRavager.java
index f9df1389189962ce08e50647baffd9eecb00968a..7e6e05d4f6003a598efd5988ad06244ceb70bb8b 100644
--- a/src/main/java/net/minecraft/server/EntityRavager.java
+++ b/src/main/java/net/minecraft/server/EntityRavager.java
@@ -182,9 +182,9 @@ public class EntityRavager extends EntityRaider {
 
     private void eX() {
         if (this.random.nextInt(6) == 0) {
-            double d0 = this.locX() - (double) this.getWidth() * Math.sin((double) (this.aA * 0.017453292F)) + (this.random.nextDouble() * 0.6D - 0.3D);
+            double d0 = this.locX() - (double) this.getWidth() * MathHelper.sin((double) (this.aA * 0.017453292F)) + (this.random.nextDouble() * 0.6D - 0.3D);
             double d1 = this.locY() + (double) this.getHeight() - 0.3D;
-            double d2 = this.locZ() + (double) this.getWidth() * Math.cos((double) (this.aA * 0.017453292F)) + (this.random.nextDouble() * 0.6D - 0.3D);
+            double d2 = this.locZ() + (double) this.getWidth() * MathHelper.cos((double) (this.aA * 0.017453292F)) + (this.random.nextDouble() * 0.6D - 0.3D);
 
             this.world.addParticle(Particles.ENTITY_EFFECT, d0, d1, d2, 0.4980392156862745D, 0.5137254901960784D, 0.5725490196078431D);
         }
diff --git a/src/main/java/net/minecraft/server/EntitySquid.java b/src/main/java/net/minecraft/server/EntitySquid.java
index 918cd774bc7e9f84ddbc1e65b4cb4d661eb127a5..b6c4b9f08eb5784a293f9d5f25cb7444c2450288 100644
--- a/src/main/java/net/minecraft/server/EntitySquid.java
+++ b/src/main/java/net/minecraft/server/EntitySquid.java
@@ -44,8 +44,8 @@ public class EntitySquid extends EntityWaterAnimal {
 
     private void rotateVectorAroundY(org.bukkit.util.Vector vector, double degrees) {
         double rad = Math.toRadians(degrees);
-        double cos = Math.cos(rad);
-        double sine = Math.sin(rad);
+        double cos = MathHelper.cos(rad);
+        double sine = MathHelper.sin(rad);
         double x = vector.getX();
         double z = vector.getZ();
         vector.setX(cos * x - sine * z);
diff --git a/src/main/java/net/minecraft/server/EntityTNTPrimed.java b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
index b108874d977a4fb1a7c0d52f66bc08390decb4d0..9e89cf0747bdc3d17051bbb3df8f44b514f6ee0a 100644
--- a/src/main/java/net/minecraft/server/EntityTNTPrimed.java
+++ b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
@@ -23,7 +23,7 @@ public class EntityTNTPrimed extends Entity {
         this.setPosition(d0, d1, d2);
         double d3 = world.random.nextDouble() * 6.2831854820251465D;
 
-        this.setMot(-Math.sin(d3) * 0.02D, 0.20000000298023224D, -Math.cos(d3) * 0.02D);
+        this.setMot(-MathHelper.sin(d3) * 0.02D, 0.20000000298023224D, -MathHelper.cos(d3) * 0.02D);
         this.setFuseTicks(80);
         this.lastX = d0;
         this.lastY = d1;
diff --git a/src/main/java/net/minecraft/server/MathHelper.java b/src/main/java/net/minecraft/server/MathHelper.java
index a33485a97ada6a1632565b875d97964cf5161a04..c9a3be7fd3e8a66f066028dda153740a8f3b7b96 100644
--- a/src/main/java/net/minecraft/server/MathHelper.java
+++ b/src/main/java/net/minecraft/server/MathHelper.java
@@ -29,6 +29,14 @@ public class MathHelper {
         return CompactSineLUT.cos(f); // Yatopia - CompactSineLUT
     }
 
+    public static float sin(double f) {
+        return CompactSineLUT.sin((float)f); // Dionysus - CompactSineLUT
+    }
+
+    public static float cos(double f) {
+        return CompactSineLUT.cos((float)f); // Dionysus - CompactSineLUT
+    }
+
     public static float c(float f) {
         return (float) Math.sqrt((double) f);
     }
diff --git a/src/main/java/net/minecraft/server/RandomPositionGenerator.java b/src/main/java/net/minecraft/server/RandomPositionGenerator.java
index aaa89a39bf697bd0f3354005b428d858f065f66b..7c041c4e75796557e69d11396ca13fafbb146f9a 100644
--- a/src/main/java/net/minecraft/server/RandomPositionGenerator.java
+++ b/src/main/java/net/minecraft/server/RandomPositionGenerator.java
@@ -155,8 +155,8 @@ public class RandomPositionGenerator {
             double d1 = MathHelper.d(vec3d.z, vec3d.x) - 1.5707963705062866D;
             double d2 = d1 + (double) (2.0F * random.nextFloat() - 1.0F) * d0;
             double d3 = Math.sqrt(random.nextDouble()) * (double) MathHelper.a * (double) i;
-            double d4 = -d3 * Math.sin(d2);
-            double d5 = d3 * Math.cos(d2);
+            double d4 = -d3 * MathHelper.sin(d2);
+            double d5 = d3 * MathHelper.cos(d2);
 
             if (Math.abs(d4) <= (double) i && Math.abs(d5) <= (double) i) {
                 int l = random.nextInt(2 * j + 1) - j + k;
