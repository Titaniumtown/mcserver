From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Thu, 21 Jan 2021 15:10:13 -0500
Subject: [PATCH] remove unnecessary Internal Server checks


diff --git a/src/main/java/net/minecraft/server/BlockBeehive.java b/src/main/java/net/minecraft/server/BlockBeehive.java
index eda45e7f2f824c42653d6c545172efc7c96ef332..21ce5acc64ca4bc1f622e06d5b4f017509e66fb7 100644
--- a/src/main/java/net/minecraft/server/BlockBeehive.java
+++ b/src/main/java/net/minecraft/server/BlockBeehive.java
@@ -117,7 +117,7 @@ public class BlockBeehive extends BlockTileEntity {
                 this.a(world, iblockdata, blockposition);
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return super.interact(iblockdata, world, blockposition, entityhuman, enumhand, movingobjectpositionblock);
         }
diff --git a/src/main/java/net/minecraft/server/BlockBell.java b/src/main/java/net/minecraft/server/BlockBell.java
index 25c72672eb2c5268d0dc13e29b30efbb9b519cd4..dbb893ad871a4a260029e8fca666cff299081a3c 100644
--- a/src/main/java/net/minecraft/server/BlockBell.java
+++ b/src/main/java/net/minecraft/server/BlockBell.java
@@ -51,7 +51,7 @@ public class BlockBell extends BlockTileEntity {
 
     @Override
     public EnumInteractionResult interact(IBlockData iblockdata, World world, BlockPosition blockposition, EntityHuman entityhuman, EnumHand enumhand, MovingObjectPositionBlock movingobjectpositionblock) {
-        return this.a(world, iblockdata, movingobjectpositionblock, entityhuman, true) ? EnumInteractionResult.a(world.isClientSide) : EnumInteractionResult.PASS;
+        return this.a(world, iblockdata, movingobjectpositionblock, entityhuman, true) ? EnumInteractionResult.a(false) : EnumInteractionResult.PASS;
     }
 
     public boolean a(World world, IBlockData iblockdata, MovingObjectPositionBlock movingobjectpositionblock, @Nullable EntityHuman entityhuman, boolean flag) {
diff --git a/src/main/java/net/minecraft/server/BlockButtonAbstract.java b/src/main/java/net/minecraft/server/BlockButtonAbstract.java
index da6b90cbe6caaf19b98670feb731511dd7dcf904..2d3e4582d0b2086c900402e6f6906028b26bc8af 100644
--- a/src/main/java/net/minecraft/server/BlockButtonAbstract.java
+++ b/src/main/java/net/minecraft/server/BlockButtonAbstract.java
@@ -90,7 +90,7 @@ public abstract class BlockButtonAbstract extends BlockAttachable {
             // CraftBukkit end
             this.d(iblockdata, world, blockposition);
             this.a(entityhuman, world, blockposition, true);
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/BlockCauldron.java b/src/main/java/net/minecraft/server/BlockCauldron.java
index 9fed3883828e7d6ca917a5eca7a7a3e37582f983..6cd0783af980aed3ebd5b5a3a1bb3f9cf0380f5c 100644
--- a/src/main/java/net/minecraft/server/BlockCauldron.java
+++ b/src/main/java/net/minecraft/server/BlockCauldron.java
@@ -66,7 +66,7 @@ public class BlockCauldron extends Block {
                     world.playSound((EntityHuman) null, blockposition, SoundEffects.ITEM_BUCKET_EMPTY, SoundCategory.BLOCKS, 1.0F, 1.0F);
                 }
 
-                return EnumInteractionResult.a(world.isClientSide);
+                return EnumInteractionResult.a(false);
             } else if (item == Items.BUCKET) {
                 if (i == 3 && !world.isClientSide) {
                     // CraftBukkit start
@@ -88,7 +88,7 @@ public class BlockCauldron extends Block {
                     world.playSound((EntityHuman) null, blockposition, SoundEffects.ITEM_BUCKET_FILL, SoundCategory.BLOCKS, 1.0F, 1.0F);
                 }
 
-                return EnumInteractionResult.a(world.isClientSide);
+                return EnumInteractionResult.a(false);
             } else {
                 ItemStack itemstack1;
 
@@ -116,7 +116,7 @@ public class BlockCauldron extends Block {
                         // CraftBukkit end
                     }
 
-                    return EnumInteractionResult.a(world.isClientSide);
+                    return EnumInteractionResult.a(false);
                 } else if (item == Items.POTION && PotionUtil.d(itemstack) == Potions.WATER) {
                     if (i < 3 && !world.isClientSide) {
                         // CraftBukkit start
@@ -137,7 +137,7 @@ public class BlockCauldron extends Block {
                         // CraftBukkit end
                     }
 
-                    return EnumInteractionResult.a(world.isClientSide);
+                    return EnumInteractionResult.a(false);
                 } else {
                     if (i > 0 && item instanceof IDyeable) {
                         IDyeable idyeable = (IDyeable) item;
@@ -180,7 +180,7 @@ public class BlockCauldron extends Block {
                             }
                         }
 
-                        return EnumInteractionResult.a(world.isClientSide);
+                        return EnumInteractionResult.a(false);
                     } else if (i > 0 && item instanceof ItemBlock) {
                         Block block = ((ItemBlock) item).getBlock();
 
diff --git a/src/main/java/net/minecraft/server/BlockCommand.java b/src/main/java/net/minecraft/server/BlockCommand.java
index 6b353a99c04e0312f520f8559c05ddaf51c26aaf..f59c82eb04cf303ada5f694acdaa67d5ba19e8df 100644
--- a/src/main/java/net/minecraft/server/BlockCommand.java
+++ b/src/main/java/net/minecraft/server/BlockCommand.java
@@ -107,7 +107,7 @@ public class BlockCommand extends BlockTileEntity {
 
         if (tileentity instanceof TileEntityCommand && (entityhuman.isCreativeAndOp() || (entityhuman.isCreative() && entityhuman.getBukkitEntity().hasPermission("minecraft.commandblock")))) { // Paper - command block permission
             entityhuman.a((TileEntityCommand) tileentity);
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return EnumInteractionResult.PASS;
         }
diff --git a/src/main/java/net/minecraft/server/BlockComposter.java b/src/main/java/net/minecraft/server/BlockComposter.java
index bd51fb811864009242b460552ecaae35387a335a..950ad907313a9b8970daf607cba8f8bef5603831 100644
--- a/src/main/java/net/minecraft/server/BlockComposter.java
+++ b/src/main/java/net/minecraft/server/BlockComposter.java
@@ -158,10 +158,10 @@ public class BlockComposter extends Block implements IInventoryHolder {
                 }
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else if (i == 8) {
             d(iblockdata, world, blockposition, (Entity) null); // CraftBukkit - no event for players
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return EnumInteractionResult.PASS;
         }
diff --git a/src/main/java/net/minecraft/server/BlockDoor.java b/src/main/java/net/minecraft/server/BlockDoor.java
index 62ff320e349fd77d4020419cb036cf936ae66af9..70dea6b4a50e3d7ef810c935b20ce71a9291c177 100644
--- a/src/main/java/net/minecraft/server/BlockDoor.java
+++ b/src/main/java/net/minecraft/server/BlockDoor.java
@@ -142,7 +142,7 @@ public class BlockDoor extends Block {
             iblockdata = (IBlockData) iblockdata.a((IBlockState) BlockDoor.OPEN);
             world.setTypeAndData(blockposition, iblockdata, 10);
             world.a(entityhuman, (Boolean) iblockdata.get(BlockDoor.OPEN) ? this.d() : this.c(), blockposition, 0);
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/BlockDragonEgg.java b/src/main/java/net/minecraft/server/BlockDragonEgg.java
index ee397cb7fd4160da31efd200ad3db19644abc494..5aa1a4b66de84f2d3640f190969e72e9996255e3 100644
--- a/src/main/java/net/minecraft/server/BlockDragonEgg.java
+++ b/src/main/java/net/minecraft/server/BlockDragonEgg.java
@@ -18,7 +18,7 @@ public class BlockDragonEgg extends BlockFalling {
     @Override
     public EnumInteractionResult interact(IBlockData iblockdata, World world, BlockPosition blockposition, EntityHuman entityhuman, EnumHand enumhand, MovingObjectPositionBlock movingobjectpositionblock) {
         this.d(iblockdata, world, blockposition);
-        return EnumInteractionResult.a(world.isClientSide);
+        return EnumInteractionResult.a(false);
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/BlockEnderChest.java b/src/main/java/net/minecraft/server/BlockEnderChest.java
index 9ab8336df4f1702e9cabefb63f279034fdd57486..e40bb657ebc71c5d002bd9b90cfa2999a643023e 100644
--- a/src/main/java/net/minecraft/server/BlockEnderChest.java
+++ b/src/main/java/net/minecraft/server/BlockEnderChest.java
@@ -40,7 +40,7 @@ public class BlockEnderChest extends BlockChestAbstract<TileEntityEnderChest> im
             BlockPosition blockposition1 = blockposition.up();
 
             if (world.getType(blockposition1).isOccluding(world, blockposition1)) {
-                return EnumInteractionResult.a(world.isClientSide);
+                return EnumInteractionResult.a(false);
             } else if (world.isClientSide) {
                 return EnumInteractionResult.SUCCESS;
             } else {
@@ -76,7 +76,7 @@ public class BlockEnderChest extends BlockChestAbstract<TileEntityEnderChest> im
                 return EnumInteractionResult.CONSUME;
             }
         } else {
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/BlockFenceGate.java b/src/main/java/net/minecraft/server/BlockFenceGate.java
index 327a8a8e5d2e8eddcec885a917f105f22696e104..61014adab59317cd21d09b1cc2f6b2e1dec20cf9 100644
--- a/src/main/java/net/minecraft/server/BlockFenceGate.java
+++ b/src/main/java/net/minecraft/server/BlockFenceGate.java
@@ -96,7 +96,7 @@ public class BlockFenceGate extends BlockFacingHorizontal {
         }
 
         world.a(entityhuman, (Boolean) iblockdata.get(BlockFenceGate.OPEN) ? 1008 : 1014, blockposition, 0);
-        return EnumInteractionResult.a(world.isClientSide);
+        return EnumInteractionResult.a(false);
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/BlockFlowerPot.java b/src/main/java/net/minecraft/server/BlockFlowerPot.java
index c2b3d73c6477f4137f6d2724f9e629939a8e5177..282536925181bc7e5c7e6400fbe438bcd52cfc75 100644
--- a/src/main/java/net/minecraft/server/BlockFlowerPot.java
+++ b/src/main/java/net/minecraft/server/BlockFlowerPot.java
@@ -75,7 +75,7 @@ public class BlockFlowerPot extends Block {
                 world.setTypeAndData(blockposition, Blocks.FLOWER_POT.getBlockData(), 3);
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return EnumInteractionResult.CONSUME;
         }
diff --git a/src/main/java/net/minecraft/server/BlockJukeBox.java b/src/main/java/net/minecraft/server/BlockJukeBox.java
index 9ad57c2f5ae3333478dafe83e5e6abb4c1e7e9cf..dd7b8ccb8a08784e1ac6c59aca1f49e8d6ba7951 100644
--- a/src/main/java/net/minecraft/server/BlockJukeBox.java
+++ b/src/main/java/net/minecraft/server/BlockJukeBox.java
@@ -32,7 +32,7 @@ public class BlockJukeBox extends BlockTileEntity {
             this.dropRecord(world, blockposition);
             iblockdata = (IBlockData) iblockdata.set(BlockJukeBox.HAS_RECORD, false);
             world.setTypeAndData(blockposition, iblockdata, 2);
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return EnumInteractionResult.PASS;
         }
diff --git a/src/main/java/net/minecraft/server/BlockLectern.java b/src/main/java/net/minecraft/server/BlockLectern.java
index 87bdc49f90eee5c45ffee1d8fd5085198339fe9c..788afb2a9b070e912ea467a846aaaa8dec3fd877 100644
--- a/src/main/java/net/minecraft/server/BlockLectern.java
+++ b/src/main/java/net/minecraft/server/BlockLectern.java
@@ -223,7 +223,7 @@ public class BlockLectern extends BlockTileEntity {
                 this.a(world, blockposition, entityhuman);
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             ItemStack itemstack = entityhuman.b(enumhand);
 
diff --git a/src/main/java/net/minecraft/server/BlockPumpkin.java b/src/main/java/net/minecraft/server/BlockPumpkin.java
index dd33a093e759a85c9534c63d66831ebe4ef2270e..8f4f21f724036be623a67299423a708234e9199a 100644
--- a/src/main/java/net/minecraft/server/BlockPumpkin.java
+++ b/src/main/java/net/minecraft/server/BlockPumpkin.java
@@ -13,7 +13,7 @@ public class BlockPumpkin extends BlockStemmed {
         ItemStack itemstack = entityhuman.b(enumhand);
 
         if (itemstack.getItem() == Items.SHEARS) {
-            if (!world.isClientSide) {
+            // if (!world.isClientSide) {
                 // Paper start - Add PlayerShearBlockEvent
                 PlayerShearBlockEvent event = new PlayerShearBlockEvent((org.bukkit.entity.Player) entityhuman.getBukkitEntity(), MCUtil.toBukkitBlock(world, blockposition), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack), (enumhand == EnumHand.OFF_HAND ? org.bukkit.inventory.EquipmentSlot.OFF_HAND : org.bukkit.inventory.EquipmentSlot.HAND), new java.util.ArrayList<>());
                 event.getDrops().add(org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(new ItemStack(Items.PUMPKIN_SEEDS, 4)));
@@ -37,9 +37,9 @@ public class BlockPumpkin extends BlockStemmed {
                 itemstack.damage(1, entityhuman, (entityhuman1) -> {
                     entityhuman1.broadcastItemBreak(enumhand);
                 });
-            }
+            // }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return super.interact(iblockdata, world, blockposition, entityhuman, enumhand, movingobjectpositionblock);
         }
diff --git a/src/main/java/net/minecraft/server/BlockRedstoneComparator.java b/src/main/java/net/minecraft/server/BlockRedstoneComparator.java
index 3e771f6d770932b8b71b9e13c3adf71ac9249709..100ceb875901dd9a1830e2676fd436d1f1d83255 100644
--- a/src/main/java/net/minecraft/server/BlockRedstoneComparator.java
+++ b/src/main/java/net/minecraft/server/BlockRedstoneComparator.java
@@ -88,7 +88,7 @@ public class BlockRedstoneComparator extends BlockDiodeAbstract implements ITile
             world.playSound(entityhuman, blockposition, SoundEffects.BLOCK_COMPARATOR_CLICK, SoundCategory.BLOCKS, 0.3F, f);
             world.setTypeAndData(blockposition, iblockdata, 2);
             this.f(world, blockposition, iblockdata);
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/BlockRespawnAnchor.java b/src/main/java/net/minecraft/server/BlockRespawnAnchor.java
index 521d161a3d015b641b61de21401c79ac20eb73a7..f26d75397e1f6d30e954cbb680d672d616cbff7e 100644
--- a/src/main/java/net/minecraft/server/BlockRespawnAnchor.java
+++ b/src/main/java/net/minecraft/server/BlockRespawnAnchor.java
@@ -29,7 +29,7 @@ public class BlockRespawnAnchor extends Block {
                 itemstack.subtract(1);
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else if ((Integer) iblockdata.get(BlockRespawnAnchor.a) == 0) {
             return EnumInteractionResult.PASS;
         } else if (!a(world)) {
@@ -37,7 +37,7 @@ public class BlockRespawnAnchor extends Block {
                 this.d(iblockdata, world, blockposition);
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             if (!world.isClientSide) {
                 EntityPlayer entityplayer = (EntityPlayer) entityhuman;
diff --git a/src/main/java/net/minecraft/server/BlockSweetBerryBush.java b/src/main/java/net/minecraft/server/BlockSweetBerryBush.java
index 3aa46479dcc462b62026195eb6f5abe8a193c443..c04fb78e2041aa3172751911a69478adc4d5c572 100644
--- a/src/main/java/net/minecraft/server/BlockSweetBerryBush.java
+++ b/src/main/java/net/minecraft/server/BlockSweetBerryBush.java
@@ -79,7 +79,7 @@ public class BlockSweetBerryBush extends BlockPlant implements IBlockFragilePlan
             // CraftBukkit end
             world.playSound((EntityHuman) null, blockposition, SoundEffects.ITEM_SWEET_BERRIES_PICK_FROM_BUSH, SoundCategory.BLOCKS, 1.0F, 0.8F + world.random.nextFloat() * 0.4F);
             world.setTypeAndData(blockposition, (IBlockData) iblockdata.set(BlockSweetBerryBush.a, 1), 2);
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return super.interact(iblockdata, world, blockposition, entityhuman, enumhand, movingobjectpositionblock);
         }
diff --git a/src/main/java/net/minecraft/server/BlockTNT.java b/src/main/java/net/minecraft/server/BlockTNT.java
index 7b601955f3fd36f06c838b896b455a606954d980..dfb42d69b963651525e7a7c1c0a93893ae5f8410 100644
--- a/src/main/java/net/minecraft/server/BlockTNT.java
+++ b/src/main/java/net/minecraft/server/BlockTNT.java
@@ -105,7 +105,7 @@ public class BlockTNT extends Block {
                 }
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/BlockTrapdoor.java b/src/main/java/net/minecraft/server/BlockTrapdoor.java
index 313b1bdd2cb78564e09ba7fa05ccfc8d7ab1c373..0ee6fdc720eeb59735689545684e83913a22e6d0 100644
--- a/src/main/java/net/minecraft/server/BlockTrapdoor.java
+++ b/src/main/java/net/minecraft/server/BlockTrapdoor.java
@@ -66,7 +66,7 @@ public class BlockTrapdoor extends BlockFacingHorizontal implements IBlockWaterl
             }
 
             this.a(entityhuman, world, blockposition, (Boolean) iblockdata.get(BlockTrapdoor.OPEN));
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index 8b8ecc2d8925b3c209d99e101f6e478b08d86db9..cf552b890c79a5526d17b4b566e7f8050acb8a98 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -718,11 +718,13 @@ public class Chunk implements IChunkAccess {
                 this.world.getChunkProvider().getLightEngine().a(blockposition, flag2);
             }
 
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 iblockdata1.remove(this.world, blockposition, iblockdata, flag);
+            /*
             } else if (block1 != block && block1 instanceof ITileEntity) {
                 this.world.removeTileEntity(blockposition);
             }
+            */
 
             if (!chunksection.getType(i, j & 15, k).a(block)) {
                 return null;
@@ -737,7 +739,8 @@ public class Chunk implements IChunkAccess {
                 }
 
                 // CraftBukkit - Don't place while processing the BlockPlaceEvent, unless it's a BlockContainer. Prevents blocks such as TNT from activating when cancelled.
-                if (!this.world.isClientSide && doPlace && (!this.world.captureBlockStates || block instanceof BlockTileEntity)) {
+                // if (!this.world.isClientSide && doPlace && (!this.world.captureBlockStates || block instanceof BlockTileEntity)) {
+                if (doPlace && (!this.world.captureBlockStates || block instanceof BlockTileEntity)) {
                     iblockdata.onPlace(this.world, blockposition, iblockdata1, flag);
                 }
 
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index e629f10cdbd70a354f9edaa75973b169a8588d08..cf18bf7759caa84f5315d59941b66b3b67393011 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -448,9 +448,9 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     }
 
     public void tick() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.setFlag(6, this.bE());
-        }
+        // }
 
         this.entityBaseTick();
     }
@@ -485,9 +485,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
         this.aK();
         this.m();
         this.aJ();
+        /*
         if (this.world.isClientSide) {
             this.extinguish();
         } else if (this.fireTicks > 0) {
+        */
+        if (this.fireTicks > 0) {
             if (this.isFireProof()) {
                 this.setFireTicks(this.fireTicks - 4);
                 if (this.fireTicks < 0) {
@@ -518,9 +521,9 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
         this.performVoidDamage();
         // Paper end
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.setFlag(0, this.fireTicks > 0);
-        }
+        // }
 
         this.justCreated = false;
         this.world.getMethodProfiler().exit();
@@ -2151,8 +2154,10 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     public EntityItem a(ItemStack itemstack, float f) {
         if (itemstack.isEmpty()) {
             return null;
+        /*
         } else if (this.world.isClientSide) {
             return null;
+        */
         } else {
             // CraftBukkit start - Capture drops for death event
             if (this instanceof EntityLiving && !((EntityLiving) this).forceDrops) {
@@ -2331,7 +2336,8 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
                 return false;
             }
             // Spigot end
-            if (!this.world.isClientSide && entity instanceof EntityHuman && !(this.getRidingPassenger() instanceof EntityHuman)) {
+            // if (!this.world.isClientSide && entity instanceof EntityHuman && !(this.getRidingPassenger() instanceof EntityHuman)) {
+            if (entity instanceof EntityHuman && !(this.getRidingPassenger() instanceof EntityHuman)) {
                 this.passengers.add(0, entity);
             } else {
                 this.passengers.add(entity);
@@ -2419,7 +2425,8 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
             if (!(world.purpurConfig.playerFixStuckPortal && this instanceof EntityPlayer && !blockposition.equals(portalPos))) // Purpur
             this.resetPortalCooldown();
         } else if (world.purpurConfig.entitiesCanUsePortals || this instanceof EntityPlayer) { // Purpur
-            if (!this.world.isClientSide && !blockposition.equals(this.ac)) {
+            // if (!this.world.isClientSide && !blockposition.equals(this.ac)) {
+            if (!blockposition.equals(this.ac)) {
                 this.ac = blockposition.immutableCopy();
                 portalPos = BlockPosition.ZERO; // Purpur
             }
@@ -2486,9 +2493,10 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     public void setSlot(EnumItemSlot enumitemslot, ItemStack itemstack) {}
 
     public boolean isBurning() {
-        boolean flag = this.world != null && this.world.isClientSide;
+        // boolean flag = this.world != null && this.world.isClientSide;
 
-        return !this.isFireProof() && (this.fireTicks > 0 || flag && this.getFlag(0));
+        // return !this.isFireProof() && (this.fireTicks > 0 || flag && this.getFlag(0));
+        return !this.isFireProof() && this.fireTicks > 0;
     }
 
     public boolean isPassenger() {
@@ -2560,14 +2568,15 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
 
     public boolean isGlowing() { return bE(); } // Purpur - OBFHELPER
     public boolean bE() {
-        return this.glowing || this.world.isClientSide && this.getFlag(6);
+        // return this.glowing || this.world.isClientSide && this.getFlag(6);
+        return this.glowing;
     }
 
     public void i(boolean flag) {
         this.glowing = flag;
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.setFlag(6, this.glowing);
-        }
+        // }
 
     }
 
@@ -3149,7 +3158,8 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
             AxisAlignedBB axisalignedbb = this.getBoundingBox();
 
             this.a(new AxisAlignedBB(axisalignedbb.minX, axisalignedbb.minY, axisalignedbb.minZ, axisalignedbb.minX + (double) entitysize1.width, axisalignedbb.minY + (double) entitysize1.height, axisalignedbb.minZ + (double) entitysize1.width));
-            if (entitysize1.width > entitysize.width && !this.justCreated && !this.world.isClientSide) {
+            // if (entitysize1.width > entitysize.width && !this.justCreated && !this.world.isClientSide) {
+            if (entitysize1.width > entitysize.width && !this.justCreated) {
                 float f = entitysize.width - entitysize1.width;
 
                 this.move(EnumMoveType.SELF, new Vec3D((double) f, 0.0D, (double) f));
@@ -3408,7 +3418,8 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     public boolean cs() {
         Entity entity = this.getRidingPassenger();
 
-        return entity instanceof EntityHuman ? ((EntityHuman) entity).ez() : !this.world.isClientSide;
+        // return entity instanceof EntityHuman ? ((EntityHuman) entity).ez() : !this.world.isClientSide;
+        return entity instanceof EntityHuman ? ((EntityHuman) entity).ez() : true;
     }
 
     protected static Vec3D a(double d0, double d1, float f) {
diff --git a/src/main/java/net/minecraft/server/EntityAgeable.java b/src/main/java/net/minecraft/server/EntityAgeable.java
index de48dc7cd1996f1a62ef1d0047b1182d7889bd38..1d3b478a6e11bca4df5541de243dfda6d4dc3136 100644
--- a/src/main/java/net/minecraft/server/EntityAgeable.java
+++ b/src/main/java/net/minecraft/server/EntityAgeable.java
@@ -19,7 +19,8 @@ public abstract class EntityAgeable extends EntityCreature {
     public void inactiveTick()
     {
         super.inactiveTick();
-        if ( this.world.isClientSide || this.ageLocked )
+        // if ( this.world.isClientSide || this.ageLocked )
+        if (this.ageLocked)
         { // CraftBukkit
             this.updateSize();
         } else
@@ -69,7 +70,8 @@ public abstract class EntityAgeable extends EntityCreature {
     }
 
     public int getAge() {
-        return this.world.isClientSide ? ((Boolean) this.datawatcher.get(EntityAgeable.bo) ? -1 : 1) : this.b;
+        // return this.world.isClientSide ? ((Boolean) this.datawatcher.get(EntityAgeable.bo) ? -1 : 1) : this.b;
+        return this.b;
     }
 
     public void setAge(int i, boolean flag) {
@@ -141,7 +143,8 @@ public abstract class EntityAgeable extends EntityCreature {
     @Override
     public void movementTick() {
         super.movementTick();
-        if (this.world.isClientSide || ageLocked) { // CraftBukkit
+        // if (this.world.isClientSide || ageLocked) { // CraftBukkit
+        if (ageLocked) { // CraftBukkit
             if (this.d > 0) {
                 if (this.d % 4 == 0) {
                     this.world.addParticle(Particles.HAPPY_VILLAGER, this.d(1.0D), this.cF() + 0.5D, this.g(1.0D), 0.0D, 0.0D, 0.0D);
diff --git a/src/main/java/net/minecraft/server/EntityAnimal.java b/src/main/java/net/minecraft/server/EntityAnimal.java
index dd6725debe0cf72dce13b6f2cac0556060e0eb41..58fc793a862f65285f9b92d824094dddea475964 100644
--- a/src/main/java/net/minecraft/server/EntityAnimal.java
+++ b/src/main/java/net/minecraft/server/EntityAnimal.java
@@ -121,7 +121,8 @@ public abstract class EntityAnimal extends EntityAgeable {
         if (this.k(itemstack)) {
             int i = this.getAge();
 
-            if (!this.world.isClientSide && i == 0 && this.eP() && (this.world.purpurConfig.animalBreedingCooldownSeconds <= 0 || !this.world.hasBreedingCooldown(entityhuman.getUniqueID(), this.getClass()))) { // Purpur
+            // if (!this.world.isClientSide && i == 0 && this.eP() && (this.world.purpurConfig.animalBreedingCooldownSeconds <= 0 || !this.world.hasBreedingCooldown(entityhuman.getUniqueID(), this.getClass()))) { // Purpur
+            if (i == 0 && this.eP() && (this.world.purpurConfig.animalBreedingCooldownSeconds <= 0 || !this.world.hasBreedingCooldown(entityhuman.getUniqueID(), this.getClass()))) { // Purpur
                 this.a(entityhuman, itemstack);
                 this.g(entityhuman);
                 return EnumInteractionResult.SUCCESS;
@@ -130,12 +131,13 @@ public abstract class EntityAnimal extends EntityAgeable {
             if (this.isBaby()) {
                 this.a(entityhuman, itemstack);
                 this.setAge((int) ((float) (-i / 20) * 0.1F), true);
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
-
+            /*
             if (this.world.isClientSide) {
                 return EnumInteractionResult.CONSUME;
             }
+            */
         }
 
         return super.b(entityhuman, enumhand);
diff --git a/src/main/java/net/minecraft/server/EntityAreaEffectCloud.java b/src/main/java/net/minecraft/server/EntityAreaEffectCloud.java
index 5b0ee830b45a677bf354b02cf4fd311d842e7678..4cf2d526839dc2470190746b2842c67a014a27aa 100644
--- a/src/main/java/net/minecraft/server/EntityAreaEffectCloud.java
+++ b/src/main/java/net/minecraft/server/EntityAreaEffectCloud.java
@@ -64,9 +64,9 @@ public class EntityAreaEffectCloud extends Entity {
     }
 
     public void setRadius(float f) {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.getDataWatcher().set(EntityAreaEffectCloud.c, f);
-        }
+        // }
 
     }
 
@@ -181,7 +181,7 @@ public class EntityAreaEffectCloud extends Entity {
             return;
         }
         // Paper end
-
+        /*
         if (this.world.isClientSide) {
             ParticleParam particleparam = this.getParticle();
             float f1;
@@ -233,6 +233,7 @@ public class EntityAreaEffectCloud extends Entity {
                 }
             }
         } else {
+        */
             if (this.ticksLived >= this.waitTime + this.duration) {
                 this.die();
                 return;
@@ -344,7 +345,7 @@ public class EntityAreaEffectCloud extends Entity {
                     }
                 }
             }
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java
index 91df44d2e4f09fb612ae7bcb6c6a3dbb99aaba41..3abe37381e1872934eac3cbf71e9ad2a42d11a84 100644
--- a/src/main/java/net/minecraft/server/EntityArmorStand.java
+++ b/src/main/java/net/minecraft/server/EntityArmorStand.java
@@ -467,7 +467,8 @@ public class EntityArmorStand extends EntityLiving {
 
     @Override
     public boolean damageEntity(DamageSource damagesource, float f) {
-        if (!this.world.isClientSide && !this.dead) {
+        // if (!this.world.isClientSide && !this.dead) {
+        if (!this.dead) {
             if (DamageSource.OUT_OF_WORLD.equals(damagesource)) {
                 // CraftBukkit start
                 if (org.bukkit.craftbukkit.event.CraftEventFactory.handleNonLivingEntityDamageEvent(this, damagesource, f)) {
diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 2e11286e2baffa66bea9570b0377478cd45fac1e..1f15ac9ddc6c73677b3ebe2fa49235848211c83f 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -127,7 +127,8 @@ public abstract class EntityArrow extends IProjectile {
         if (this.inGround && !flag) {
             if (this.ag != iblockdata && this.u()) {
                 this.z();
-            } else if (!this.world.isClientSide) {
+            // } else if (!this.world.isClientSide) {
+            } else {
                 this.h();
             }
 
@@ -350,7 +351,8 @@ public abstract class EntityArrow extends IProjectile {
             if (entity instanceof EntityLiving) {
                 EntityLiving entityliving = (EntityLiving) entity;
 
-                if (!this.world.isClientSide && this.getPierceLevel() <= 0) {
+                // if (!this.world.isClientSide && this.getPierceLevel() <= 0) {
+                if (this.getPierceLevel() <= 0) {
                     entityliving.setArrowCount(entityliving.getArrowCount() + 1);
                 }
 
@@ -362,7 +364,8 @@ public abstract class EntityArrow extends IProjectile {
                     }
                 }
 
-                if (!this.world.isClientSide && entity1 instanceof EntityLiving) {
+                // if (!this.world.isClientSide && entity1 instanceof EntityLiving) {
+                if (entity1 instanceof EntityLiving) {
                     EnchantmentManager.a(entityliving, entity1);
                     EnchantmentManager.b((EntityLiving) entity1, (Entity) entityliving);
                 }
@@ -376,7 +379,8 @@ public abstract class EntityArrow extends IProjectile {
                     this.am.add(entityliving);
                 }
 
-                if (!this.world.isClientSide && entity1 instanceof EntityPlayer) {
+                // if (!this.world.isClientSide && entity1 instanceof EntityPlayer) {
+                if (entity1 instanceof EntityPlayer) {
                     EntityPlayer entityplayer = (EntityPlayer) entity1;
 
                     if (this.am != null && this.isShotFromCrossbow()) {
@@ -396,7 +400,8 @@ public abstract class EntityArrow extends IProjectile {
             this.setMot(this.getMot().a(-0.1D));
             this.yaw += 180.0F;
             this.lastYaw += 180.0F;
-            if (!this.world.isClientSide && this.getMot().g() < 1.0E-7D) {
+            // if (!this.world.isClientSide && this.getMot().g() < 1.0E-7D) {
+            if (this.getMot().g() < 1.0E-7D) {
                 if (this.fromPlayer == EntityArrow.PickupStatus.ALLOWED) {
                     this.a(this.getItemStack(), 0.1F);
                 }
@@ -505,7 +510,8 @@ public abstract class EntityArrow extends IProjectile {
 
     @Override
     public void pickup(EntityHuman entityhuman) {
-        if (!this.world.isClientSide && (this.inGround || this.t()) && this.shake <= 0) {
+        // if (!this.world.isClientSide && (this.inGround || this.t()) && this.shake <= 0) {
+        if ((this.inGround || this.t()) && this.shake <= 0) {
             // CraftBukkit start
             ItemStack itemstack = this.getItemStack();
             if (this.fromPlayer == PickupStatus.ALLOWED && !itemstack.isEmpty() && entityhuman.inventory.canHold(itemstack) > 0) {
@@ -628,7 +634,8 @@ public abstract class EntityArrow extends IProjectile {
     }
 
     public boolean t() {
-        return !this.world.isClientSide ? this.noclip : ((Byte) this.datawatcher.get(EntityArrow.f) & 2) != 0;
+        // return !this.world.isClientSide ? this.noclip : ((Byte) this.datawatcher.get(EntityArrow.f) & 2) != 0;
+        return this.noclip;
     }
 
     public void setShotFromCrossbow(boolean flag) {
diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java
index c6ef1c30d3a2269954fa2bfa0eb34a1478b58df6..e3307ac75cab18442e6323e0b6ba107deab2aa9d 100644
--- a/src/main/java/net/minecraft/server/EntityBat.java
+++ b/src/main/java/net/minecraft/server/EntityBat.java
@@ -238,7 +238,8 @@ public class EntityBat extends EntityAmbient {
         if (this.isInvulnerable(damagesource)) {
             return false;
         } else {
-            if (!this.world.isClientSide && this.isAsleep()) {
+            // if (!this.world.isClientSide && this.isAsleep()) {
+            if (this.isAsleep()) {
                 // CraftBukkit Start - Call BatToggleSleepEvent
                 if (CraftEventFactory.handleBatToggleSleepEvent(this, true)) {
                     this.setAsleep(false);
diff --git a/src/main/java/net/minecraft/server/EntityBee.java b/src/main/java/net/minecraft/server/EntityBee.java
index 6aee58fb0c6b9c1ae4ac6157e02a5050cd835536..34c132f465534089f9eadbc0a23d358cc944727b 100644
--- a/src/main/java/net/minecraft/server/EntityBee.java
+++ b/src/main/java/net/minecraft/server/EntityBee.java
@@ -328,9 +328,9 @@ public class EntityBee extends EntityAnimal implements IEntityAngerable, EntityB
             ++this.ticksSincePollination;
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.a((WorldServer) this.world, false);
-        }
+        // }
 
     }
 
@@ -411,7 +411,7 @@ public class EntityBee extends EntityAnimal implements IEntityAngerable, EntityB
     @Override
     public void movementTick() {
         super.movementTick();
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             if (this.cannotEnterHiveTicks > 0) {
                 --this.cannotEnterHiveTicks;
             }
@@ -430,7 +430,7 @@ public class EntityBee extends EntityAnimal implements IEntityAngerable, EntityB
             if (this.ticksLived % 20 == 0 && !this.fj()) {
                 this.hivePos = null;
             }
-        }
+        // }
 
     }
 
@@ -586,7 +586,8 @@ public class EntityBee extends EntityAnimal implements IEntityAngerable, EntityB
             // CraftBukkit start
             boolean result = super.damageEntity(damagesource, f);
 
-            if (result && !this.world.isClientSide) {
+            // if (result && !this.world.isClientSide) {
+            if (result) {
                 this.bC.l();
             }
 
diff --git a/src/main/java/net/minecraft/server/EntityBlaze.java b/src/main/java/net/minecraft/server/EntityBlaze.java
index 90b90fa33b39020189a1d4a5826fa3ab720488cd..318adcdd8713adc12ee9abff98f4996eb87f817a 100644
--- a/src/main/java/net/minecraft/server/EntityBlaze.java
+++ b/src/main/java/net/minecraft/server/EntityBlaze.java
@@ -100,7 +100,7 @@ public class EntityBlaze extends EntityMonster {
         if (!this.onGround && this.getMot().y < 0.0D) {
             this.setMot(this.getMot().d(1.0D, 0.6D, 1.0D));
         }
-
+        /*
         if (this.world.isClientSide) {
             if (this.random.nextInt(24) == 0 && !this.isSilent()) {
                 this.world.a(this.locX() + 0.5D, this.locY() + 0.5D, this.locZ() + 0.5D, SoundEffects.ENTITY_BLAZE_BURN, this.getSoundCategory(), 1.0F + this.random.nextFloat(), this.random.nextFloat() * 0.7F + 0.3F, false);
@@ -110,6 +110,7 @@ public class EntityBlaze extends EntityMonster {
                 this.world.addParticle(Particles.LARGE_SMOKE, this.d(0.5D), this.cF(), this.g(0.5D), 0.0D, 0.0D, 0.0D);
             }
         }
+        */
 
         super.movementTick();
     }
diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java
index 72d2eea40c37b5fa627c8deeda1802734e94f866..0e05d5a44d15ab279c7dfca9a57a73662f8d0818 100644
--- a/src/main/java/net/minecraft/server/EntityBoat.java
+++ b/src/main/java/net/minecraft/server/EntityBoat.java
@@ -124,7 +124,8 @@ public class EntityBoat extends Entity {
     public boolean damageEntity(DamageSource damagesource, float f) {
         if (this.isInvulnerable(damagesource)) {
             return false;
-        } else if (!this.world.isClientSide && !this.dead) {
+        // } else if (!this.world.isClientSide && !this.dead) {
+        } else if (!this.dead) {
             // CraftBukkit start
             Vehicle vehicle = (Vehicle) this.getBukkitEntity();
             org.bukkit.entity.Entity attacker = (damagesource.getEntity() == null) ? null : damagesource.getEntity().getBukkitEntity();
@@ -175,13 +176,13 @@ public class EntityBoat extends Entity {
 
     @Override
     public void k(boolean flag) {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.aA = true;
             this.aB = flag;
             if (this.z() == 0) {
                 this.d(60);
             }
-        }
+        // }
 
         this.world.addParticle(Particles.SPLASH, this.locX() + (double) this.random.nextFloat(), this.locY() + 0.7D, this.locZ() + (double) this.random.nextFloat(), 0.0D, 0.0D, 0.0D);
         if (this.random.nextInt(20) == 0) {
@@ -263,7 +264,8 @@ public class EntityBoat extends Entity {
             ++this.aj;
         }
 
-        if (!this.world.isClientSide && this.aj >= 60.0F) {
+        // if (!this.world.isClientSide && this.aj >= 60.0F) {
+        if (this.aj >= 60.0F) {
             this.ejectPassengers();
         }
 
@@ -283,10 +285,12 @@ public class EntityBoat extends Entity {
             }
 
             this.v();
+            /*
             if (this.world.isClientSide) {
                 this.x();
                 this.world.a((Packet) (new PacketPlayInBoatMove(this.a(0), this.a(1))));
             }
+            */
 
             this.move(EnumMoveType.SELF, this.getMot());
         } else {
@@ -335,7 +339,8 @@ public class EntityBoat extends Entity {
         List<Entity> list = this.world.getEntities(this, this.getBoundingBox().grow(0.20000000298023224D, -0.009999999776482582D, 0.20000000298023224D), IEntitySelector.a(this));
 
         if (!list.isEmpty()) {
-            boolean flag = !this.world.isClientSide && !(this.getRidingPassenger() instanceof EntityHuman);
+            // boolean flag = !this.world.isClientSide && !(this.getRidingPassenger() instanceof EntityHuman);
+            boolean flag = !(this.getRidingPassenger() instanceof EntityHuman);
 
             for (int j = 0; j < list.size(); ++j) {
                 Entity entity = (Entity) list.get(j);
@@ -355,6 +360,7 @@ public class EntityBoat extends Entity {
     private void q() {
         int i;
 
+        /*
         if (this.world.isClientSide) {
             i = this.z();
             if (i > 0) {
@@ -367,6 +373,7 @@ public class EntityBoat extends Entity {
             this.aE = this.aD;
             this.aD = 10.0F * (float) Math.sin((double) (0.5F * (float) this.world.getTime())) * this.aC;
         } else {
+        */
             if (!this.aA) {
                 this.d(0);
             }
@@ -391,7 +398,7 @@ public class EntityBoat extends Entity {
 
                 this.aA = false;
             }
-        }
+        // }
 
     }
 
@@ -778,7 +785,8 @@ public class EntityBoat extends Entity {
 
     @Override
     public EnumInteractionResult a(EntityHuman entityhuman, EnumHand enumhand) {
-        return entityhuman.eq() ? EnumInteractionResult.PASS : (this.aj < 60.0F ? (!this.world.isClientSide ? (entityhuman.startRiding(this) ? EnumInteractionResult.CONSUME : EnumInteractionResult.PASS) : EnumInteractionResult.SUCCESS) : EnumInteractionResult.PASS);
+        // return entityhuman.eq() ? EnumInteractionResult.PASS : (this.aj < 60.0F ? (!this.world.isClientSide ? (entityhuman.startRiding(this) ? EnumInteractionResult.CONSUME : EnumInteractionResult.PASS) : EnumInteractionResult.SUCCESS) : EnumInteractionResult.PASS);
+        return entityhuman.eq() ? EnumInteractionResult.PASS : (this.aj < 60.0F ? (entityhuman.startRiding(this) ? EnumInteractionResult.CONSUME : EnumInteractionResult.PASS) : EnumInteractionResult.PASS);
     }
 
     @Override
@@ -793,7 +801,8 @@ public class EntityBoat extends Entity {
                     }
 
                     this.b(this.fallDistance, 1.0F);
-                    if (!this.world.isClientSide && !this.dead) {
+                    // if (!this.world.isClientSide && !this.dead) {
+                    if (!this.dead) {
                     // CraftBukkit start
                     Vehicle vehicle = (Vehicle) this.getBukkitEntity();
                     VehicleDestroyEvent destroyEvent = new VehicleDestroyEvent(vehicle, null);
diff --git a/src/main/java/net/minecraft/server/EntityCat.java b/src/main/java/net/minecraft/server/EntityCat.java
index e411da6f0f55b965fe9e303cf3b56201d33cd260..20a5a5a302632c37d0050ea8aa6723a29fa2998c 100644
--- a/src/main/java/net/minecraft/server/EntityCat.java
+++ b/src/main/java/net/minecraft/server/EntityCat.java
@@ -339,9 +339,11 @@ public class EntityCat extends EntityTameableAnimal {
         ItemStack itemstack = entityhuman.b(enumhand);
         Item item = itemstack.getItem();
 
+        /*
         if (this.world.isClientSide) {
             return this.isTamed() && this.i((EntityLiving) entityhuman) ? EnumInteractionResult.SUCCESS : (this.k(itemstack) && (this.getHealth() < this.getMaxHealth() || !this.isTamed()) ? EnumInteractionResult.SUCCESS : EnumInteractionResult.PASS);
         } else {
+        */
             EnumInteractionResult enuminteractionresult;
 
             if (this.isTamed()) {
@@ -393,7 +395,7 @@ public class EntityCat extends EntityTameableAnimal {
             }
 
             return enuminteractionresult;
-        }
+        // }
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityChicken.java b/src/main/java/net/minecraft/server/EntityChicken.java
index 18aed81061a4033627214a65d38cd9509ed0f8e9..384157c2488925d489ed214ba2a77f9aba294066 100644
--- a/src/main/java/net/minecraft/server/EntityChicken.java
+++ b/src/main/java/net/minecraft/server/EntityChicken.java
@@ -97,7 +97,8 @@ public class EntityChicken extends EntityAnimal {
         }
 
         this.bo += this.bs * 2.0F;
-        if (!this.world.isClientSide && this.isAlive() && !this.isBaby() && !this.isChickenJockey() && --this.eggLayTime <= 0) {
+        // if (!this.world.isClientSide && this.isAlive() && !this.isBaby() && !this.isChickenJockey() && --this.eggLayTime <= 0) {
+        if (this.isAlive() && !this.isBaby() && !this.isChickenJockey() && --this.eggLayTime <= 0) {
             this.playSound(SoundEffects.ENTITY_CHICKEN_EGG, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
             this.forceDrops = true; // CraftBukkit
             this.a((IMaterial) Items.EGG);
diff --git a/src/main/java/net/minecraft/server/EntityCow.java b/src/main/java/net/minecraft/server/EntityCow.java
index 951531d65709ee3064371cbf4b3a9831a47b12aa..2d45a1a5202e1da2bf000589300c7f823f712422 100644
--- a/src/main/java/net/minecraft/server/EntityCow.java
+++ b/src/main/java/net/minecraft/server/EntityCow.java
@@ -94,7 +94,7 @@ public class EntityCow extends EntityAnimal {
             ItemStack itemstack1 = ItemLiquidUtil.a(itemstack, entityhuman, CraftItemStack.asNMSCopy(event.getItemStack())); // CraftBukkit
 
             entityhuman.a(enumhand, itemstack1);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         // Purpur start - feed mushroom to change to mooshroom
         } else if (world.purpurConfig.cowFeedMushrooms > 0 && getEntityType() != EntityTypes.MOOSHROOM && isMushroom(itemstack)) {
             return feedMushroom(entityhuman, enumhand, itemstack);
diff --git a/src/main/java/net/minecraft/server/EntityCreeper.java b/src/main/java/net/minecraft/server/EntityCreeper.java
index b48610fefc8c72922a00dbab861de7b34d5ec1cf..2e5e90ce6687bb598909367585de3112671364e9 100644
--- a/src/main/java/net/minecraft/server/EntityCreeper.java
+++ b/src/main/java/net/minecraft/server/EntityCreeper.java
@@ -272,21 +272,21 @@ public class EntityCreeper extends EntityMonster {
 
         if (itemstack.getItem() == Items.FLINT_AND_STEEL) {
             this.world.playSound(entityhuman, this.locX(), this.locY(), this.locZ(), SoundEffects.ITEM_FLINTANDSTEEL_USE, this.getSoundCategory(), 1.0F, this.random.nextFloat() * 0.4F + 0.8F);
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.ignite();
                 itemstack.damage(1, entityhuman, (entityhuman1) -> {
                     entityhuman1.broadcastItemBreak(enumhand);
                 });
-            }
+            // }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             return super.b(entityhuman, enumhand);
         }
     }
 
     public void explode() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             Explosion.Effect explosion_effect = this.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING) && world.purpurConfig.creeperAllowGriefing ? Explosion.Effect.DESTROY : Explosion.Effect.NONE; // Purpur
             float f = this.isPowered() ? 2.0F : 1.0F;
 
@@ -303,7 +303,7 @@ public class EntityCreeper extends EntityMonster {
                 this.datawatcher.set(isIgnitedDW, Boolean.valueOf(false)); // Paper
             }
             // CraftBukkit end
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityDolphin.java b/src/main/java/net/minecraft/server/EntityDolphin.java
index 82021ba825d6a36191174acf83d109a5c74f6db8..1f971872f4f070311bd66e7a1b3d983cfe5fa605 100644
--- a/src/main/java/net/minecraft/server/EntityDolphin.java
+++ b/src/main/java/net/minecraft/server/EntityDolphin.java
@@ -263,7 +263,7 @@ public class EntityDolphin extends EntityWaterAnimal {
                     this.impulse = true;
                 }
             }
-
+            /*
             if (this.world.isClientSide && this.isInWater() && this.getMot().g() > 0.03D) {
                 Vec3D vec3d = this.f(0.0F);
                 float f = MathHelper.cos(this.yaw * 0.017453292F) * 0.3F;
@@ -275,6 +275,7 @@ public class EntityDolphin extends EntityWaterAnimal {
                     this.world.addParticle(Particles.DOLPHIN, this.locX() - vec3d.x * (double) f2 - (double) f, this.locY() - vec3d.y, this.locZ() - vec3d.z * (double) f2 - (double) f1, 0.0D, 0.0D, 0.0D);
                 }
             }
+            */
 
         }
     }
@@ -284,16 +285,16 @@ public class EntityDolphin extends EntityWaterAnimal {
         ItemStack itemstack = entityhuman.b(enumhand);
 
         if (!itemstack.isEmpty() && itemstack.getItem().a((Tag) TagsItem.FISHES)) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.playSound(SoundEffects.ENTITY_DOLPHIN_EAT, 1.0F, 1.0F);
-            }
+            // }
 
             this.setGotFish(true);
             if (!entityhuman.abilities.canInstantlyBuild) {
                 itemstack.subtract(1);
             }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             return super.b(entityhuman, enumhand);
         }
diff --git a/src/main/java/net/minecraft/server/EntityDragonFireball.java b/src/main/java/net/minecraft/server/EntityDragonFireball.java
index 9d2d5be5eedc60749e276434be9be6ab41f2289d..2f62075ac5aa665afddaccb74ad4252948ba26c2 100644
--- a/src/main/java/net/minecraft/server/EntityDragonFireball.java
+++ b/src/main/java/net/minecraft/server/EntityDragonFireball.java
@@ -19,7 +19,7 @@ public class EntityDragonFireball extends EntityFireball {
         Entity entity = this.getShooter();
 
         if (movingobjectposition.getType() != MovingObjectPosition.EnumMovingObjectType.ENTITY || !((MovingObjectPositionEntity) movingobjectposition).getEntity().s(entity)) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 List<EntityLiving> list = this.world.a(EntityLiving.class, this.getBoundingBox().grow(4.0D, 2.0D, 4.0D));
                 EntityAreaEffectCloud entityareaeffectcloud = new EntityAreaEffectCloud(this.world, this.locX(), this.locY(), this.locZ());
 
@@ -51,7 +51,7 @@ public class EntityDragonFireball extends EntityFireball {
                 this.world.addEntity(entityareaeffectcloud);
                 } else entityareaeffectcloud.die(); // Paper
                 this.die();
-            }
+            // }
 
         }
     }
diff --git a/src/main/java/net/minecraft/server/EntityDrowned.java b/src/main/java/net/minecraft/server/EntityDrowned.java
index a766910663e47b05d1e38908b5db7471199993c7..fffdf76a32e92c62d66e0db11b97145372cb0664 100644
--- a/src/main/java/net/minecraft/server/EntityDrowned.java
+++ b/src/main/java/net/minecraft/server/EntityDrowned.java
@@ -202,7 +202,7 @@ public class EntityDrowned extends EntityZombie implements IRangedEntity {
 
     @Override
     public void aJ() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             if (this.doAITick() && this.isInWater() && this.eW()) {
                 this.navigation = this.navigationWater;
                 this.setSwimming(true);
@@ -210,7 +210,7 @@ public class EntityDrowned extends EntityZombie implements IRangedEntity {
                 this.navigation = this.navigationLand;
                 this.setSwimming(false);
             }
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityEgg.java b/src/main/java/net/minecraft/server/EntityEgg.java
index 4951abdfa13d170b7075a0223dd0096d77dec6ea..b7d5208bd6e96dd182fcb6f8b2eb63e37b5763a2 100644
--- a/src/main/java/net/minecraft/server/EntityEgg.java
+++ b/src/main/java/net/minecraft/server/EntityEgg.java
@@ -30,7 +30,7 @@ public class EntityEgg extends EntityProjectileThrowable {
     @Override
     protected void a(MovingObjectPosition movingobjectposition) {
         super.a(movingobjectposition);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             boolean hatching = this.random.nextInt(8) == 0; // CraftBukkit
             if (true) {
                 byte b0 = 1;
@@ -79,7 +79,7 @@ public class EntityEgg extends EntityProjectileThrowable {
 
             this.world.broadcastEntityEffect(this, (byte) 3);
             this.die();
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityEnderCrystal.java b/src/main/java/net/minecraft/server/EntityEnderCrystal.java
index 1942fae27051af79b6eb1d790a219da100bf889e..6dd1402c51ebce7c40b4d16060179451954a15c2 100644
--- a/src/main/java/net/minecraft/server/EntityEnderCrystal.java
+++ b/src/main/java/net/minecraft/server/EntityEnderCrystal.java
@@ -135,7 +135,8 @@ public class EntityEnderCrystal extends Entity {
         } else if (damagesource.getEntity() instanceof EntityEnderDragon) {
             return false;
         } else {
-            if (!this.dead && !this.world.isClientSide) {
+            // if (!this.dead && !this.world.isClientSide) {
+            if (!this.dead) {
                 // CraftBukkit start - All non-living entities need this
                 if (CraftEventFactory.handleNonLivingEntityDamageEvent(this, damagesource, f, false)) {
                     return false;
diff --git a/src/main/java/net/minecraft/server/EntityEnderDragon.java b/src/main/java/net/minecraft/server/EntityEnderDragon.java
index 87b691afd226ec9c59685261c20454c2d312ca17..a5db8db793d6bc10955e505c69ad6ea8cbd96d1b 100644
--- a/src/main/java/net/minecraft/server/EntityEnderDragon.java
+++ b/src/main/java/net/minecraft/server/EntityEnderDragon.java
@@ -169,7 +169,7 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
 
         float f;
         float f1;
-
+        /*
         if (this.world.isClientSide) {
             this.setHealth(this.getHealth());
             if (!this.isSilent()) {
@@ -185,6 +185,7 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
                 }
             }
         }
+        */
 
         this.bp = this.bq;
         if (this.dl()) {
@@ -230,7 +231,7 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
                 double d2;
                 float f3;
                 float f4;
-
+                /*
                 if (this.world.isClientSide) {
                     if (this.aU > 0) {
                         double d3 = this.locX() + (this.aV - this.locX()) / (double) this.aU;
@@ -247,6 +248,8 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
 
                     this.bG.a().b();
                 } else if (!hasRider) { // Purpur
+                */
+                if (!hasRider) { // Purpur
                     IDragonController idragoncontroller = this.bG.a();
 
                     idragoncontroller.c();
@@ -313,7 +316,8 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
                 this.a(this.bz, (double) (f11 * 0.5F), 0.0D, (double) (-f12 * 0.5F));
                 this.a(this.bD, (double) (f12 * 4.5F), 2.0D, (double) (f11 * 4.5F));
                 this.a(this.bE, (double) (f12 * -4.5F), 2.0D, (double) (f11 * -4.5F));
-                if (!hasRider && !this.world.isClientSide && this.hurtTicks == 0) { // Purpur
+                // if (!hasRider && !this.world.isClientSide && this.hurtTicks == 0) { // Purpur
+                if (!hasRider && this.hurtTicks == 0) { // Purpur
                     this.a(this.world.getEntities(this, this.bD.getBoundingBox().grow(4.0D, 2.0D, 4.0D).d(0.0D, -2.0D, 0.0D), IEntitySelector.e));
                     this.a(this.world.getEntities(this, this.bE.getBoundingBox().grow(4.0D, 2.0D, 4.0D).d(0.0D, -2.0D, 0.0D), IEntitySelector.e));
                     this.b(this.world.getEntities(this, this.bo.getBoundingBox().g(1.0D), IEntitySelector.e));
@@ -355,12 +359,12 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
                     this.a(entitycomplexpart, (double) (-(f11 * 1.5F + f17 * f4) * f8), adouble1[1] - adouble[1] - (double) ((f4 + 1.5F) * f9) + 1.5D, (double) ((f12 * 1.5F + f18 * f4) * f8));
                 }
 
-                if (!this.world.isClientSide) {
+                // if (!this.world.isClientSide) {
                     this.br = !hasRider && this.b(this.bo.getBoundingBox()) | this.b(this.by.getBoundingBox()) | this.b(this.bz.getBoundingBox()); // Purpur
                     if (this.bF != null) {
                         this.bF.b(this);
                     }
-                }
+                // }
 
                 for (k = 0; k < this.children.length; ++k) {
                     this.children[k].lastX = avec3d[k].x;
@@ -642,7 +646,7 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
             short0 = 12000;
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             if (this.deathAnimationTicks > 150 && this.deathAnimationTicks % 5 == 0 && flag) {
                 this.a(MathHelper.d((float) short0 * 0.08F));
             }
@@ -669,12 +673,13 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
                 }
                 // CraftBukkit end
             }
-        }
+        // }
 
         this.move(EnumMoveType.SELF, new Vec3D(0.0D, 0.10000000149011612D, 0.0D));
         this.yaw += 20.0F;
         this.aA = this.yaw;
-        if (this.deathAnimationTicks == 200 && !this.world.isClientSide) {
+        // if (this.deathAnimationTicks == 200 && !this.world.isClientSide) {
+        if (this.deathAnimationTicks == 200) {
             if (flag) {
                 this.a(MathHelper.d((float) short0 * 0.2F));
             }
@@ -997,7 +1002,7 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
 
         this.bG.a().a(entityendercrystal, blockposition, damagesource, entityhuman);
     }
-
+    /*
     @Override
     public void a(DataWatcherObject<?> datawatcherobject) {
         if (EntityEnderDragon.PHASE.equals(datawatcherobject) && this.world.isClientSide) {
@@ -1006,6 +1011,7 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
 
         super.a(datawatcherobject);
     }
+    */
 
     public DragonControllerManager getDragonControllerManager() {
         return this.bG;
diff --git a/src/main/java/net/minecraft/server/EntityEnderPearl.java b/src/main/java/net/minecraft/server/EntityEnderPearl.java
index e8650c1bfa8f94ba461b7094125679112d825980..d385931b01ce276de35820ff1eef9f15c2395081 100644
--- a/src/main/java/net/minecraft/server/EntityEnderPearl.java
+++ b/src/main/java/net/minecraft/server/EntityEnderPearl.java
@@ -38,7 +38,8 @@ public class EntityEnderPearl extends EntityProjectileThrowable {
             this.world.addParticle(Particles.PORTAL, this.locX(), this.locY() + this.random.nextDouble() * 2.0D, this.locZ(), this.random.nextGaussian(), 0.0D, this.random.nextGaussian());
         }
 
-        if (!this.world.isClientSide && !this.dead) {
+        // if (!this.world.isClientSide && !this.dead) {
+        if (!this.dead) {
             if (entity instanceof EntityPlayer) {
                 EntityPlayer entityplayer = (EntityPlayer) entity;
 
diff --git a/src/main/java/net/minecraft/server/EntityEnderSignal.java b/src/main/java/net/minecraft/server/EntityEnderSignal.java
index 132fa358b844a609a9ede3032e98f991c5eac65a..f1d543a6428213cd36f892f8c9270620fb127c5a 100644
--- a/src/main/java/net/minecraft/server/EntityEnderSignal.java
+++ b/src/main/java/net/minecraft/server/EntityEnderSignal.java
@@ -76,7 +76,7 @@ public class EntityEnderSignal extends Entity {
 
         this.pitch = IProjectile.e(this.lastPitch, (float) (MathHelper.d(vec3d.y, (double) f) * 57.2957763671875D));
         this.yaw = IProjectile.e(this.lastYaw, (float) (MathHelper.d(vec3d.x, vec3d.z) * 57.2957763671875D));
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             double d3 = this.targetX - d0;
             double d4 = this.targetZ - d2;
             float f1 = (float) Math.sqrt(d3 * d3 + d4 * d4);
@@ -93,7 +93,7 @@ public class EntityEnderSignal extends Entity {
 
             vec3d = new Vec3D(Math.cos((double) f2) * d5, d6 + ((double) i - d6) * 0.014999999664723873D, Math.sin((double) f2) * d5);
             this.setMot(vec3d);
-        }
+        // }
 
         float f3 = 0.25F;
 
@@ -105,10 +105,11 @@ public class EntityEnderSignal extends Entity {
             this.world.addParticle(Particles.PORTAL, d0 - vec3d.x * 0.25D + this.random.nextDouble() * 0.6D - 0.3D, d1 - vec3d.y * 0.25D - 0.5D, d2 - vec3d.z * 0.25D + this.random.nextDouble() * 0.6D - 0.3D, vec3d.x, vec3d.y, vec3d.z);
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.setPosition(d0, d1, d2);
             ++this.despawnTimer;
-            if (this.despawnTimer > 80 && !this.world.isClientSide) {
+            // if (this.despawnTimer > 80 && !this.world.isClientSide) {
+            if (this.despawnTimer > 80) {
                 this.playSound(SoundEffects.ENTITY_ENDER_EYE_DEATH, 1.0F, 1.0F);
                 this.die();
                 if (this.shouldDropItem) {
@@ -117,9 +118,11 @@ public class EntityEnderSignal extends Entity {
                     this.world.triggerEffect(2003, this.getChunkCoordinates(), 0);
                 }
             }
+        /*
         } else {
             this.setPositionRaw(d0, d1, d2);
         }
+        */
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityEnderman.java b/src/main/java/net/minecraft/server/EntityEnderman.java
index beee80c3d8277f2d784fb6b8a4152a871ee020b0..f0839f5f5b19cdd2ee557a1d377fd242365493b7 100644
--- a/src/main/java/net/minecraft/server/EntityEnderman.java
+++ b/src/main/java/net/minecraft/server/EntityEnderman.java
@@ -148,7 +148,7 @@ public class EntityEnderman extends EntityMonster implements IEntityAngerable {
         }
 
     }
-
+    /*
     @Override
     public void a(DataWatcherObject<?> datawatcherobject) {
         if (EntityEnderman.bo.equals(datawatcherobject) && this.eO() && this.world.isClientSide) {
@@ -157,6 +157,7 @@ public class EntityEnderman extends EntityMonster implements IEntityAngerable {
 
         super.a(datawatcherobject);
     }
+    */
 
     @Override
     public void saveData(NBTTagCompound nbttagcompound) {
@@ -218,16 +219,18 @@ public class EntityEnderman extends EntityMonster implements IEntityAngerable {
 
     @Override
     public void movementTick() {
+        /*
         if (this.world.isClientSide) {
             for (int i = 0; i < 2; ++i) {
                 this.world.addParticle(Particles.PORTAL, this.d(0.5D), this.cF() - 0.25D, this.g(0.5D), (this.random.nextDouble() - 0.5D) * 2.0D, -this.random.nextDouble(), (this.random.nextDouble() - 0.5D) * 2.0D);
             }
         }
+        */
 
         this.jumping = false;
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.a((WorldServer) this.world, true);
-        }
+        // }
 
         super.movementTick();
     }
diff --git a/src/main/java/net/minecraft/server/EntityEndermite.java b/src/main/java/net/minecraft/server/EntityEndermite.java
index 3f34ebc1c4ac6f6f0b883c3e4c768007c24fc194..4798e6383f03acb822b392b2011aeaccad1ae25c 100644
--- a/src/main/java/net/minecraft/server/EntityEndermite.java
+++ b/src/main/java/net/minecraft/server/EntityEndermite.java
@@ -118,11 +118,13 @@ public class EntityEndermite extends EntityMonster {
     @Override
     public void movementTick() {
         super.movementTick();
+        /*
         if (this.world.isClientSide) {
             for (int i = 0; i < 2; ++i) {
                 this.world.addParticle(Particles.PORTAL, this.d(0.5D), this.cF(), this.g(0.5D), (this.random.nextDouble() - 0.5D) * 2.0D, -this.random.nextDouble(), (this.random.nextDouble() - 0.5D) * 2.0D);
             }
         } else {
+        */
             if (!this.isPersistent()) {
                 ++this.b;
             }
@@ -130,7 +132,7 @@ public class EntityEndermite extends EntityMonster {
             if (this.b >= 2400) {
                 this.die();
             }
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityEvokerFangs.java b/src/main/java/net/minecraft/server/EntityEvokerFangs.java
index 035d82f9391a10a53616e71ed47c3fb06137f512..01db3b14e0a7cef881dfe3d3f394995150c33fce 100644
--- a/src/main/java/net/minecraft/server/EntityEvokerFangs.java
+++ b/src/main/java/net/minecraft/server/EntityEvokerFangs.java
@@ -69,6 +69,7 @@ public class EntityEvokerFangs extends Entity {
     @Override
     public void tick() {
         super.tick();
+        /*
         if (this.world.isClientSide) {
             if (this.e) {
                 --this.d;
@@ -86,6 +87,8 @@ public class EntityEvokerFangs extends Entity {
                 }
             }
         } else if (--this.b < 0) {
+        */
+        if (--this.b < 0) {
             if (this.b == -8) {
                 List<EntityLiving> list = this.world.a(EntityLiving.class, this.getBoundingBox().grow(0.2D, 0.0D, 0.2D));
                 Iterator iterator = list.iterator();
diff --git a/src/main/java/net/minecraft/server/EntityExperienceOrb.java b/src/main/java/net/minecraft/server/EntityExperienceOrb.java
index 358d6d660581686a2e8d49e13e8c2ade9ec2fec2..e47779acfc60a597940a69c05b2dc30d8397cbb3 100644
--- a/src/main/java/net/minecraft/server/EntityExperienceOrb.java
+++ b/src/main/java/net/minecraft/server/EntityExperienceOrb.java
@@ -216,7 +216,7 @@ public class EntityExperienceOrb extends Entity {
 
     @Override
     public void pickup(EntityHuman entityhuman) {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             if (this.d == 0 && entityhuman.bu == 0 && new com.destroystokyo.paper.event.player.PlayerPickupExperienceEvent(((EntityPlayer) entityhuman).getBukkitEntity(), (org.bukkit.entity.ExperienceOrb) this.getBukkitEntity()).callEvent()) { // Paper
                 entityhuman.bu = 2;
                 entityhuman.receive(this, 1);
@@ -246,7 +246,7 @@ public class EntityExperienceOrb extends Entity {
                 this.die();
             }
 
-        }
+        // }
     }
 
     public final int durToXp(int i) { return b(i); } // Paper OBFHELPER
diff --git a/src/main/java/net/minecraft/server/EntityFallingBlock.java b/src/main/java/net/minecraft/server/EntityFallingBlock.java
index 46aef6e142c7ec0cf2d4ac53a2db4987db6d0d71..e8904cac832878881e8013b1da25efb553f92cc3 100644
--- a/src/main/java/net/minecraft/server/EntityFallingBlock.java
+++ b/src/main/java/net/minecraft/server/EntityFallingBlock.java
@@ -79,7 +79,8 @@ public class EntityFallingBlock extends Entity {
                 blockposition = this.getChunkCoordinates();
                 if (this.world.getType(blockposition).a(block) && !CraftEventFactory.callEntityChangeBlockEvent(this, blockposition, Blocks.AIR.getBlockData()).isCancelled()) {
                     this.world.a(blockposition, false);
-                } else if (!this.world.isClientSide) {
+                // } else if (!this.world.isClientSide) {
+                } else {
                     this.die();
                     return;
                 }
@@ -107,7 +108,7 @@ public class EntityFallingBlock extends Entity {
                 return;
             }
             // Paper end
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 blockposition = this.getChunkCoordinates();
                 boolean flag = this.block.getBlock() instanceof BlockConcretePowder;
                 boolean flag1 = flag && this.world.getFluid(blockposition).a((Tag) TagsFluid.WATER);
@@ -123,7 +124,8 @@ public class EntityFallingBlock extends Entity {
                 }
 
                 if (!this.onGround && !flag1) {
-                    if (!this.world.isClientSide && (this.ticksLived > 100 && (blockposition.getY() < 1 || blockposition.getY() > 256) || this.ticksLived > 600)) {
+                    // if (!this.world.isClientSide && (this.ticksLived > 100 && (blockposition.getY() < 1 || blockposition.getY() > 256) || this.ticksLived > 600)) {
+                    if (this.ticksLived > 100 && (blockposition.getY() < 1 || blockposition.getY() > 256) || this.ticksLived > 600) {
                         if (this.dropItem && this.world.getGameRules().getBoolean(GameRules.DO_ENTITY_DROPS)) {
                             this.a((IMaterial) block);
                         }
@@ -187,7 +189,7 @@ public class EntityFallingBlock extends Entity {
                         }
                     }
                 }
-            }
+            // }
 
             this.setMot(this.getMot().a(0.98D));
         }
diff --git a/src/main/java/net/minecraft/server/EntityFireball.java b/src/main/java/net/minecraft/server/EntityFireball.java
index 6b9b64539d2272070b523ed6b927de02d2b00af5..d759b8f54fc7850c80c9ea57c743463eb983912e 100644
--- a/src/main/java/net/minecraft/server/EntityFireball.java
+++ b/src/main/java/net/minecraft/server/EntityFireball.java
@@ -47,7 +47,8 @@ public abstract class EntityFireball extends IProjectile {
     public void tick() {
         Entity entity = this.getShooter();
 
-        if (!this.world.isClientSide && (entity != null && entity.dead || !this.world.isLoaded(this.getChunkCoordinates()))) {
+        // if (!this.world.isClientSide && (entity != null && entity.dead || !this.world.isLoaded(this.getChunkCoordinates()))) {
+        if (entity != null && entity.dead || !this.world.isLoaded(this.getChunkCoordinates())) {
             this.die();
         } else {
             super.tick();
diff --git a/src/main/java/net/minecraft/server/EntityFireworks.java b/src/main/java/net/minecraft/server/EntityFireworks.java
index 601f639275f4df983f19aa9cb0dc5f2611387853..0fbbe1fe120a20281d473d5148c64d727d39c408 100644
--- a/src/main/java/net/minecraft/server/EntityFireworks.java
+++ b/src/main/java/net/minecraft/server/EntityFireworks.java
@@ -61,7 +61,8 @@ public class EntityFireworks extends IProjectile {
     public void inactiveTick() {
         this.ticksFlown += 1;
 
-        if (!this.world.isClientSide && this.ticksFlown > this.expectedLifespan) {
+        // if (!this.world.isClientSide && this.ticksFlown > this.expectedLifespan) {
+        if (this.ticksFlown > this.expectedLifespan) {
             // CraftBukkit start
             if (!org.bukkit.craftbukkit.event.CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
                 this.explode();
@@ -136,11 +137,13 @@ public class EntityFireworks extends IProjectile {
         }
 
         ++this.ticksFlown;
+        /*
         if (this.world.isClientSide && this.ticksFlown % 2 < 2) {
             this.world.addParticle(Particles.FIREWORK, this.locX(), this.locY() - 0.3D, this.locZ(), this.random.nextGaussian() * 0.05D, -this.getMot().y * 0.5D, this.random.nextGaussian() * 0.05D);
         }
-
-        if (!this.world.isClientSide && this.ticksFlown > this.expectedLifespan) {
+        */
+        // if (!this.world.isClientSide && this.ticksFlown > this.expectedLifespan) {
+        if (this.ticksFlown > this.expectedLifespan) {
             // CraftBukkit start
             if (!org.bukkit.craftbukkit.event.CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
                 this.explode();
@@ -159,13 +162,13 @@ public class EntityFireworks extends IProjectile {
     @Override
     protected void a(MovingObjectPositionEntity movingobjectpositionentity) {
         super.a(movingobjectpositionentity);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             // CraftBukkit start
             if (!org.bukkit.craftbukkit.event.CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
                 this.explode();
             }
             // CraftBukkit end
-        }
+        // }
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityFish.java b/src/main/java/net/minecraft/server/EntityFish.java
index 668f9d61b72cf0d8e7bb0d1cd985ae653a587466..4cb21939c79184861835a02fafdd7e3f55d7fed0 100644
--- a/src/main/java/net/minecraft/server/EntityFish.java
+++ b/src/main/java/net/minecraft/server/EntityFish.java
@@ -120,9 +120,9 @@ public abstract class EntityFish extends EntityWaterAnimal {
             ItemStack itemstack1 = this.eK();
 
             this.k(itemstack1);
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 CriterionTriggers.j.a((EntityPlayer) entityhuman, itemstack1);
-            }
+            // }
 
             if (itemstack.isEmpty()) {
                 entityhuman.a(enumhand, itemstack1);
@@ -131,7 +131,7 @@ public abstract class EntityFish extends EntityWaterAnimal {
             }
 
             this.die();
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             return super.b(entityhuman, enumhand);
         }
diff --git a/src/main/java/net/minecraft/server/EntityFishingHook.java b/src/main/java/net/minecraft/server/EntityFishingHook.java
index 2bad182d9d6248c1e8ac9138e46d192dccc2a973..800c7c8fbaf6c2a9a7fc28c45487a9bbb74a416c 100644
--- a/src/main/java/net/minecraft/server/EntityFishingHook.java
+++ b/src/main/java/net/minecraft/server/EntityFishingHook.java
@@ -108,7 +108,8 @@ public class EntityFishingHook extends IProjectile {
 
         if (entityhuman == null) {
             this.die();
-        } else if (this.world.isClientSide || !this.a(entityhuman)) {
+        // } else if (this.world.isClientSide || !this.a(entityhuman)) {
+        } else if (!this.a(entityhuman)) {
             if (this.onGround) {
                 ++this.g;
                 if (this.g >= 1200) {
@@ -178,9 +179,9 @@ public class EntityFishingHook extends IProjectile {
                             this.setMot(this.getMot().add(0.0D, -0.1D * (double) this.b.nextFloat() * (double) this.b.nextFloat(), 0.0D));
                         }
 
-                        if (!this.world.isClientSide) {
+                        // if (!this.world.isClientSide) {
                             this.a(blockposition);
-                        }
+                        // }
                     } else {
                         this.d = Math.min(10, this.d + 1);
                     }
@@ -239,10 +240,10 @@ public class EntityFishingHook extends IProjectile {
     @Override
     protected void a(MovingObjectPositionEntity movingobjectpositionentity) {
         super.a(movingobjectpositionentity);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.hooked = movingobjectpositionentity.getEntity();
             this.updateHookedEntity();
-        }
+        // }
 
     }
 
@@ -421,7 +422,8 @@ public class EntityFishingHook extends IProjectile {
     public int b(ItemStack itemstack) {
         EntityHuman entityhuman = this.getOwner();
 
-        if (!this.world.isClientSide && entityhuman != null) {
+        // if (!this.world.isClientSide && entityhuman != null) {
+        if (entityhuman != null) {
             int i = 0;
 
             if (this.hooked != null) {
diff --git a/src/main/java/net/minecraft/server/EntityFox.java b/src/main/java/net/minecraft/server/EntityFox.java
index 18d14aca159db9c82a2f56020f503b5d3c4aae59..c6ae507755aa45311967a6a6f303b3288f18b618 100644
--- a/src/main/java/net/minecraft/server/EntityFox.java
+++ b/src/main/java/net/minecraft/server/EntityFox.java
@@ -156,7 +156,8 @@ public class EntityFox extends EntityAnimal {
 
     @Override
     public void movementTick() {
-        if (!this.world.isClientSide && this.isAlive() && this.doAITick()) {
+        // if (!this.world.isClientSide && this.isAlive() && this.doAITick()) {
+        if (this.isAlive() && this.doAITick()) {
             ++this.bD;
             ItemStack itemstack = this.getEquipment(EnumItemSlot.MAINHAND);
 
@@ -433,7 +434,8 @@ public class EntityFox extends EntityAnimal {
 
     public void spit(ItemStack itemstack) { m(itemstack); } // Purpur - OBFHELPER
     private void m(ItemStack itemstack) {
-        if (!itemstack.isEmpty() && !this.world.isClientSide) {
+        // if (!itemstack.isEmpty() && !this.world.isClientSide) {
+        if (!itemstack.isEmpty()) {
             EntityItem entityitem = new EntityItem(this.world, this.locX() + this.getLookDirection().x, this.locY() + 1.0D, this.locZ() + this.getLookDirection().z, itemstack);
 
             entityitem.setPickupDelay(40);
diff --git a/src/main/java/net/minecraft/server/EntityGuardian.java b/src/main/java/net/minecraft/server/EntityGuardian.java
index 476f692df79e98779271cc5a395276ab9c755a58..fe521dd0d1a6dd414cf6ed29c5cc2b0ef91bc93e 100644
--- a/src/main/java/net/minecraft/server/EntityGuardian.java
+++ b/src/main/java/net/minecraft/server/EntityGuardian.java
@@ -122,6 +122,7 @@ public class EntityGuardian extends EntityMonster {
     public EntityLiving eP() {
         if (!this.eO()) {
             return null;
+        /*
         } else if (this.world.isClientSide) {
             if (this.bt != null) {
                 return this.bt;
@@ -134,7 +135,7 @@ public class EntityGuardian extends EntityMonster {
                 } else {
                     return null;
                 }
-            }
+        */
         } else {
             return this.getGoalTarget();
         }
@@ -188,6 +189,7 @@ public class EntityGuardian extends EntityMonster {
     @Override
     public void movementTick() {
         if (this.isAlive()) {
+            /*
             if (this.world.isClientSide) {
                 this.bp = this.bo;
                 Vec3D vec3d;
@@ -256,6 +258,7 @@ public class EntityGuardian extends EntityMonster {
                     }
                 }
             }
+            */
 
             if (this.aH()) {
                 this.setAirTicks(300);
diff --git a/src/main/java/net/minecraft/server/EntityHanging.java b/src/main/java/net/minecraft/server/EntityHanging.java
index 747b0b7e6f7412751e8fa7ab98fe642a78760a87..9e70f27c504a1f7e04fe46b4c82626f2f6289921 100644
--- a/src/main/java/net/minecraft/server/EntityHanging.java
+++ b/src/main/java/net/minecraft/server/EntityHanging.java
@@ -93,7 +93,7 @@ public abstract class EntityHanging extends Entity {
 
     @Override
     public void tick() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             if (this.locY() < -64.0D) {
                 this.an();
             }
@@ -123,7 +123,7 @@ public abstract class EntityHanging extends Entity {
                     this.a((Entity) null);
                 }
             }
-        }
+        // }
 
     }
 
@@ -181,7 +181,8 @@ public abstract class EntityHanging extends Entity {
         if (this.isInvulnerable(damagesource)) {
             return false;
         } else {
-            if (!this.dead && !this.world.isClientSide) {
+            // if (!this.dead && !this.world.isClientSide) {
+            if (!this.dead) {
                 // CraftBukkit start - fire break events
                 Entity damager = (damagesource instanceof EntityDamageSourceIndirect) ? ((EntityDamageSourceIndirect) damagesource).getProximateDamageSource() : damagesource.getEntity();
                 HangingBreakEvent event;
@@ -209,7 +210,8 @@ public abstract class EntityHanging extends Entity {
 
     @Override
     public void move(EnumMoveType enummovetype, Vec3D vec3d) {
-        if (!this.world.isClientSide && !this.dead && vec3d.g() > 0.0D) {
+        // if (!this.world.isClientSide && !this.dead && vec3d.g() > 0.0D) {
+        if (!this.dead && vec3d.g() > 0.0D) {
             if (this.dead) return; // CraftBukkit
 
             // CraftBukkit start - fire break events
@@ -227,7 +229,7 @@ public abstract class EntityHanging extends Entity {
         }
 
     }
-
+    /*
     @Override
     public void i(double d0, double d1, double d2) {
         if (false && !this.world.isClientSide && !this.dead && d0 * d0 + d1 * d1 + d2 * d2 > 0.0D) { // CraftBukkit - not needed
@@ -236,6 +238,7 @@ public abstract class EntityHanging extends Entity {
         }
 
     }
+    */
 
     @Override
     public void saveData(NBTTagCompound nbttagcompound) {
diff --git a/src/main/java/net/minecraft/server/EntityHoglin.java b/src/main/java/net/minecraft/server/EntityHoglin.java
index 4a3469aca9f9e47d2ea3f3bae6ce77f5f11d6b50..df9fa0a00585febf782e948899291c4e58421cbc 100644
--- a/src/main/java/net/minecraft/server/EntityHoglin.java
+++ b/src/main/java/net/minecraft/server/EntityHoglin.java
@@ -75,16 +75,17 @@ public class EntityHoglin extends EntityAnimal implements IMonster, IOglin {
     @Override
     public boolean damageEntity(DamageSource damagesource, float f) {
         boolean flag = super.damageEntity(damagesource, f);
-
+        /*
         if (this.world.isClientSide) {
             return false;
         } else {
+        */
             if (flag && damagesource.getEntity() instanceof EntityLiving) {
                 HoglinAI.b(this, (EntityLiving) damagesource.getEntity());
             }
 
             return flag;
-        }
+        // }
     }
 
     @Override
@@ -282,7 +283,8 @@ public class EntityHoglin extends EntityAnimal implements IMonster, IOglin {
 
     @Override
     protected SoundEffect getSoundAmbient() {
-        return this.world.isClientSide ? null : (SoundEffect) HoglinAI.b(this).orElse(null); // Purpur - decompile error
+        // return this.world.isClientSide ? null : (SoundEffect) HoglinAI.b(this).orElse(null); // Purpur - decompile error
+        return (SoundEffect) HoglinAI.b(this).orElse(null);
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityHorse.java b/src/main/java/net/minecraft/server/EntityHorse.java
index e78e89d187f923239f23e37d5141e2e69b056360..ff77783ca221bcef77094856a6c0838cf349cbbe 100644
--- a/src/main/java/net/minecraft/server/EntityHorse.java
+++ b/src/main/java/net/minecraft/server/EntityHorse.java
@@ -108,16 +108,16 @@ public class EntityHorse extends EntityHorseAbstract {
 
     @Override
     protected void fe() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             super.fe();
             this.n(this.inventoryChest.getItem(1));
             this.a(EnumItemSlot.CHEST, 0.0F);
-        }
+        // }
     }
 
     private void n(ItemStack itemstack) {
         this.m(itemstack);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.getAttributeInstance(GenericAttributes.ARMOR).b(EntityHorse.bw);
             if (this.l(itemstack)) {
                 int i = ((ItemHorseArmor) itemstack.getItem()).g();
@@ -126,7 +126,7 @@ public class EntityHorse extends EntityHorseAbstract {
                     this.getAttributeInstance(GenericAttributes.ARMOR).b(new AttributeModifier(EntityHorse.bw, "Horse armor bonus", (double) i, AttributeModifier.Operation.ADDITION));
                 }
             }
-        }
+        // }
 
     }
 
@@ -189,7 +189,7 @@ public class EntityHorse extends EntityHorseAbstract {
         if (!this.isBaby()) {
             if (this.isTamed() && entityhuman.eq()) {
                 this.f(entityhuman);
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
 
             if (this.isVehicle()) {
@@ -210,14 +210,14 @@ public class EntityHorse extends EntityHorseAbstract {
 
             if (!this.isTamed()) {
                 this.fm();
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
 
             boolean flag = !this.isBaby() && !this.hasSaddle() && itemstack.getItem() == Items.SADDLE;
 
             if (this.l(itemstack) || flag) {
                 this.f(entityhuman);
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
         }
 
@@ -225,7 +225,7 @@ public class EntityHorse extends EntityHorseAbstract {
             return super.b(entityhuman, enumhand);
         } else {
             this.h(entityhuman);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java
index 645431cccc8f852fd87f2b3095fd4b19bc480345..92d5718e133e4b5f15e0c54446a7aa33fa546b90 100644
--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java
@@ -281,9 +281,9 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
     }
 
     protected void fe() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.d(4, !this.inventoryChest.getItem(0).isEmpty());
-        }
+        // }
     }
 
     @Override
@@ -392,7 +392,8 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
     }
 
     public void f(EntityHuman entityhuman) {
-        if (!this.world.isClientSide && (!this.isVehicle() || this.w(entityhuman)) && this.isTamed()) {
+        // if (!this.world.isClientSide && (!this.isVehicle() || this.w(entityhuman)) && this.isTamed()) {
+        if ((!this.isVehicle() || this.w(entityhuman)) && this.isTamed()) {
             entityhuman.openHorseInventory(this, this.inventoryChest);
         }
 
@@ -405,7 +406,8 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
             itemstack.subtract(1);
         }
 
-        return this.world.isClientSide ? EnumInteractionResult.CONSUME : (flag ? EnumInteractionResult.SUCCESS : EnumInteractionResult.PASS);
+        // return this.world.isClientSide ? EnumInteractionResult.CONSUME : (flag ? EnumInteractionResult.SUCCESS : EnumInteractionResult.PASS);
+        return (flag ? EnumInteractionResult.SUCCESS : EnumInteractionResult.PASS);
     }
 
     protected boolean c(EntityHuman entityhuman, ItemStack itemstack) {
@@ -434,7 +436,8 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
             f = 4.0F;
             short0 = 60;
             b0 = 5;
-            if (!this.world.isClientSide && this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
+            // if (!this.world.isClientSide && this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
+            if (this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
                 flag = true;
                 this.g(entityhuman);
             }
@@ -442,7 +445,8 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
             f = 10.0F;
             short0 = 240;
             b0 = 10;
-            if (!this.world.isClientSide && this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
+            // if (!this.world.isClientSide && this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
+            if (this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
                 flag = true;
                 this.g(entityhuman);
             }
@@ -455,18 +459,18 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
 
         if (this.isBaby() && short0 > 0) {
             this.world.addParticle(Particles.HAPPY_VILLAGER, this.d(1.0D), this.cF() + 0.5D, this.g(1.0D), 0.0D, 0.0D, 0.0D);
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.setAge(short0);
-            }
+            // }
 
             flag = true;
         }
 
         if (b0 > 0 && (flag || !this.isTamed()) && this.getTemper() < this.getMaxDomestication()) {
             flag = true;
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.v(b0);
-            }
+            // }
         }
 
         if (flag) {
@@ -479,11 +483,11 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
     protected void h(EntityHuman entityhuman) {
         this.x(false);
         this.setStanding(false);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             entityhuman.yaw = this.yaw;
             entityhuman.pitch = this.pitch;
             entityhuman.startRiding(this);
-        }
+        // }
 
     }
 
@@ -523,7 +527,8 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
         }
 
         super.movementTick();
-        if (!this.world.isClientSide && this.isAlive()) {
+        // if (!this.world.isClientSide && this.isAlive()) {
+        if (this.isAlive()) {
             if (this.random.nextInt(900) == 0 && this.deathTicks == 0) {
                 this.heal(1.0F, RegainReason.REGEN); // CraftBukkit
             }
@@ -627,10 +632,10 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
     }
 
     private void eO() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.bC = 1;
             this.d(64, true);
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityHorseChestedAbstract.java b/src/main/java/net/minecraft/server/EntityHorseChestedAbstract.java
index 3bcebb89c9f9a5243d1d215a47d7d5e64d2529b2..a71afe7e1b053eb54190f772c2a71b6f23ef9a9c 100644
--- a/src/main/java/net/minecraft/server/EntityHorseChestedAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityHorseChestedAbstract.java
@@ -46,9 +46,9 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
     protected void dropInventory() {
         super.dropInventory();
         if (this.isCarryingChest()) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.a((IMaterial) Blocks.CHEST);
-            }
+            // }
 
             //this.setCarryingChest(false); // Paper - moved to post death logic
         }
@@ -135,7 +135,7 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
         if (!this.isBaby()) {
             if (this.isTamed() && entityhuman.eq()) {
                 this.f(entityhuman);
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
 
             if (this.isVehicle()) {
@@ -150,7 +150,7 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
 
             if (!this.isTamed()) {
                 this.fm();
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
 
             if (!this.isCarryingChest() && itemstack.getItem() == Blocks.CHEST.getItem()) {
@@ -161,12 +161,12 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
                 }
 
                 this.loadChest();
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
 
             if (!this.isBaby() && !this.hasSaddle() && itemstack.getItem() == Items.SADDLE) {
                 this.f(entityhuman);
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
         }
 
@@ -174,7 +174,7 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
             return super.b(entityhuman, enumhand);
         } else {
             this.h(entityhuman);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityHorseSkeleton.java b/src/main/java/net/minecraft/server/EntityHorseSkeleton.java
index 9eac8f39ddfb598f7dfb90625829e2b10d7ec140..f549cdc5d96d65332f867d62f539895e206e782b 100644
--- a/src/main/java/net/minecraft/server/EntityHorseSkeleton.java
+++ b/src/main/java/net/minecraft/server/EntityHorseSkeleton.java
@@ -191,14 +191,14 @@ public class EntityHorseSkeleton extends EntityHorseAbstract {
             return super.b(entityhuman, enumhand);
         } else if (entityhuman.eq()) {
             this.f(entityhuman);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else if (this.isVehicle()) {
             return super.b(entityhuman, enumhand);
         } else {
             if (!itemstack.isEmpty()) {
                 if (itemstack.getItem() == Items.SADDLE && !this.hasSaddle()) {
                     this.f(entityhuman);
-                    return EnumInteractionResult.a(this.world.isClientSide);
+                    return EnumInteractionResult.a(true); // Yatopia
                 }
 
                 EnumInteractionResult enuminteractionresult = itemstack.a(entityhuman, (EntityLiving) this, enumhand);
@@ -209,7 +209,7 @@ public class EntityHorseSkeleton extends EntityHorseAbstract {
             }
 
             this.h(entityhuman);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         }
     }
 }
diff --git a/src/main/java/net/minecraft/server/EntityHorseZombie.java b/src/main/java/net/minecraft/server/EntityHorseZombie.java
index c2dc8211b05b4ee2a2b42435f866f8e55295162d..e1ba2d0dec241914bb22f7ddf4868369bca727a9 100644
--- a/src/main/java/net/minecraft/server/EntityHorseZombie.java
+++ b/src/main/java/net/minecraft/server/EntityHorseZombie.java
@@ -88,14 +88,14 @@ public class EntityHorseZombie extends EntityHorseAbstract {
             return super.b(entityhuman, enumhand);
         } else if (entityhuman.eq()) {
             this.f(entityhuman);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else if (this.isVehicle()) {
             return super.b(entityhuman, enumhand);
         } else {
             if (!itemstack.isEmpty()) {
                 if (itemstack.getItem() == Items.SADDLE && !this.hasSaddle()) {
                     this.f(entityhuman);
-                    return EnumInteractionResult.a(this.world.isClientSide);
+                    return EnumInteractionResult.a(true); // Yatopia
                 }
 
                 EnumInteractionResult enuminteractionresult = itemstack.a(entityhuman, (EntityLiving) this, enumhand);
@@ -106,7 +106,7 @@ public class EntityHorseZombie extends EntityHorseAbstract {
             }
 
             this.h(entityhuman);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 81cb94e3a4fd26bba47d96bbd35be110765934c3..b16728d2bf920c9476f9e17fab619a22a759788e 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -155,7 +155,8 @@ public abstract class EntityHuman extends EntityLiving {
                 this.sleepTicks = 100;
             }
 
-            if (!this.world.isClientSide && this.world.isDay()) {
+            // if (!this.world.isClientSide && this.world.isDay()) {
+            if (this.world.isDay()) {
                 this.wakeup(false, true);
             }
         } else if (this.sleepTicks > 0) {
@@ -167,13 +168,14 @@ public abstract class EntityHuman extends EntityLiving {
 
         this.et();
         super.tick();
-        if (!this.world.isClientSide && this.activeContainer != null && !this.activeContainer.canUse(this)) {
+        // if (!this.world.isClientSide && this.activeContainer != null && !this.activeContainer.canUse(this)) {
+        if (this.activeContainer != null && !this.activeContainer.canUse(this)) {
             this.closeInventory(org.bukkit.event.inventory.InventoryCloseEvent.Reason.CANT_USE); // Paper
             this.activeContainer = this.defaultContainer;
         }
 
         this.p();
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.foodData.a(this);
             // Yatopia start
             int interval = org.yatopiamc.yatopia.server.YatopiaConfig.playerTimeStatisticsInterval;
@@ -192,7 +194,7 @@ public abstract class EntityHuman extends EntityLiving {
                 this.a(StatisticList.TIME_SINCE_REST, interval); // Yatopia
             }
             } // Yatopia
-        }
+        // }
 
         int i = 29999999;
         double d0 = MathHelper.a(this.locX(), -2.9999999E7D, 2.9999999E7D);
@@ -470,7 +472,8 @@ public abstract class EntityHuman extends EntityLiving {
 
         this.j(this.getShoulderEntityLeft());
         this.j(this.getShoulderEntityRight());
-        if (!this.world.isClientSide && (this.fallDistance > 0.5F || this.isInWater()) || this.abilities.isFlying || this.isSleeping()) {
+        // if (!this.world.isClientSide && (this.fallDistance > 0.5F || this.isInWater()) || this.abilities.isFlying || this.isSleeping()) {
+        if ((this.fallDistance > 0.5F || this.isInWater()) || this.abilities.isFlying || this.isSleeping()) {
             if (!this.world.paperConfig.parrotsHangOnBetter) this.releaseShoulderEntities(); // Paper - Hang on!
         }
 
@@ -576,9 +579,11 @@ public abstract class EntityHuman extends EntityLiving {
         if (itemstack.isEmpty()) {
             return null;
         } else {
+            /*
             if (this.world.isClientSide) {
                 this.swingHand(EnumHand.MAIN_HAND);
             }
+            */
 
             double d0 = this.getHeadY() - 0.30000001192092896D;
             EntityItem entityitem = new EntityItem(this.world, this.locX(), d0, this.locZ(), itemstack);
@@ -839,9 +844,9 @@ public abstract class EntityHuman extends EntityLiving {
     @Override
     protected void damageShield(float f) {
         if (this.activeItem.getItem() == Items.SHIELD) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.b(StatisticList.ITEM_USED.b(this.activeItem.getItem()));
-            }
+            // }
 
             if (f >= 3.0F) {
                 int i = 1 + MathHelper.d(f);
@@ -1244,7 +1249,8 @@ public abstract class EntityHuman extends EntityLiving {
                             object = ((EntityComplexPart) entity).owner;
                         }
 
-                        if (!this.world.isClientSide && !itemstack1.isEmpty() && object instanceof EntityLiving) {
+                        // if (!this.world.isClientSide && !itemstack1.isEmpty() && object instanceof EntityLiving) {
+                        if (!itemstack1.isEmpty() && object instanceof EntityLiving) {
                             itemstack1.a((EntityLiving) object, this);
                             if (itemstack1.isEmpty()) {
                                 this.a(EnumHand.MAIN_HAND, ItemStack.b);
@@ -1738,9 +1744,9 @@ public abstract class EntityHuman extends EntityLiving {
 
     public void applyExhaustion(float f) {
         if (!this.abilities.isInvulnerable) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.foodData.a(f);
-            }
+            // }
 
         }
     }
@@ -1912,7 +1918,8 @@ public abstract class EntityHuman extends EntityLiving {
 
     // Paper - return entity
     private Entity spawnEntityFromShoulder0(@Nullable NBTTagCompound nbttagcompound) {
-        if (!this.world.isClientSide && nbttagcompound != null && !nbttagcompound.isEmpty()) {
+        // if (!this.world.isClientSide && nbttagcompound != null && !nbttagcompound.isEmpty()) {
+        if (nbttagcompound != null && !nbttagcompound.isEmpty()) {
             return EntityTypes.a(nbttagcompound, this.world).map((entity) -> { // CraftBukkit
                 if (entity instanceof EntityTameableAnimal) {
                     ((EntityTameableAnimal) entity).setOwnerUUID(this.uniqueID);
diff --git a/src/main/java/net/minecraft/server/EntityIllagerIllusioner.java b/src/main/java/net/minecraft/server/EntityIllagerIllusioner.java
index b0a5c36d1132e2558a1fefbd9f8dd26448400086..cc614266e1976143d9190c4494d7ef5d8750f582 100644
--- a/src/main/java/net/minecraft/server/EntityIllagerIllusioner.java
+++ b/src/main/java/net/minecraft/server/EntityIllagerIllusioner.java
@@ -71,7 +71,7 @@ public class EntityIllagerIllusioner extends EntityIllagerWizard implements IRan
     protected void initDatawatcher() {
         super.initDatawatcher();
     }
-
+    /*
     @Override
     public void movementTick() {
         super.movementTick();
@@ -111,6 +111,7 @@ public class EntityIllagerIllusioner extends EntityIllagerWizard implements IRan
         }
 
     }
+    */
 
     @Override
     public SoundEffect eL() {
diff --git a/src/main/java/net/minecraft/server/EntityIllagerWizard.java b/src/main/java/net/minecraft/server/EntityIllagerWizard.java
index b9dd0e358a7359f12ed1234d76363501651db950..5575d9d63762451fa4b66cc9284bcd94bc8bc97d 100644
--- a/src/main/java/net/minecraft/server/EntityIllagerWizard.java
+++ b/src/main/java/net/minecraft/server/EntityIllagerWizard.java
@@ -33,7 +33,8 @@ public abstract class EntityIllagerWizard extends EntityIllagerAbstract {
     }
 
     public boolean eW() {
-        return this.world.isClientSide ? (Byte) this.datawatcher.get(EntityIllagerWizard.bo) > 0 : this.b > 0;
+        // return this.world.isClientSide ? (Byte) this.datawatcher.get(EntityIllagerWizard.bo) > 0 : this.b > 0;
+        return this.b > 0;
     }
 
     public void setSpell(EntityIllagerWizard.Spell entityillagerwizard_spell) {
@@ -42,7 +43,8 @@ public abstract class EntityIllagerWizard extends EntityIllagerAbstract {
     }
 
     public EntityIllagerWizard.Spell getSpell() {
-        return !this.world.isClientSide ? this.bp : EntityIllagerWizard.Spell.a((Byte) this.datawatcher.get(EntityIllagerWizard.bo));
+        // return !this.world.isClientSide ? this.bp : EntityIllagerWizard.Spell.a((Byte) this.datawatcher.get(EntityIllagerWizard.bo));
+        return this.bp;
     }
 
     @Override
@@ -57,6 +59,7 @@ public abstract class EntityIllagerWizard extends EntityIllagerAbstract {
     @Override
     public void tick() {
         super.tick();
+        /*
         if (this.world.isClientSide && this.eW()) {
             EntityIllagerWizard.Spell entityillagerwizard_spell = this.getSpell();
             double d0 = entityillagerwizard_spell.h[0];
@@ -69,6 +72,7 @@ public abstract class EntityIllagerWizard extends EntityIllagerAbstract {
             this.world.addParticle(Particles.ENTITY_EFFECT, this.locX() + (double) f1 * 0.6D, this.locY() + 1.8D, this.locZ() + (double) f2 * 0.6D, d0, d1, d2);
             this.world.addParticle(Particles.ENTITY_EFFECT, this.locX() - (double) f1 * 0.6D, this.locY() + 1.8D, this.locZ() - (double) f2 * 0.6D, d0, d1, d2);
         }
+        */
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index b9c537104bfdc0bca0ad387c073650da169b871a..234931df7eb974e0faea780f20e07bad18ed5840 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -315,6 +315,7 @@ public abstract class EntityInsentient extends EntityLiving {
     }
 
     public void doSpawnEffect() {
+        /*
         if (this.world.isClientSide) {
             for (int i = 0; i < 20; ++i) {
                 double d0 = this.random.nextGaussian() * 0.02D;
@@ -325,20 +326,21 @@ public abstract class EntityInsentient extends EntityLiving {
                 this.world.addParticle(Particles.POOF, this.c(1.0D) - d0 * 10.0D, this.cF() - d1 * 10.0D, this.g(1.0D) - d2 * 10.0D, d0, d1, d2);
             }
         } else {
+        */
             this.world.broadcastEntityEffect(this, (byte) 20);
-        }
+        // }
 
     }
 
     @Override
     public void tick() {
         super.tick();
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.eA();
             if (this.ticksLived % 5 == 0) {
                 this.H();
             }
-        }
+        // }
 
     }
 
@@ -580,7 +582,8 @@ public abstract class EntityInsentient extends EntityLiving {
     public void movementTick() {
         super.movementTick();
         this.world.getMethodProfiler().enter("looting");
-        if (!this.world.isClientSide && this.canPickupLoot() && this.isAlive() && !this.killed && (this.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING) || world.purpurConfig.entitiesPickUpLootBypassMobGriefing)) { // Purpur
+        // if (!this.world.isClientSide && this.canPickupLoot() && this.isAlive() && !this.killed && (this.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING) || world.purpurConfig.entitiesPickUpLootBypassMobGriefing)) { // Purpur
+        if (this.canPickupLoot() && this.isAlive() && !this.killed && (this.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING) || world.purpurConfig.entitiesPickUpLootBypassMobGriefing)) { // Purpur
             List<EntityItem> list = this.world.a(EntityItem.class, this.getBoundingBox().grow(1.0D, 0.0D, 1.0D));
             Iterator iterator = list.iterator();
 
@@ -1196,7 +1199,7 @@ public abstract class EntityInsentient extends EntityLiving {
             }
             // CraftBukkit end
             this.unleash(true, !entityhuman.abilities.canInstantlyBuild);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             EnumInteractionResult enuminteractionresult = this.c(entityhuman, enumhand);
 
@@ -1221,7 +1224,7 @@ public abstract class EntityInsentient extends EntityLiving {
             // CraftBukkit end
             this.setLeashHolder(entityhuman, true);
             itemstack.subtract(1);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             if (itemstack.getItem() == Items.NAME_TAG) {
                 EnumInteractionResult enuminteractionresult = itemstack.a(entityhuman, (EntityLiving) this, enumhand);
@@ -1365,7 +1368,8 @@ public abstract class EntityInsentient extends EntityLiving {
 
             this.leashHolder = null;
             this.by = null;
-            if (!this.world.isClientSide && flag1) {
+            // if (!this.world.isClientSide && flag1) {
+            if (flag1) {
                 this.forceDrops = true; // CraftBukkit
                 // Purpur start
                 final ItemStack lead = new ItemStack(Items.LEAD);
@@ -1377,7 +1381,8 @@ public abstract class EntityInsentient extends EntityLiving {
                 this.forceDrops = false; // CraftBukkit
             }
 
-            if (!this.world.isClientSide && flag && this.world instanceof WorldServer) {
+            // if (!this.world.isClientSide && flag && this.world instanceof WorldServer) {
+            if (flag && this.world instanceof WorldServer) {
                 ((WorldServer) this.world).getChunkProvider().broadcast(this, new PacketPlayOutAttachEntity(this, (Entity) null));
             }
         }
@@ -1394,10 +1399,11 @@ public abstract class EntityInsentient extends EntityLiving {
 
     @Nullable
     public Entity getLeashHolder() {
+        /*
         if (this.leashHolder == null && this.bx != 0 && this.world.isClientSide) {
             this.leashHolder = this.world.getEntity(this.bx);
         }
-
+        */
         return this.leashHolder;
     }
 
@@ -1409,7 +1415,8 @@ public abstract class EntityInsentient extends EntityLiving {
             this.leashHolder.attachedToPlayer = true;
         }
 
-        if (!this.world.isClientSide && flag && this.world instanceof WorldServer) {
+        // if (!this.world.isClientSide && flag && this.world instanceof WorldServer) {
+        if (flag && this.world instanceof WorldServer) {
             ((WorldServer) this.world).getChunkProvider().broadcast(this, new PacketPlayOutAttachEntity(this, this.leashHolder));
         }
 
@@ -1608,7 +1615,8 @@ public abstract class EntityInsentient extends EntityLiving {
 
     public boolean isInDaylight() { return this.eG(); } // Paper - OBFHELPER
     protected boolean eG() {
-        if (this.world.isDay() && !this.world.isClientSide) {
+        // if (this.world.isDay() && !this.world.isClientSide) {
+        if (this.world.isDay()) {
             float f = this.aR();
             BlockPosition blockposition = this.getVehicle() instanceof EntityBoat ? (new BlockPosition(this.locX(), (double) Math.round(this.locY()), this.locZ())).up() : new BlockPosition(this.locX(), (double) Math.round(this.locY()), this.locZ());
 
diff --git a/src/main/java/net/minecraft/server/EntityIronGolem.java b/src/main/java/net/minecraft/server/EntityIronGolem.java
index 3e224eeb7bdcd0d1c6bd46012366c9d9878dd2a2..d8b8e3fd11a50111cc3f6e8fb1e40aa8898affc9 100644
--- a/src/main/java/net/minecraft/server/EntityIronGolem.java
+++ b/src/main/java/net/minecraft/server/EntityIronGolem.java
@@ -106,9 +106,9 @@ public class EntityIronGolem extends EntityGolem implements IEntityAngerable {
             }
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.a((WorldServer) this.world, true);
-        }
+        // }
 
     }
 
@@ -235,7 +235,7 @@ public class EntityIronGolem extends EntityGolem implements IEntityAngerable {
                     itemstack.subtract(1);
                 }
 
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
         }
     }
diff --git a/src/main/java/net/minecraft/server/EntityItem.java b/src/main/java/net/minecraft/server/EntityItem.java
index 04f69afe05877bf24dbd8a47f3fee6649ef6ebc8..c348ea889170a60da02eca16df7802ba6a5a887a 100644
--- a/src/main/java/net/minecraft/server/EntityItem.java
+++ b/src/main/java/net/minecraft/server/EntityItem.java
@@ -92,10 +92,12 @@ public class EntityItem extends Entity implements HopperPusher {
             } else if (!this.isNoGravity()) {
                 this.setMot(this.getMot().add(0.0D, -0.04D, 0.0D));
             }
-
+            /*
             if (this.world.isClientSide) {
                 this.noclip = false;
             } else if (!this.onGround || this.noclip || this.ticksLived % org.yatopiamc.yatopia.server.YatopiaConfig.itemStuckSleepTicks == 0) { // Yatopia
+            */
+            if (!this.onGround || this.noclip || this.ticksLived % org.yatopiamc.yatopia.server.YatopiaConfig.itemStuckSleepTicks == 0) { // Yatopia
                 this.noclip = !this.world.getCubes(this);
                 if (this.noclip) {
                     this.l(this.locX(), (this.getBoundingBox().minY + this.getBoundingBox().maxY) / 2.0D, this.locZ());
@@ -128,7 +130,8 @@ public class EntityItem extends Entity implements HopperPusher {
                     this.playSound(SoundEffects.ENTITY_GENERIC_BURN, 0.4F, 2.0F + this.random.nextFloat() * 0.4F);
                 }
 
-                if (!this.world.isClientSide && this.z()) {
+                // if (!this.world.isClientSide && this.z()) {
+                if (this.z()) {
                     this.mergeNearby();
                 }
             }
@@ -140,15 +143,16 @@ public class EntityItem extends Entity implements HopperPusher {
             // CraftBukkit end */
 
             this.impulse |= this.aK();
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 double d0 = this.getMot().d(vec3d).g();
 
                 if (d0 > 0.01D) {
                     this.impulse = true;
                 }
-            }
+            // }
 
-            if (!this.world.isClientSide && this.age >= this.getDespawnRate()) { // Spigot // Paper
+            // if (!this.world.isClientSide && this.age >= this.getDespawnRate()) { // Spigot // Paper
+            if (this.age >= this.getDespawnRate()) { // Spigot // Paper
                 // CraftBukkit start - fire ItemDespawnEvent
                 if (org.bukkit.craftbukkit.event.CraftEventFactory.callItemDespawnEvent(this).isCancelled()) {
                     this.age = 0;
@@ -173,7 +177,8 @@ public class EntityItem extends Entity implements HopperPusher {
         this.lastTick = MinecraftServer.currentTick;
         // CraftBukkit end
 
-        if (!this.world.isClientSide && this.age >= this.getDespawnRate()) { // Spigot // Paper
+        // if (!this.world.isClientSide && this.age >= this.getDespawnRate()) { // Spigot // Paper
+        if (this.age >= this.getDespawnRate()) { // Spigot // Paper
             // CraftBukkit start - fire ItemDespawnEvent
             if (org.bukkit.craftbukkit.event.CraftEventFactory.callItemDespawnEvent(this).isCancelled()) {
                 this.age = 0;
@@ -360,7 +365,7 @@ public class EntityItem extends Entity implements HopperPusher {
 
     @Override
     public void pickup(EntityHuman entityhuman) {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             ItemStack itemstack = this.getItemStack();
             Item item = itemstack.getItem();
             int i = itemstack.getCount();
@@ -443,7 +448,7 @@ public class EntityItem extends Entity implements HopperPusher {
                 entityhuman.a(this);
             }
 
-        }
+        // }
     }
 
     @Override
@@ -463,7 +468,8 @@ public class EntityItem extends Entity implements HopperPusher {
     public Entity b(WorldServer worldserver) {
         Entity entity = super.b(worldserver);
 
-        if (!this.world.isClientSide && entity instanceof EntityItem) {
+        // if (!this.world.isClientSide && entity instanceof EntityItem) {
+        if (entity instanceof EntityItem) {
             ((EntityItem) entity).mergeNearby();
         }
 
diff --git a/src/main/java/net/minecraft/server/EntityItemFrame.java b/src/main/java/net/minecraft/server/EntityItemFrame.java
index 372be937f1cf95775e37931f326f6a77836968f3..940e5663990783b02471570067b0f3d7c1d583e3 100644
--- a/src/main/java/net/minecraft/server/EntityItemFrame.java
+++ b/src/main/java/net/minecraft/server/EntityItemFrame.java
@@ -141,7 +141,7 @@ public class EntityItemFrame extends EntityHanging {
         } else if (this.isInvulnerable(damagesource)) {
             return false;
         } else if (!damagesource.isExplosion() && !this.getItem().isEmpty()) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 // CraftBukkit start - fire EntityDamageEvent
                 if (org.bukkit.craftbukkit.event.CraftEventFactory.handleNonLivingEntityDamageEvent(this, damagesource, f, false) || this.dead) {
                     return true;
@@ -149,7 +149,7 @@ public class EntityItemFrame extends EntityHanging {
                 // CraftBukkit end
                 this.b(damagesource.getEntity(), false);
                 this.playSound(SoundEffects.ENTITY_ITEM_FRAME_REMOVE_ITEM, 1.0F, 1.0F);
-            }
+            // }
 
             return true;
         } else {
@@ -353,7 +353,8 @@ public class EntityItemFrame extends EntityHanging {
 
         if (this.fixed) {
             return EnumInteractionResult.PASS;
-        } else if (!this.world.isClientSide) {
+        // } else if (!this.world.isClientSide) {
+        } else {
             if (!flag) {
                 if (flag1 && !this.dead) {
                     this.setItem(itemstack);
@@ -367,9 +368,12 @@ public class EntityItemFrame extends EntityHanging {
             }
 
             return EnumInteractionResult.CONSUME;
+        }
+        /*
         } else {
             return !flag && !flag1 ? EnumInteractionResult.PASS : EnumInteractionResult.SUCCESS;
         }
+        */
     }
 
     public int q() {
diff --git a/src/main/java/net/minecraft/server/EntityLargeFireball.java b/src/main/java/net/minecraft/server/EntityLargeFireball.java
index 3f3be1b2ded6ad118ae7860c1231c7affc0715b6..cb1f08eea51f44530d111ff6a04017796ca106e8 100644
--- a/src/main/java/net/minecraft/server/EntityLargeFireball.java
+++ b/src/main/java/net/minecraft/server/EntityLargeFireball.java
@@ -19,7 +19,7 @@ public class EntityLargeFireball extends EntityFireballFireball {
     @Override
     protected void a(MovingObjectPosition movingobjectposition) {
         super.a(movingobjectposition);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             boolean flag = this.world.purpurConfig.fireballsBypassMobGriefing || this.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING); // Purpur
 
             // CraftBukkit start - fire ExplosionPrimeEvent
@@ -32,14 +32,14 @@ public class EntityLargeFireball extends EntityFireballFireball {
             }
             // CraftBukkit end
             this.die();
-        }
+        // }
 
     }
 
     @Override
     protected void a(MovingObjectPositionEntity movingobjectpositionentity) {
         super.a(movingobjectpositionentity);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             Entity entity = movingobjectpositionentity.getEntity();
             Entity entity1 = this.getShooter();
 
@@ -48,7 +48,7 @@ public class EntityLargeFireball extends EntityFireballFireball {
                 this.a((EntityLiving) entity1, entity);
             }
 
-        }
+        // }
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityLeash.java b/src/main/java/net/minecraft/server/EntityLeash.java
index 6bd25833bc3ff3ca46367a48da001ed9bda8c19d..0863612fd828bdd6cbb2c10166b514d5b3553d22 100644
--- a/src/main/java/net/minecraft/server/EntityLeash.java
+++ b/src/main/java/net/minecraft/server/EntityLeash.java
@@ -65,9 +65,11 @@ public class EntityLeash extends EntityHanging {
 
     @Override
     public EnumInteractionResult a(EntityHuman entityhuman, EnumHand enumhand) {
+        /*
         if (this.world.isClientSide) {
             return EnumInteractionResult.SUCCESS;
         } else {
+        */
             boolean flag = false;
             double d0 = 7.0D;
             List<EntityInsentient> list = this.world.a(EntityInsentient.class, new AxisAlignedBB(this.locX() - 7.0D, this.locY() - 7.0D, this.locZ() - 7.0D, this.locX() + 7.0D, this.locY() + 7.0D, this.locZ() + 7.0D));
@@ -118,7 +120,7 @@ public class EntityLeash extends EntityHanging {
             }
 
             return EnumInteractionResult.CONSUME;
-        }
+        // }
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityLightning.java b/src/main/java/net/minecraft/server/EntityLightning.java
index 5200b0396ee41edb42ff727c78cf3b5fce091d6b..7afb050fa77844523a567b76c0ea9f4ccba2c805 100644
--- a/src/main/java/net/minecraft/server/EntityLightning.java
+++ b/src/main/java/net/minecraft/server/EntityLightning.java
@@ -125,7 +125,8 @@ public class EntityLightning extends Entity {
     }
 
     private void a(int i) {
-        if (!this.isEffect && !this.world.isClientSide && this.world.getGameRules().getBoolean(GameRules.DO_FIRE_TICK)) {
+        // if (!this.isEffect && !this.world.isClientSide && this.world.getGameRules().getBoolean(GameRules.DO_FIRE_TICK)) {
+        if (!this.isEffect && this.world.getGameRules().getBoolean(GameRules.DO_FIRE_TICK)) {
             BlockPosition blockposition = this.getChunkCoordinates();
             IBlockData iblockdata = BlockFireAbstract.a((IBlockAccess) this.world, blockposition);
 
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 62948f586e298d711fbe893ab29d6d61dc6bb62f..d299c3db573643dbc6dc7aa74be7563e07644167 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -225,12 +225,12 @@ public abstract class EntityLiving extends Entity {
             this.aL();
         }
 
-        if (!this.world.isClientSide && flag && this.fallDistance > 0.0F) {
+        if (flag && this.fallDistance > 0.0F) {
             this.cQ();
             this.cR();
         }
 
-        if (!this.world.isClientSide && this.fallDistance > this.safeFallDistance && flag) { // Purpur
+        if (this.fallDistance > this.safeFallDistance && flag) { // Purpur
             float f = (float) MathHelper.f(this.fallDistance - this.safeFallDistance); // Purpur
 
             if (!iblockdata.isAir()) {
@@ -289,7 +289,8 @@ public abstract class EntityLiving extends Entity {
         }
         } // Yatopia
 
-        if (this.isFireProof() || this.world.isClientSide) {
+        // if (this.isFireProof() || this.world.isClientSide) {
+        if (this.isFireProof()) {
             this.extinguish();
         }
 
@@ -315,21 +316,21 @@ public abstract class EntityLiving extends Entity {
                     }
                 }
 
-                if (!this.world.isClientSide && this.isPassenger() && this.getVehicle() != null && !this.getVehicle().bt()) {
+                if (this.isPassenger() && this.getVehicle() != null && !this.getVehicle().bt()) {
                     this.stopRiding();
                 }
             } else if (this.getAirTicks() < this.bH()) {
                 this.setAirTicks(this.m(this.getAirTicks()));
             }
 
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 BlockPosition blockposition = this.getChunkCoordinates();
 
                 if (!Objects.equal(this.bx, blockposition)) {
                     this.bx = blockposition;
                     this.c(blockposition);
                 }
-            }
+            // }
         }
 
         if (this.isAlive() && this.aG()) {
@@ -625,7 +626,8 @@ public abstract class EntityLiving extends Entity {
         }
         this.setAbsorptionHearts(absorptionAmount);
         // Paper end
-        if (nbttagcompound.hasKeyOfType("Attributes", 9) && this.world != null && !this.world.isClientSide) {
+        // if (nbttagcompound.hasKeyOfType("Attributes", 9) && this.world != null && !this.world.isClientSide) {
+        if (nbttagcompound.hasKeyOfType("Attributes", 9) && this.world != null) {
             this.getAttributeMap().a(nbttagcompound.getList("Attributes", 10));
         }
 
@@ -725,7 +727,7 @@ public abstract class EntityLiving extends Entity {
                 if (!mobeffect.tick(this, () -> {
                     this.a(mobeffect, true);
                 })) {
-                    if (!this.world.isClientSide) {
+                    // if (!this.world.isClientSide) {
                         // CraftBukkit start
                         EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, mobeffect, null, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.EXPIRATION);
                         if (event.isCancelled()) {
@@ -734,7 +736,7 @@ public abstract class EntityLiving extends Entity {
                         // CraftBukkit end
                         iterator.remove();
                         this.b(mobeffect);
-                    }
+                    // }
                 } else if (mobeffect.getDuration() % 600 == 0) {
                     this.a(mobeffect, false);
                 }
@@ -755,9 +757,9 @@ public abstract class EntityLiving extends Entity {
         // CraftBukkit end
 
         if (this.updateEffects) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.C();
-            }
+            // }
 
             this.updateEffects = false;
         }
@@ -871,9 +873,11 @@ public abstract class EntityLiving extends Entity {
 
     public boolean removeAllEffects(EntityPotionEffectEvent.Cause cause) {
         // CraftBukkit end
+        /*
         if (this.world.isClientSide) {
             return false;
         } else {
+        */
             Iterator<MobEffect> iterator = this.effects.values().iterator();
 
             boolean flag;
@@ -891,7 +895,7 @@ public abstract class EntityLiving extends Entity {
             }
 
             return flag;
-        }
+        // }
     }
 
     public Collection<MobEffect> getEffects() {
@@ -1017,15 +1021,16 @@ public abstract class EntityLiving extends Entity {
 
     protected void a(MobEffect mobeffect) {
         this.updateEffects = true;
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             mobeffect.getMobEffect().b(this, this.getAttributeMap(), mobeffect.getAmplifier());
-        }
+        // }
 
     }
 
     protected void a(MobEffect mobeffect, boolean flag) {
         this.updateEffects = true;
-        if (flag && !this.world.isClientSide) {
+        // if (flag && !this.world.isClientSide) {
+        if (flag) {
             MobEffectList mobeffectlist = mobeffect.getMobEffect();
 
             mobeffectlist.a(this, this.getAttributeMap(), mobeffect.getAmplifier());
@@ -1036,9 +1041,9 @@ public abstract class EntityLiving extends Entity {
 
     protected void b(MobEffect mobeffect) {
         this.updateEffects = true;
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             mobeffect.getMobEffect().a(this, this.getAttributeMap(), mobeffect.getAmplifier());
-        }
+        // }
 
     }
 
@@ -1112,8 +1117,10 @@ public abstract class EntityLiving extends Entity {
     public boolean damageEntity(DamageSource damagesource, float f) {
         if (this.isInvulnerable(damagesource)) {
             return false;
+        /*
         } else if (this.world.isClientSide) {
             return false;
+        */
         } else if (this.dead || this.killed || this.getHealth() <= 0.0F) { // CraftBukkit - Don't allow entities that got set to dead/killed elsewhere to get damaged and die
             return false;
         } else if (damagesource.isFire() && this.hasEffect(MobEffects.FIRE_RESISTANCE)) {
@@ -1475,7 +1482,7 @@ public abstract class EntityLiving extends Entity {
     }
 
     protected void f(@Nullable EntityLiving entityliving) {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             boolean flag = false;
 
             if (this.killed && entityliving instanceof EntityWither) { // Paper
@@ -1496,7 +1503,7 @@ public abstract class EntityLiving extends Entity {
                 }
             }
 
-        }
+        // }
     }
 
     protected org.bukkit.event.entity.EntityDeathEvent processDeath(DamageSource damagesource) { return d(damagesource); } // Paper - OBFHELPER
@@ -1535,7 +1542,7 @@ public abstract class EntityLiving extends Entity {
 
     // CraftBukkit start
     public int getExpReward() {
-        if (!this.world.isClientSide && (this.alwaysGivesExp() || this.lastDamageByPlayerTime > 0 && this.isDropExperience() && this.world.getGameRules().getBoolean(GameRules.DO_MOB_LOOT))) {
+        if ((this.alwaysGivesExp() || this.lastDamageByPlayerTime > 0 && this.isDropExperience() && this.world.getGameRules().getBoolean(GameRules.DO_MOB_LOOT))) {
             int i = this.getExpValue(this.killer);
             return i;
         } else {
@@ -1871,7 +1878,8 @@ public abstract class EntityLiving extends Entity {
                 return false;
             }
             // Origami start - Don't wake up entities when damage event is cancelled
-            if (this.isSleeping() && !this.world.isClientSide) {
+            // if (this.isSleeping() && !this.world.isClientSide) {
+            if (this.isSleeping()) {
                 this.entityWakeup();
             }
             // Origami end
@@ -2347,7 +2355,8 @@ public abstract class EntityLiving extends Entity {
 
                 this.setMot(vec3d4.d(0.9900000095367432D, 0.9800000190734863D, 0.9900000095367432D));
                 this.move(EnumMoveType.SELF, this.getMot());
-                if (this.positionChanged && !this.world.isClientSide) {
+                // if (this.positionChanged && !this.world.isClientSide) {
+                if (this.positionChanged) {
                     d5 = Math.sqrt(c(this.getMot()));
                     double d6 = d3 - d5;
                     float f4 = (float) (d6 * 10.0D - 3.0D);
@@ -2358,7 +2367,8 @@ public abstract class EntityLiving extends Entity {
                     }
                 }
 
-                if (this.onGround && !this.world.isClientSide) {
+                // if (this.onGround && !this.world.isClientSide) {
+                if (this.onGround) {
                     if (getFlag(7) && !CraftEventFactory.callToggleGlideEvent(this, false).isCancelled()) // CraftBukkit
                     this.setFlag(7, false);
                 }
@@ -2373,12 +2383,14 @@ public abstract class EntityLiving extends Entity {
                 if (this.hasEffect(MobEffects.LEVITATION)) {
                     d7 += (0.05D * (double) (this.getEffect(MobEffects.LEVITATION).getAmplifier() + 1) - vec3d6.y) * 0.2D;
                     this.fallDistance = 0.0F;
+                /*
                 } else if (this.world.isClientSide && !this.world.isLoaded(blockposition)) {
                     if (this.locY() > 0.0D) {
                         d7 = -0.1D;
                     } else {
                         d7 = 0.0D;
                     }
+                */
                 } else if (!this.isNoGravity()) {
                     d7 -= d0;
                 }
@@ -2476,7 +2488,7 @@ public abstract class EntityLiving extends Entity {
         super.tick();
         this.t();
         this.v();
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             int i = this.getArrowCount();
 
             if (i > 0) {
@@ -2519,7 +2531,7 @@ public abstract class EntityLiving extends Entity {
             if (this.isSleeping() && !this.x()) {
                 this.entityWakeup();
             }
-        }
+        // }
 
         if (!dead) this.movementTick(); // Purpur
         double d0 = this.locX() - this.lastX;
@@ -2877,7 +2889,7 @@ public abstract class EntityLiving extends Entity {
             }
         }
         // Purpur end
-        if (!this.world.isClientSide && this.dO() && this.aG()) {
+        if (this.dO() && this.aG()) {
             this.damageEntity(DamageSource.DROWN, 1.0F);
         }
 
@@ -2895,7 +2907,7 @@ public abstract class EntityLiving extends Entity {
 
             if (itemstack.getItem() == Items.ELYTRA && ItemElytra.d(itemstack)) {
                 flag = true;
-                if (!this.world.isClientSide && (this.be + 1) % 20 == 0) {
+                if ((this.be + 1) % 20 == 0) {
                     // Purpur start
                     int damage = world.purpurConfig.elytraDamagePerSecond;
                     if (world.purpurConfig.elytraDamageMultiplyBySpeed > 0) {
@@ -2916,10 +2928,10 @@ public abstract class EntityLiving extends Entity {
             flag = false;
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             if (flag != this.getFlag(7) && !CraftEventFactory.callToggleGlideEvent(this, flag).isCancelled()) // CraftBukkit
             this.setFlag(7, flag);
-        }
+        // }
 
     }
 
@@ -2990,7 +3002,7 @@ public abstract class EntityLiving extends Entity {
             this.bf = 0;
         }
 
-        if (!this.world.isClientSide && this.bf <= 0) {
+        if (this.bf <= 0) {
             this.c(4, false);
         }
 
@@ -3004,9 +3016,9 @@ public abstract class EntityLiving extends Entity {
 
     public void r(int i) {
         this.bf = i;
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.c(4, true);
-        }
+        // }
 
     }
 
@@ -3021,7 +3033,8 @@ public abstract class EntityLiving extends Entity {
         Entity entity = this.getVehicle();
 
         super.stopRiding(suppressCancellation); // Paper - suppress
-        if (entity != null && entity != this.getVehicle() && !this.world.isClientSide && entity.valid) { // Paper - don't process on world gen
+        // if (entity != null && entity != this.getVehicle() && !this.world.isClientSide && entity.valid) { // Paper - don't process on world gen
+        if (entity != null && entity != this.getVehicle() && entity.valid) { // Paper - don't process on world gen
             this.a(entity);
         }
 
@@ -3049,7 +3062,8 @@ public abstract class EntityLiving extends Entity {
     }
 
     public void receive(Entity entity, int i) {
-        if (!entity.dead && !this.world.isClientSide && (entity instanceof EntityItem || entity instanceof EntityArrow || entity instanceof EntityExperienceOrb)) {
+        // if (!entity.dead && !this.world.isClientSide && (entity instanceof EntityItem || entity instanceof EntityArrow || entity instanceof EntityExperienceOrb)) {
+        if (!entity.dead && (entity instanceof EntityItem || entity instanceof EntityArrow || entity instanceof EntityExperienceOrb)) {
             ((WorldServer) this.world).getChunkProvider().broadcast(entity, new PacketPlayOutCollect(entity.getId(), this.getId(), i));
         }
 
@@ -3069,7 +3083,8 @@ public abstract class EntityLiving extends Entity {
     }
 
     public boolean doAITick() {
-        return !this.world.isClientSide;
+        // return !this.world.isClientSide;
+        return true;
     }
 
     @Override
@@ -3172,7 +3187,8 @@ public abstract class EntityLiving extends Entity {
                 // Paper start - lag compensate eating
                 // we add 1 to the expected time to avoid lag compensating when we should not
                 boolean shouldLagCompensate = this.activeItem.getItem().isFood() && this.eatStartTime != -1 && (System.nanoTime() - this.eatStartTime) > ((1 + this.totalEatTimeTicks) * 50 * (1000 * 1000));
-                if ((--this.bd == 0 || shouldLagCompensate) && !this.world.isClientSide && !this.activeItem.m()) {
+                // if ((--this.bd == 0 || shouldLagCompensate) && !this.world.isClientSide && !this.activeItem.m()) {
+                if ((--this.bd == 0 || shouldLagCompensate) && !this.activeItem.m()) {
                     this.setEatTimeTicks(0);
                     // Paper end
                     this.s();
@@ -3228,10 +3244,10 @@ public abstract class EntityLiving extends Entity {
             this.bd = this.totalEatTimeTicks = itemstack.k();
             this.eatStartTime = System.nanoTime();
             // Paper end
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.c(1, true);
                 this.c(2, enumhand == EnumHand.OFF_HAND);
-            }
+            // }
 
         }
     }
@@ -3239,11 +3255,15 @@ public abstract class EntityLiving extends Entity {
     @Override
     public void a(DataWatcherObject<?> datawatcherobject) {
         super.a(datawatcherobject);
+        /*
         if (EntityLiving.bj.equals(datawatcherobject)) {
             if (this.world.isClientSide) {
                 this.getBedPosition().ifPresent(this::a);
             }
         } else if (EntityLiving.ag.equals(datawatcherobject) && this.world.isClientSide) {
+        */
+        /*
+        if (EntityLiving.ag.equals(datawatcherobject) && this.world.isClientSide) {
             if (this.isHandRaised() && this.activeItem.isEmpty()) {
                 this.activeItem = this.b(this.getRaisedHand());
                 if (!this.activeItem.isEmpty()) {
@@ -3257,6 +3277,7 @@ public abstract class EntityLiving extends Entity {
                 // Paper end
             }
         }
+        */
 
     }
 
@@ -3377,9 +3398,9 @@ public abstract class EntityLiving extends Entity {
     }
 
     public void clearActiveItem() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.c(1, false);
-        }
+        // }
 
         this.activeItem = ItemStack.b;
         // Paper start - lag compensate eating
diff --git a/src/main/java/net/minecraft/server/EntityLlama.java b/src/main/java/net/minecraft/server/EntityLlama.java
index f46a7cfe832c8cca83738b71882ff0a9819a7f41..bfd354cdd86d341b4e66687545183a6cbfb17b87 100644
--- a/src/main/java/net/minecraft/server/EntityLlama.java
+++ b/src/main/java/net/minecraft/server/EntityLlama.java
@@ -220,18 +220,18 @@ public class EntityLlama extends EntityHorseChestedAbstract implements IRangedEn
 
         if (this.isBaby() && b0 > 0) {
             this.world.addParticle(Particles.HAPPY_VILLAGER, this.d(1.0D), this.cF() + 0.5D, this.g(1.0D), 0.0D, 0.0D, 0.0D);
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.setAge(b0);
-            }
+            // }
 
             flag = true;
         }
 
         if (b1 > 0 && (flag || !this.isTamed()) && this.getTemper() < this.getMaxDomestication()) {
             flag = true;
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.v(b1);
-            }
+            // }
         }
 
         if (flag && !this.isSilent()) {
@@ -355,10 +355,10 @@ public class EntityLlama extends EntityHorseChestedAbstract implements IRangedEn
 
     @Override
     protected void fe() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             super.fe();
             this.a(m(this.inventoryChest.getItem(1)));
-        }
+        // }
     }
 
     private void a(@Nullable EnumColor enumcolor) {
diff --git a/src/main/java/net/minecraft/server/EntityLlamaSpit.java b/src/main/java/net/minecraft/server/EntityLlamaSpit.java
index aa9afb60808a9988b38cf588ec9f649ee09c728e..0e500e4dd38ee69b62944fad4a5f6c5ecd11ae1a 100644
--- a/src/main/java/net/minecraft/server/EntityLlamaSpit.java
+++ b/src/main/java/net/minecraft/server/EntityLlamaSpit.java
@@ -60,9 +60,9 @@ public class EntityLlamaSpit extends IProjectile {
     @Override
     protected void a(MovingObjectPositionBlock movingobjectpositionblock) {
         super.a(movingobjectpositionblock);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.die();
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityLlamaTrader.java b/src/main/java/net/minecraft/server/EntityLlamaTrader.java
index 665de0c28e052d195bb30ca13e1b129245eff11c..8d277eb4e6f3950a247e66a260857d23bfb713b4 100644
--- a/src/main/java/net/minecraft/server/EntityLlamaTrader.java
+++ b/src/main/java/net/minecraft/server/EntityLlamaTrader.java
@@ -82,9 +82,9 @@ public class EntityLlamaTrader extends EntityLlama {
     @Override
     public void movementTick() {
         super.movementTick();
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.fE();
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
index 298af30b1a7f12d42216fc1b7ee801fd7be93d3c..282d8eee665e2c4ac8cf4d129f20f16ac848ef21 100644
--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
@@ -191,7 +191,8 @@ public abstract class EntityMinecartAbstract extends Entity {
 
     @Override
     public boolean damageEntity(DamageSource damagesource, float f) {
-        if (!this.world.isClientSide && !this.dead) {
+        // if (!this.world.isClientSide && !this.dead) {
+        if (!this.dead) {
             if (this.isInvulnerable(damagesource)) {
                 return false;
             } else {
@@ -303,6 +304,7 @@ public abstract class EntityMinecartAbstract extends Entity {
         // Paper end
 
         // this.doPortalTick(); // CraftBukkit - handled in postTick
+        /*
         if (this.world.isClientSide) {
             if (this.aj > 0) {
                 double d0 = this.locX() + (this.ak - this.locX()) / (double) this.aj;
@@ -321,6 +323,7 @@ public abstract class EntityMinecartAbstract extends Entity {
             }
 
         } else {
+        */
             if (!this.isNoGravity()) {
                 this.setMot(this.getMot().add(0.0D, -0.04D, 0.0D));
             }
@@ -436,7 +439,7 @@ public abstract class EntityMinecartAbstract extends Entity {
             }
 
             this.justCreated = false;
-        }
+        // }
     }
 
     protected double getMaxSpeed() {
@@ -773,7 +776,7 @@ public abstract class EntityMinecartAbstract extends Entity {
 
     @Override
     public void collide(Entity entity) {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             if (!entity.noclip && !this.noclip) {
                 if (!this.world.paperConfig.allowVehicleCollisions && this.world.paperConfig.onlyPlayersCollide && !(entity instanceof EntityPlayer)) return; // Paper
                 if (!this.w(entity)) {
@@ -846,7 +849,7 @@ public abstract class EntityMinecartAbstract extends Entity {
 
                 }
             }
-        }
+        // }
     }
 
     public void setDamage(float f) {
diff --git a/src/main/java/net/minecraft/server/EntityMinecartContainer.java b/src/main/java/net/minecraft/server/EntityMinecartContainer.java
index 6306c9edf0e686cce2c384d4622e6b55112b40d8..a6e6891bfecc004d41e7282666dee608536a7446 100644
--- a/src/main/java/net/minecraft/server/EntityMinecartContainer.java
+++ b/src/main/java/net/minecraft/server/EntityMinecartContainer.java
@@ -97,13 +97,13 @@ public abstract class EntityMinecartContainer extends EntityMinecartAbstract imp
         super.a(damagesource);
         if (this.world.getGameRules().getBoolean(GameRules.DO_ENTITY_DROPS)) {
             InventoryUtils.dropEntity(this.world, this, this);
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 Entity entity = damagesource.j();
 
                 if (entity != null && entity.getEntityType() == EntityTypes.PLAYER) {
                     PiglinAI.a((EntityHuman) entity, true);
                 }
-            }
+            // }
         }
 
     }
@@ -187,7 +187,8 @@ public abstract class EntityMinecartContainer extends EntityMinecartAbstract imp
 
     @Override
     public void die() {
-        if (!this.world.isClientSide && this.c) {
+        // if (!this.world.isClientSide && this.c) {
+        if (this.c) {
             InventoryUtils.dropEntity(this.world, this, this);
         }
 
diff --git a/src/main/java/net/minecraft/server/EntityMushroomCow.java b/src/main/java/net/minecraft/server/EntityMushroomCow.java
index 6c26cd909aff83947108e272700d13e6cc9f2b09..3db5764a62d054f59ea4d3c565e8b902410d6139 100644
--- a/src/main/java/net/minecraft/server/EntityMushroomCow.java
+++ b/src/main/java/net/minecraft/server/EntityMushroomCow.java
@@ -99,7 +99,7 @@ public class EntityMushroomCow extends EntityCow implements IShearable {
             }
 
             this.playSound(soundeffect, 1.0F, 1.0F);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else if (itemstack.getItem() == Items.SHEARS && this.canShear()) {
             // CraftBukkit start
             if (!CraftEventFactory.handlePlayerShearEntityEvent(entityhuman, this, itemstack, enumhand)) {
@@ -107,13 +107,13 @@ public class EntityMushroomCow extends EntityCow implements IShearable {
             }
             // CraftBukkit end
             this.shear(SoundCategory.PLAYERS);
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 itemstack.damage(1, entityhuman, (entityhuman1) -> {
                     entityhuman1.broadcastItemBreak(enumhand);
                 });
-            }
+            // }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else if (this.getVariant() == EntityMushroomCow.Type.BROWN && itemstack.getItem().a((Tag) TagsItem.SMALL_FLOWERS)) {
             if (this.bp != null) {
                 for (int i = 0; i < 2; ++i) {
@@ -141,7 +141,7 @@ public class EntityMushroomCow extends EntityCow implements IShearable {
                 this.playSound(SoundEffects.ENTITY_MOOSHROOM_EAT, 2.0F, 1.0F);
             }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             return super.b(entityhuman, enumhand);
         }
diff --git a/src/main/java/net/minecraft/server/EntityOcelot.java b/src/main/java/net/minecraft/server/EntityOcelot.java
index b8368cf397c26d06f2827a1a786e1f241b810cce..8f5a4a3d40d93997efe975d3b6aa63c8fe9e83de 100644
--- a/src/main/java/net/minecraft/server/EntityOcelot.java
+++ b/src/main/java/net/minecraft/server/EntityOcelot.java
@@ -158,7 +158,7 @@ public class EntityOcelot extends EntityAnimal {
 
         if ((this.br == null || this.br.h()) && !this.isTrusting() && this.k(itemstack) && entityhuman.h((Entity) this) < 9.0D) {
             this.a(entityhuman, itemstack);
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 // CraftBukkit - added event call and isCancelled check
                 if (this.random.nextInt(3) == 0 && !org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTameEvent(this, entityhuman).isCancelled()) {
                     this.setTrusting(true);
@@ -168,9 +168,9 @@ public class EntityOcelot extends EntityAnimal {
                     this.u(false);
                     this.world.broadcastEntityEffect(this, (byte) 40);
                 }
-            }
+            // }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             return super.b(entityhuman, enumhand);
         }
diff --git a/src/main/java/net/minecraft/server/EntityPanda.java b/src/main/java/net/minecraft/server/EntityPanda.java
index d202624853a1a0a0562b62ad5f3792db0916ae03..e72576f40cc0c2b4cf1ecd4d9f2a42db08f617c3 100644
--- a/src/main/java/net/minecraft/server/EntityPanda.java
+++ b/src/main/java/net/minecraft/server/EntityPanda.java
@@ -368,11 +368,12 @@ public class EntityPanda extends EntityAnimal {
 
         if (this.eO()) {
             this.fm();
-            if (!this.world.isClientSide && this.fk() > 80 && this.random.nextInt(20) == 1) {
+            // if (!this.world.isClientSide && this.fk() > 80 && this.random.nextInt(20) == 1) {
+            if (this.fk() > 80 && this.random.nextInt(20) == 1) {
                 if (this.fk() > 100 && this.l(this.getEquipment(EnumItemSlot.MAINHAND))) {
-                    if (!this.world.isClientSide) {
+                    // if (!this.world.isClientSide) {
                         this.setSlot(EnumItemSlot.MAINHAND, ItemStack.b);
-                    }
+                    // }
 
                     this.t(false);
                 }
@@ -441,7 +442,7 @@ public class EntityPanda extends EntityAnimal {
         if (this.bo > 32) {
             this.x(false);
         } else {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 Vec3D vec3d = this.getMot();
 
                 if (this.bo == 1) {
@@ -455,7 +456,7 @@ public class EntityPanda extends EntityAnimal {
                 } else {
                     this.setMot(0.0D, this.onGround ? 0.27D : vec3d.y, 0.0D);
                 }
-            }
+            // }
 
         }
     }
@@ -579,7 +580,7 @@ public class EntityPanda extends EntityAnimal {
             return tryRide(entityhuman, enumhand); // Purpur
         } else if (this.eN()) {
             this.u(false);
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else if (this.k(itemstack)) {
             if (this.getGoalTarget() != null) {
                 this.bw = true;
@@ -588,13 +589,16 @@ public class EntityPanda extends EntityAnimal {
             if (this.isBaby()) {
                 this.a(entityhuman, itemstack);
                 this.setAge((int) ((float) (-this.getAge() / 20) * 0.1F), true);
-            } else if (!this.world.isClientSide && this.getAge() == 0 && this.eP()) {
+            // } else if (!this.world.isClientSide && this.getAge() == 0 && this.eP()) {
+            } else if (this.getAge() == 0 && this.eP()) {
                 this.a(entityhuman, itemstack);
                 this.g(entityhuman);
             } else {
+                /*
                 if (this.world.isClientSide || this.eM() || this.isInWater()) {
                     return tryRide(entityhuman, enumhand); // Purpur
                 }
+                */
 
                 this.ft();
                 this.v(true);
diff --git a/src/main/java/net/minecraft/server/EntityParrot.java b/src/main/java/net/minecraft/server/EntityParrot.java
index d19f8dda87c97de594ad051a6791d99eec581e95..63eea6349acf8cc18237ed1179fdf2f9e0344398 100644
--- a/src/main/java/net/minecraft/server/EntityParrot.java
+++ b/src/main/java/net/minecraft/server/EntityParrot.java
@@ -244,16 +244,16 @@ public class EntityParrot extends EntityPerchable implements EntityBird {
                 this.world.playSound((EntityHuman) null, this.locX(), this.locY(), this.locZ(), SoundEffects.ENTITY_PARROT_EAT, this.getSoundCategory(), 1.0F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.2F);
             }
 
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 if (this.random.nextInt(10) == 0 && !org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTameEvent(this, entityhuman).isCancelled()) { // CraftBukkit
                     this.tame(entityhuman);
                     this.world.broadcastEntityEffect(this, (byte) 7);
                 } else {
                     this.world.broadcastEntityEffect(this, (byte) 6);
                 }
-            }
+            // }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else if (itemstack.getItem() == EntityParrot.bw) {
             if (!entityhuman.abilities.canInstantlyBuild) {
                 itemstack.subtract(1);
@@ -264,13 +264,13 @@ public class EntityParrot extends EntityPerchable implements EntityBird {
                 this.damageEntity(DamageSource.playerAttack(entityhuman), Float.MAX_VALUE);
             }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else if (!this.fa() && this.isTamed() && this.i((EntityLiving) entityhuman)) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.setWillSit(!this.isWillSit());
-            }
+            // }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             return super.b(entityhuman, enumhand);
         }
diff --git a/src/main/java/net/minecraft/server/EntityPhantom.java b/src/main/java/net/minecraft/server/EntityPhantom.java
index 087a91fedc49aaf6e74b81b90494849c4932c956..e4f2601a508f432ffe8dd191439bdd0a8518dd86 100644
--- a/src/main/java/net/minecraft/server/EntityPhantom.java
+++ b/src/main/java/net/minecraft/server/EntityPhantom.java
@@ -164,6 +164,7 @@ public class EntityPhantom extends EntityFlying implements IMonster {
     @Override
     public void tick() {
         super.tick();
+        /*
         if (this.world.isClientSide) {
             float f = MathHelper.cos((float) (this.getId() * 3 + this.ticksLived) * 0.13F + 3.1415927F);
             float f1 = MathHelper.cos((float) (this.getId() * 3 + this.ticksLived + 1) * 0.13F + 3.1415927F);
@@ -180,6 +181,7 @@ public class EntityPhantom extends EntityFlying implements IMonster {
             this.world.addParticle(Particles.MYCELIUM, this.locX() + (double) f2, this.locY() + (double) f4, this.locZ() + (double) f3, 0.0D, 0.0D, 0.0D);
             this.world.addParticle(Particles.MYCELIUM, this.locX() - (double) f2, this.locY() + (double) f4, this.locZ() - (double) f3, 0.0D, 0.0D, 0.0D);
         }
+        */
 
         if (world.purpurConfig.phantomFlamesOnSwoop && getAttackPhase() == AttackPhase.SWOOP) shoot(); // Purpur
     }
diff --git a/src/main/java/net/minecraft/server/EntityPig.java b/src/main/java/net/minecraft/server/EntityPig.java
index 61ea94586ec60dae8e7b32d91403fe93f81fc246..257fbde0de41640b6e4ff196ec1fe5054b76c604 100644
--- a/src/main/java/net/minecraft/server/EntityPig.java
+++ b/src/main/java/net/minecraft/server/EntityPig.java
@@ -77,7 +77,7 @@ public class EntityPig extends EntityAnimal implements ISteerable, ISaddleable {
             return entityhuman.getItemInMainHand().getItem() == Items.CARROT_ON_A_STICK || entityhuman.getItemInOffHand().getItem() == Items.CARROT_ON_A_STICK;
         }
     }
-
+    /*
     @Override
     public void a(DataWatcherObject<?> datawatcherobject) {
         if (EntityPig.bp.equals(datawatcherobject) && this.world.isClientSide) {
@@ -86,6 +86,7 @@ public class EntityPig extends EntityAnimal implements ISteerable, ISaddleable {
 
         super.a(datawatcherobject);
     }
+    */
 
     @Override
     protected void initDatawatcher() {
@@ -131,7 +132,7 @@ public class EntityPig extends EntityAnimal implements ISteerable, ISaddleable {
         boolean flag = this.k(entityhuman.b(enumhand));
 
         if (!flag && this.hasSaddle() && !this.isVehicle() && !entityhuman.eq()) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 // Purpur start
                 if (world.purpurConfig.pigGiveSaddleBack && entityhuman.isSneaking()) {
                     this.saddleStorage.setSaddle(false);
@@ -145,9 +146,9 @@ public class EntityPig extends EntityAnimal implements ISteerable, ISaddleable {
                 }
                 // Purpur end
                 entityhuman.startRiding(this);
-            }
+            // }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             EnumInteractionResult enuminteractionresult = super.b(entityhuman, enumhand);
 
diff --git a/src/main/java/net/minecraft/server/EntityPiglin.java b/src/main/java/net/minecraft/server/EntityPiglin.java
index 4849829df1041568a9fcac6d16501fc0606d95da..7544f1648a5a1cfe14c285fc07d8119234914ccf 100644
--- a/src/main/java/net/minecraft/server/EntityPiglin.java
+++ b/src/main/java/net/minecraft/server/EntityPiglin.java
@@ -169,13 +169,17 @@ public class EntityPiglin extends EntityPiglinAbstract implements ICrossbow {
 
         if (enuminteractionresult.a()) {
             return enuminteractionresult;
-        } else if (!this.world.isClientSide) {
+        // } else if (!this.world.isClientSide) {
+        } else {
             return PiglinAI.a(this, entityhuman, enumhand);
+        }
+        /*
         } else {
             boolean flag = PiglinAI.b(this, entityhuman.b(enumhand)) && this.eN() != EntityPiglinArmPose.ADMIRING_ITEM;
 
             return flag ? EnumInteractionResult.SUCCESS : EnumInteractionResult.PASS;
         }
+        */
     }
 
     @Override
@@ -191,14 +195,14 @@ public class EntityPiglin extends EntityPiglinAbstract implements ICrossbow {
     @Override
     public void setBaby(boolean flag) {
         this.getDataWatcher().set(EntityPiglin.bp, flag);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             AttributeModifiable attributemodifiable = this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED);
 
             attributemodifiable.removeModifier(EntityPiglin.bt);
             if (flag) {
                 attributemodifiable.b(EntityPiglin.bt);
             }
-        }
+        // }
 
     }
 
@@ -271,16 +275,17 @@ public class EntityPiglin extends EntityPiglinAbstract implements ICrossbow {
     @Override
     public boolean damageEntity(DamageSource damagesource, float f) {
         boolean flag = super.damageEntity(damagesource, f);
-
+        /*
         if (this.world.isClientSide) {
             return false;
         } else {
+        */
             if (flag && damagesource.getEntity() instanceof EntityLiving) {
                 PiglinAI.a(this, (EntityLiving) damagesource.getEntity());
             }
 
             return flag;
-        }
+        // }
     }
 
     @Override
@@ -359,7 +364,8 @@ public class EntityPiglin extends EntityPiglinAbstract implements ICrossbow {
 
     @Override
     protected SoundEffect getSoundAmbient() {
-        return this.world.isClientSide ? null : (SoundEffect) PiglinAI.d(this).orElse(null); // Purpur - decompile error
+        // return this.world.isClientSide ? null : (SoundEffect) PiglinAI.d(this).orElse(null); // Purpur - decompile error
+        return (SoundEffect) PiglinAI.d(this).orElse(null);
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityPiglinBrute.java b/src/main/java/net/minecraft/server/EntityPiglinBrute.java
index 50e42cd8ccd48efe6251a37762953f7f55d18277..2da4138318c8b91c20759fdc25a6676b075b20d4 100644
--- a/src/main/java/net/minecraft/server/EntityPiglinBrute.java
+++ b/src/main/java/net/minecraft/server/EntityPiglinBrute.java
@@ -88,16 +88,17 @@ public class EntityPiglinBrute extends EntityPiglinAbstract {
     @Override
     public boolean damageEntity(DamageSource damagesource, float f) {
         boolean flag = super.damageEntity(damagesource, f);
-
+        /*
         if (this.world.isClientSide) {
             return false;
         } else {
+        */
             if (flag && damagesource.getEntity() instanceof EntityLiving) {
                 PiglinBruteAI.a(this, (EntityLiving) damagesource.getEntity());
             }
 
             return flag;
-        }
+        // }
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 46813a0a65977233acdabb225552e8cfc5d06ab9..201987d1e38a7432dc5ec43529531f05ee798354 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -463,7 +463,8 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             containerUpdateDelay = world.paperConfig.containerUpdateTickRate;
         }
         // Paper end
-        if (!this.world.isClientSide && this.activeContainer != this.defaultContainer && (isFrozen() || !this.activeContainer.canUse(this))) { // Paper - auto close while frozen
+        // if (!this.world.isClientSide && this.activeContainer != this.defaultContainer && (isFrozen() || !this.activeContainer.canUse(this))) { // Paper - auto close while frozen
+        if (this.activeContainer != this.defaultContainer && (isFrozen() || !this.activeContainer.canUse(this))) { // Paper - auto close while frozen
             this.closeInventory(org.bukkit.event.inventory.InventoryCloseEvent.Reason.CANT_USE); // Paper
             this.activeContainer = this.defaultContainer;
         }
diff --git a/src/main/java/net/minecraft/server/EntityPolarBear.java b/src/main/java/net/minecraft/server/EntityPolarBear.java
index f72a72e6f76c3896a80a75aae255081e2f8bb507..e15d0803d8d0938cc2832ae9d2c84e8a692e5c5b 100644
--- a/src/main/java/net/minecraft/server/EntityPolarBear.java
+++ b/src/main/java/net/minecraft/server/EntityPolarBear.java
@@ -198,6 +198,7 @@ public class EntityPolarBear extends EntityAnimal implements IEntityAngerable {
     @Override
     public void tick() {
         super.tick();
+        /*
         if (this.world.isClientSide) {
             if (this.bq != this.bp) {
                 this.updateSize();
@@ -210,14 +211,15 @@ public class EntityPolarBear extends EntityAnimal implements IEntityAngerable {
                 this.bq = MathHelper.a(this.bq - 1.0F, 0.0F, 6.0F);
             }
         }
+        */
 
         if (this.br > 0) {
             --this.br;
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.a((WorldServer) this.world, true);
-        }
+        // }
 
         // Purpur start
         if (isStanding() && --standTimer <= 0) {
diff --git a/src/main/java/net/minecraft/server/EntityPotion.java b/src/main/java/net/minecraft/server/EntityPotion.java
index bd84a3ac6146cfe6952a9334820696b4583b45b5..8965ac5e09821507bf592c6337fc23db9a55b8f8 100644
--- a/src/main/java/net/minecraft/server/EntityPotion.java
+++ b/src/main/java/net/minecraft/server/EntityPotion.java
@@ -41,7 +41,7 @@ public class EntityPotion extends EntityProjectileThrowable {
     @Override
     protected void a(MovingObjectPositionBlock movingobjectpositionblock) {
         super.a(movingobjectpositionblock);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             ItemStack itemstack = this.g();
             PotionRegistry potionregistry = PotionUtil.d(itemstack);
             List<MobEffect> list = PotionUtil.getEffects(itemstack);
@@ -62,13 +62,13 @@ public class EntityPotion extends EntityProjectileThrowable {
                 }
             }
 
-        }
+        // }
     }
 
     @Override
     protected void a(MovingObjectPosition movingobjectposition) {
         super.a(movingobjectposition);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             ItemStack itemstack = this.g();
             PotionRegistry potionregistry = PotionUtil.d(itemstack);
             List<MobEffect> list = PotionUtil.getEffects(itemstack);
@@ -88,7 +88,7 @@ public class EntityPotion extends EntityProjectileThrowable {
 
             this.world.triggerEffect(i, this.getChunkCoordinates(), PotionUtil.c(itemstack));
             this.die();
-        }
+        // }
     }
 
     private void splash() {
diff --git a/src/main/java/net/minecraft/server/EntityPufferFish.java b/src/main/java/net/minecraft/server/EntityPufferFish.java
index 815ba3062e0cbc4400f4dae9f80ce8f6745816f5..c30b4e092bcf71d6907fcdbcc542f932f0ea34f1 100644
--- a/src/main/java/net/minecraft/server/EntityPufferFish.java
+++ b/src/main/java/net/minecraft/server/EntityPufferFish.java
@@ -82,7 +82,8 @@ public class EntityPufferFish extends EntityFish {
 
     @Override
     public void tick() {
-        if (!this.world.isClientSide && this.isAlive() && this.doAITick()) {
+        // if (!this.world.isClientSide && this.isAlive() && this.doAITick()) {
+        if (this.isAlive() && this.doAITick()) {
             if (this.c > 0) {
                 if (this.getPuffState() == 0) {
                     this.playSound(SoundEffects.ENTITY_PUFFER_FISH_BLOW_UP, this.getSoundVolume(), this.dH());
diff --git a/src/main/java/net/minecraft/server/EntityRabbit.java b/src/main/java/net/minecraft/server/EntityRabbit.java
index 6559dcafac6cb9673dccdbd44f18e9802b3ac3c2..b7656eedcff49f7a17febb6e9c3a258ad800c59a 100644
--- a/src/main/java/net/minecraft/server/EntityRabbit.java
+++ b/src/main/java/net/minecraft/server/EntityRabbit.java
@@ -103,9 +103,9 @@ public class EntityRabbit extends EntityAnimal {
             }
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.world.broadcastEntityEffect(this, (byte) 1);
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntitySheep.java b/src/main/java/net/minecraft/server/EntitySheep.java
index d9fe8cf00088dba516ea2bfd7e9590d95c7e7939..69d41839c56fda2c617d9fd50e6972875888bf04 100644
--- a/src/main/java/net/minecraft/server/EntitySheep.java
+++ b/src/main/java/net/minecraft/server/EntitySheep.java
@@ -98,7 +98,7 @@ public class EntitySheep extends EntityAnimal implements IShearable {
         this.br = this.bs.g();
         super.mobTick();
     }
-
+    /*
     @Override
     public void movementTick() {
         if (this.world.isClientSide) {
@@ -107,6 +107,7 @@ public class EntitySheep extends EntityAnimal implements IShearable {
 
         super.movementTick();
     }
+    */
 
     public static AttributeProvider.Builder eK() {
         return EntityInsentient.p().a(GenericAttributes.MAX_HEALTH, 8.0D).a(GenericAttributes.MOVEMENT_SPEED, 0.23000000417232513D);
@@ -166,7 +167,8 @@ public class EntitySheep extends EntityAnimal implements IShearable {
         ItemStack itemstack = entityhuman.b(enumhand);
 
         if (itemstack.getItem() == Items.SHEARS) {
-            if (!this.world.isClientSide && this.canShear()) {
+            // if (!this.world.isClientSide && this.canShear()) {
+            if (this.canShear()) {
                 // CraftBukkit start
                 if (!CraftEventFactory.handlePlayerShearEntityEvent(entityhuman, this, itemstack, enumhand)) {
                     return EnumInteractionResult.PASS;
diff --git a/src/main/java/net/minecraft/server/EntityShulker.java b/src/main/java/net/minecraft/server/EntityShulker.java
index d264b9469c891a0b81986d9be12b2cd8510b6015..dbcfd60c994da845b06e724b5c9e4da0dcfbfe96 100644
--- a/src/main/java/net/minecraft/server/EntityShulker.java
+++ b/src/main/java/net/minecraft/server/EntityShulker.java
@@ -149,7 +149,8 @@ public class EntityShulker extends EntityGolem implements IMonster {
         super.tick();
         BlockPosition blockposition = (BlockPosition) ((Optional) this.datawatcher.get(EntityShulker.c)).orElse((Object) null);
 
-        if (blockposition == null && !this.world.isClientSide) {
+        // if (blockposition == null && !this.world.isClientSide) {
+        if (blockposition == null) {
             blockposition = this.getChunkCoordinates();
             this.datawatcher.set(EntityShulker.c, Optional.of(blockposition));
         }
@@ -163,7 +164,8 @@ public class EntityShulker extends EntityGolem implements IMonster {
             this.aA = f;
             this.aB = f;
             this.bu = 0;
-        } else if (!this.world.isClientSide) {
+        // } else if (!this.world.isClientSide) {
+        } else {
             IBlockData iblockdata = this.world.getType(blockposition);
             EnumDirection enumdirection;
 
@@ -210,6 +212,7 @@ public class EntityShulker extends EntityGolem implements IMonster {
         }
 
         if (blockposition != null) {
+            /*
             if (this.world.isClientSide) {
                 if (this.bu > 0 && this.bt != null) {
                     --this.bu;
@@ -217,6 +220,7 @@ public class EntityShulker extends EntityGolem implements IMonster {
                     this.bt = blockposition;
                 }
             }
+            */
 
             this.g((double) blockposition.getX() + 0.5D, (double) blockposition.getY(), (double) blockposition.getZ() + 0.5D);
             double d0 = 0.5D - (double) MathHelper.sin((0.5F + this.bs) * 3.1415927F) * 0.5D;
@@ -338,7 +342,7 @@ public class EntityShulker extends EntityGolem implements IMonster {
         }
 
     }
-
+    /*
     @Override
     public void a(DataWatcherObject<?> datawatcherobject) {
         if (EntityShulker.c.equals(datawatcherobject) && this.world.isClientSide && !this.isPassenger()) {
@@ -358,6 +362,7 @@ public class EntityShulker extends EntityGolem implements IMonster {
 
         super.a(datawatcherobject);
     }
+    */
 
     @Override
     public boolean damageEntity(DamageSource damagesource, float f) {
@@ -407,7 +412,7 @@ public class EntityShulker extends EntityGolem implements IMonster {
     }
 
     public void a(int i) {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.getAttributeInstance(GenericAttributes.ARMOR).removeModifier(EntityShulker.bq);
             if (i == 0) {
                 this.getAttributeInstance(GenericAttributes.ARMOR).addModifier(EntityShulker.bq);
@@ -415,7 +420,7 @@ public class EntityShulker extends EntityGolem implements IMonster {
             } else {
                 this.playSound(SoundEffects.ENTITY_SHULKER_OPEN, 1.0F, 1.0F);
             }
-        }
+        // }
 
         this.datawatcher.set(EntityShulker.d, (byte) i);
     }
diff --git a/src/main/java/net/minecraft/server/EntityShulkerBullet.java b/src/main/java/net/minecraft/server/EntityShulkerBullet.java
index da38bdd6055d06005cfee3e73c32230ad7b480ff..d57d126624695353e7b2b442a256d3a9b2388d57 100644
--- a/src/main/java/net/minecraft/server/EntityShulkerBullet.java
+++ b/src/main/java/net/minecraft/server/EntityShulkerBullet.java
@@ -186,7 +186,7 @@ public class EntityShulkerBullet extends IProjectile {
         super.tick();
         Vec3D vec3d;
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             if (this.target == null && this.ag != null) {
                 this.target = ((WorldServer) this.world).getEntity(this.ag);
                 if (this.target == null) {
@@ -209,15 +209,18 @@ public class EntityShulkerBullet extends IProjectile {
             if (movingobjectposition.getType() != MovingObjectPosition.EnumMovingObjectType.MISS && org.bukkit.craftbukkit.event.CraftEventFactory.callProjectileHitEvent(this, movingobjectposition)) { // Tuinity - implement cancellation properly
                 this.a(movingobjectposition);
             }
-        }
+        // }
 
         this.checkBlockCollisions();
         vec3d = this.getMot();
         this.setPosition(this.locX() + vec3d.x, this.locY() + vec3d.y, this.locZ() + vec3d.z);
         ProjectileHelper.a(this, 0.5F);
+        /*
         if (this.world.isClientSide) {
             this.world.addParticle(Particles.END_ROD, this.locX() - vec3d.x, this.locY() - vec3d.y + 0.15D, this.locZ() - vec3d.z, 0.0D, 0.0D, 0.0D);
         } else if (this.target != null && !this.target.dead) {
+        */
+        if (this.target != null && !this.target.dead) {
             if (this.d > 0) {
                 --this.d;
                 if (this.d == 0) {
@@ -300,11 +303,11 @@ public class EntityShulkerBullet extends IProjectile {
             return false;
         }
         // CraftBukkit end
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.playSound(SoundEffects.ENTITY_SHULKER_BULLET_HURT, 1.0F, 1.0F);
             ((WorldServer) this.world).a(Particles.CRIT, this.locX(), this.locY(), this.locZ(), 15, 0.2D, 0.2D, 0.2D, 0.0D);
             this.die();
-        }
+        // }
 
         return true;
     }
diff --git a/src/main/java/net/minecraft/server/EntitySkeletonAbstract.java b/src/main/java/net/minecraft/server/EntitySkeletonAbstract.java
index ca9075d6bae36c29d9eb4727321afcbced5f3db4..2607bc4fbf10acfee91845db4158af22cef242b6 100644
--- a/src/main/java/net/minecraft/server/EntitySkeletonAbstract.java
+++ b/src/main/java/net/minecraft/server/EntitySkeletonAbstract.java
@@ -129,7 +129,8 @@ public abstract class EntitySkeletonAbstract extends EntityMonster implements IR
     }
 
     public void eL() {
-        if (this.world != null && !this.world.isClientSide) {
+        // if (this.world != null && !this.world.isClientSide) {
+        if (this.world != null) {
             this.goalSelector.a((PathfinderGoal) this.c);
             this.goalSelector.a((PathfinderGoal) this.b);
             ItemStack itemstack = this.b(ProjectileHelper.a((EntityLiving) this, Items.BOW));
@@ -193,9 +194,9 @@ public abstract class EntitySkeletonAbstract extends EntityMonster implements IR
     @Override
     public void setSlot(EnumItemSlot enumitemslot, ItemStack itemstack) {
         super.setSlot(enumitemslot, itemstack);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.eL();
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntitySlime.java b/src/main/java/net/minecraft/server/EntitySlime.java
index 36b384fd8fc29b270bb8c0ccc66ffad15183cf94..f11c9f14c0864490f6fcf7e09bbfffe6a9fc88a1 100644
--- a/src/main/java/net/minecraft/server/EntitySlime.java
+++ b/src/main/java/net/minecraft/server/EntitySlime.java
@@ -231,7 +231,8 @@ public class EntitySlime extends EntityInsentient implements IMonster {
     public void die() {
         int i = this.getSize();
 
-        if (!this.world.isClientSide && i > 1 && this.dl()) {
+        // if (!this.world.isClientSide && i > 1 && this.dl()) {
+        if (i > 1 && this.dl()) {
             IChatBaseComponent ichatbasecomponent = this.getCustomName();
             boolean flag = this.isNoAI();
             float f = (float) i / 4.0F;
diff --git a/src/main/java/net/minecraft/server/EntitySmallFireball.java b/src/main/java/net/minecraft/server/EntitySmallFireball.java
index e7e12ce2338102b875444c3f3cc767858de38dca..02101d81d45d2fbbb04474e4699d0ac1b6997c6b 100644
--- a/src/main/java/net/minecraft/server/EntitySmallFireball.java
+++ b/src/main/java/net/minecraft/server/EntitySmallFireball.java
@@ -24,7 +24,7 @@ public class EntitySmallFireball extends EntityFireballFireball {
     @Override
     protected void a(MovingObjectPositionEntity movingobjectpositionentity) {
         super.a(movingobjectpositionentity);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             Entity entity = movingobjectpositionentity.getEntity();
 
             if (!entity.isFireProof()) {
@@ -48,13 +48,13 @@ public class EntitySmallFireball extends EntityFireballFireball {
                 }
             }
 
-        }
+        // }
     }
 
     @Override
     protected void a(MovingObjectPositionBlock movingobjectpositionblock) {
         super.a(movingobjectpositionblock);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             Entity entity = this.getShooter();
 
             if (isIncendiary) { // CraftBukkit
@@ -65,15 +65,15 @@ public class EntitySmallFireball extends EntityFireballFireball {
                 }
             }
 
-        }
+        // }
     }
 
     @Override
     protected void a(MovingObjectPosition movingobjectposition) {
         super.a(movingobjectposition);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.die();
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntitySnowball.java b/src/main/java/net/minecraft/server/EntitySnowball.java
index d7bab4446a5a8eef98c10b1f6eb89de90365dfeb..ba07dc6489abec5968616d14d1e6f535aed94e1f 100644
--- a/src/main/java/net/minecraft/server/EntitySnowball.java
+++ b/src/main/java/net/minecraft/server/EntitySnowball.java
@@ -37,10 +37,10 @@ public class EntitySnowball extends EntityProjectileThrowable {
     @Override
     protected void a(MovingObjectPosition movingobjectposition) {
         super.a(movingobjectposition);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.world.broadcastEntityEffect(this, (byte) 3);
             this.die();
-        }
+        // }
 
     }
 }
diff --git a/src/main/java/net/minecraft/server/EntitySnowman.java b/src/main/java/net/minecraft/server/EntitySnowman.java
index 550decf12140596e63b57a7ee5940e4f7b7dbc0b..744cbb8cb178cd5f5a25d2d70ccf54419268ef50 100644
--- a/src/main/java/net/minecraft/server/EntitySnowman.java
+++ b/src/main/java/net/minecraft/server/EntitySnowman.java
@@ -77,7 +77,7 @@ public class EntitySnowman extends EntityGolem implements IShearable, IRangedEnt
     @Override
     public void movementTick() {
         super.movementTick();
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             int i = MathHelper.floor(this.locX());
             int j = MathHelper.floor(this.locY());
             int k = MathHelper.floor(this.locZ());
@@ -103,7 +103,7 @@ public class EntitySnowman extends EntityGolem implements IShearable, IRangedEnt
                     org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockFormEvent(this.world, blockposition, iblockdata, this); // CraftBukkit
                 }
             }
-        }
+        // }
 
     }
 
@@ -137,7 +137,7 @@ public class EntitySnowman extends EntityGolem implements IShearable, IRangedEnt
             }
             // CraftBukkit end
             this.shear(SoundCategory.PLAYERS);
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 itemstack.damage(1, entityhuman, (entityhuman1) -> {
                     entityhuman1.broadcastItemBreak(enumhand);
                 });
@@ -149,9 +149,9 @@ public class EntitySnowman extends EntityGolem implements IShearable, IRangedEnt
                     return EnumInteractionResult.SUCCESS;
                 }
                 // Purpur end
-            }
+            // }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         // Purpur start
         } else if (world.purpurConfig.snowGolemPutPumpkinBack && !hasPumpkin() && PUMPKIN.test(itemstack)) {
             setHasPumpkin(true);
diff --git a/src/main/java/net/minecraft/server/EntitySpectralArrow.java b/src/main/java/net/minecraft/server/EntitySpectralArrow.java
index ebe443767dae7ffac45855d0c3dd917475ece93d..365d23026880ef5cd9cc2becd8494a51656a90c9 100644
--- a/src/main/java/net/minecraft/server/EntitySpectralArrow.java
+++ b/src/main/java/net/minecraft/server/EntitySpectralArrow.java
@@ -15,7 +15,7 @@ public class EntitySpectralArrow extends EntityArrow {
     public EntitySpectralArrow(World world, double d0, double d1, double d2) {
         super(EntityTypes.SPECTRAL_ARROW, d0, d1, d2, world);
     }
-
+    /*
     @Override
     public void tick() {
         super.tick();
@@ -24,7 +24,7 @@ public class EntitySpectralArrow extends EntityArrow {
         }
 
     }
-
+    */
     @Override
     protected ItemStack getItemStack() {
         return new ItemStack(Items.SPECTRAL_ARROW);
diff --git a/src/main/java/net/minecraft/server/EntitySpider.java b/src/main/java/net/minecraft/server/EntitySpider.java
index 9001ca50b8d9f77b0d997511b70c39b2712df67a..0b40c4b7f4442e1708a1c34b37e89e770316bcf6 100644
--- a/src/main/java/net/minecraft/server/EntitySpider.java
+++ b/src/main/java/net/minecraft/server/EntitySpider.java
@@ -62,9 +62,9 @@ public class EntitySpider extends EntityMonster {
     @Override
     public void tick() {
         super.tick();
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.t(this.positionChanged);
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntitySquid.java b/src/main/java/net/minecraft/server/EntitySquid.java
index fab7aa5c9f226873504801d7405a7c58043572f7..b46fd03a75f2136745080ad275b2237862a5e890 100644
--- a/src/main/java/net/minecraft/server/EntitySquid.java
+++ b/src/main/java/net/minecraft/server/EntitySquid.java
@@ -108,16 +108,18 @@ public class EntitySquid extends EntityWaterAnimal {
         this.bs = this.br;
         this.bp += this.bu;
         if ((double) this.bp > 6.283185307179586D) {
+            /*
             if (this.world.isClientSide) {
                 this.bp = 6.2831855F;
             } else {
+            */
                 this.bp = (float) ((double) this.bp - 6.283185307179586D);
                 if (this.random.nextInt(10) == 0) {
                     this.bu = 1.0F / (this.random.nextFloat() + 1.0F) * 0.2F;
                 }
 
                 this.world.broadcastEntityEffect(this, (byte) 19);
-            }
+            // }
         }
 
         if (this.aH()) {
@@ -137,9 +139,9 @@ public class EntitySquid extends EntityWaterAnimal {
                 this.bv *= 0.99F;
             }
 
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.setMot((double) (this.bw * this.bt), (double) (this.bx * this.bt), (double) (this.by * this.bt));
-            }
+            // }
 
             Vec3D vec3d = this.getMot();
             float f1 = MathHelper.sqrt(c(vec3d));
@@ -150,7 +152,7 @@ public class EntitySquid extends EntityWaterAnimal {
             this.b += (-((float) MathHelper.d((double) f1, vec3d.y)) * 57.295776F - this.b) * 0.1F;
         } else {
             this.br = MathHelper.e(MathHelper.sin(this.bp)) * 3.1415927F * 0.25F;
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 double d0 = this.getMot().y;
 
                 if (this.hasEffect(MobEffects.LEVITATION)) {
@@ -160,7 +162,7 @@ public class EntitySquid extends EntityWaterAnimal {
                 }
 
                 this.setMot(0.0D, d0 * 0.9800000190734863D, 0.0D);
-            }
+            // }
 
             this.b = (float) ((double) this.b + (double) (-90.0F - this.b) * 0.02D);
         }
diff --git a/src/main/java/net/minecraft/server/EntityStrider.java b/src/main/java/net/minecraft/server/EntityStrider.java
index 11911b10ddc6e2a681f2eda313a6e7c68674a1ac..a39aaf5269bd4bf5d4f32c7cb52d8c208651cc94 100644
--- a/src/main/java/net/minecraft/server/EntityStrider.java
+++ b/src/main/java/net/minecraft/server/EntityStrider.java
@@ -59,7 +59,7 @@ public class EntityStrider extends EntityAnimal implements ISteerable, ISaddleab
 
         return generatoraccess.getType(blockposition_mutableblockposition).isAir();
     }
-
+    /*
     @Override
     public void a(DataWatcherObject<?> datawatcherobject) {
         if (EntityStrider.bq.equals(datawatcherobject) && this.world.isClientSide) {
@@ -68,6 +68,7 @@ public class EntityStrider extends EntityAnimal implements ISteerable, ISaddleab
 
         super.a(datawatcherobject);
     }
+    */
 
     @Override
     protected void initDatawatcher() {
@@ -375,7 +376,7 @@ public class EntityStrider extends EntityAnimal implements ISteerable, ISaddleab
         boolean flag = this.k(entityhuman.b(enumhand));
 
         if (!flag && this.hasSaddle() && !this.isVehicle() && !entityhuman.eq()) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 // Purpur start
                 if (world.purpurConfig.striderGiveSaddleBack && entityhuman.isSneaking()) {
                     this.saddleStorage.setSaddle(false);
@@ -389,9 +390,9 @@ public class EntityStrider extends EntityAnimal implements ISteerable, ISaddleab
                 }
                 // Purpur end
                 entityhuman.startRiding(this);
-            }
+            // }
 
-            return EnumInteractionResult.a(this.world.isClientSide);
+            return EnumInteractionResult.a(true); // Yatopia
         } else {
             EnumInteractionResult enuminteractionresult = super.b(entityhuman, enumhand);
 
diff --git a/src/main/java/net/minecraft/server/EntityTNTPrimed.java b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
index b108874d977a4fb1a7c0d52f66bc08390decb4d0..492fcc6c42724f6e009c25b7cb4d9cfaa132e7e0 100644
--- a/src/main/java/net/minecraft/server/EntityTNTPrimed.java
+++ b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
@@ -69,16 +69,18 @@ public class EntityTNTPrimed extends Entity {
         if (this.fuseTicks <= 0) {
             // CraftBukkit start - Need to reverse the order of the explosion and the entity death so we have a location for the event
             // this.die();
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.explode();
-            }
+            // }
             this.die();
             // CraftBukkit end
         } else {
             this.aK();
+            /*
             if (this.world.isClientSide) {
                 this.world.addParticle(Particles.SMOKE, this.locX(), this.locY() + 0.5D, this.locZ(), 0.0D, 0.0D, 0.0D);
             }
+            */
         }
         // Paper start - Optional prevent TNT from moving in water
         if (!this.dead && this.inWater && this.world.paperConfig.preventTntFromMovingInWater) {
diff --git a/src/main/java/net/minecraft/server/EntityTameableAnimal.java b/src/main/java/net/minecraft/server/EntityTameableAnimal.java
index 8f227678dc4ab1b7369a0c76173b3f695a570620..efc57e94bd40b9eff3bbedb5cbf3ea37bae4237a 100644
--- a/src/main/java/net/minecraft/server/EntityTameableAnimal.java
+++ b/src/main/java/net/minecraft/server/EntityTameableAnimal.java
@@ -171,7 +171,8 @@ public abstract class EntityTameableAnimal extends EntityAnimal {
 
     @Override
     public void die(DamageSource damagesource) {
-        if (!this.world.isClientSide && this.world.getGameRules().getBoolean(GameRules.SHOW_DEATH_MESSAGES) && this.getOwner() instanceof EntityPlayer) {
+        // if (!this.world.isClientSide && this.world.getGameRules().getBoolean(GameRules.SHOW_DEATH_MESSAGES) && this.getOwner() instanceof EntityPlayer) {
+        if (this.world.getGameRules().getBoolean(GameRules.SHOW_DEATH_MESSAGES) && this.getOwner() instanceof EntityPlayer) {
             this.getOwner().sendMessage(this.getCombatTracker().getDeathMessage(), SystemUtils.b);
         }
 
diff --git a/src/main/java/net/minecraft/server/EntityThrownExpBottle.java b/src/main/java/net/minecraft/server/EntityThrownExpBottle.java
index 1d32518bd7982f20574d56f2f2ea4142ea1e015d..7a38df5fab38baf0f337845dd025abacdd599141 100644
--- a/src/main/java/net/minecraft/server/EntityThrownExpBottle.java
+++ b/src/main/java/net/minecraft/server/EntityThrownExpBottle.java
@@ -27,7 +27,7 @@ public class EntityThrownExpBottle extends EntityProjectileThrowable {
     @Override
     protected void a(MovingObjectPosition movingobjectposition) {
         super.a(movingobjectposition);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             // CraftBukkit - moved to after event
             // this.world.triggerEffect(2002, this.getChunkCoordinates(), PotionUtil.a(Potions.WATER));
             int i = 3 + this.world.random.nextInt(5) + this.world.random.nextInt(5);
@@ -48,7 +48,7 @@ public class EntityThrownExpBottle extends EntityProjectileThrowable {
             }
 
             this.die();
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityThrownTrident.java b/src/main/java/net/minecraft/server/EntityThrownTrident.java
index 2acbe7437df71fc27580deddee8eb7655a297b70..5b2a3e2a3cc3153055eb4dff43015118c975188a 100644
--- a/src/main/java/net/minecraft/server/EntityThrownTrident.java
+++ b/src/main/java/net/minecraft/server/EntityThrownTrident.java
@@ -42,7 +42,8 @@ public class EntityThrownTrident extends EntityArrow {
             byte b0 = (Byte) this.datawatcher.get(EntityThrownTrident.g);
 
             if (b0 > 0 && !this.z()) {
-                if (!this.world.isClientSide && this.fromPlayer == EntityArrow.PickupStatus.ALLOWED) {
+                // if (!this.world.isClientSide && this.fromPlayer == EntityArrow.PickupStatus.ALLOWED) {
+                if (this.fromPlayer == EntityArrow.PickupStatus.ALLOWED) {
                     this.a(this.getItemStack(), 0.1F);
                 }
 
@@ -52,9 +53,11 @@ public class EntityThrownTrident extends EntityArrow {
                 Vec3D vec3d = new Vec3D(entity.locX() - this.locX(), entity.getHeadY() - this.locY(), entity.locZ() - this.locZ());
 
                 this.setPositionRaw(this.locX(), this.locY() + vec3d.y * 0.015D * (double) b0, this.locZ());
+                /*
                 if (this.world.isClientSide) {
                     this.E = this.locY();
                 }
+                */
 
                 double d0 = 0.05D * (double) b0;
 
diff --git a/src/main/java/net/minecraft/server/EntityTippedArrow.java b/src/main/java/net/minecraft/server/EntityTippedArrow.java
index 18567cb2906b86cb2b2be4a48d1bca73829d5881..68bac6830ca48d1ef91a0ac945a307e994da9525 100644
--- a/src/main/java/net/minecraft/server/EntityTippedArrow.java
+++ b/src/main/java/net/minecraft/server/EntityTippedArrow.java
@@ -90,6 +90,7 @@ public class EntityTippedArrow extends EntityArrow {
     @Override
     public void tick() {
         super.tick();
+        /*
         if (this.world.isClientSide) {
             if (this.inGround) {
                 if (this.c % 5 == 0) {
@@ -99,6 +100,8 @@ public class EntityTippedArrow extends EntityArrow {
                 this.b(2);
             }
         } else if (this.inGround && this.c != 0 && !this.effects.isEmpty() && this.c >= 600) {
+        */
+        if (this.inGround && this.c != 0 && !this.effects.isEmpty() && this.c >= 600) {
             this.world.broadcastEntityEffect(this, (byte) 0);
             this.potionRegistry = Potions.EMPTY;
             this.effects.clear();
diff --git a/src/main/java/net/minecraft/server/EntityVillager.java b/src/main/java/net/minecraft/server/EntityVillager.java
index 2745cd0d98cfcf25a5304fa8ae0903028a283b25..c874cfc75cf9f9ef1f5dd4db39b54a32e84a83d6 100644
--- a/src/main/java/net/minecraft/server/EntityVillager.java
+++ b/src/main/java/net/minecraft/server/EntityVillager.java
@@ -353,7 +353,8 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
                 boolean flag = this.getOffers().isEmpty();
 
                 if (enumhand == EnumHand.MAIN_HAND) {
-                    if (flag && !this.world.isClientSide) {
+                    // if (flag && !this.world.isClientSide) {
+                    if (flag) {
                         this.fk();
                     }
 
@@ -364,11 +365,12 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
                     return tryRide(entityhuman, enumhand); // Purpur
                 } else {
                     if (world.purpurConfig.villagerRidable && itemstack.isEmpty()) return tryRide(entityhuman, enumhand); // Purpur
-                    if (!this.world.isClientSide && !this.trades.isEmpty()) {
+                    // if (!this.world.isClientSide && !this.trades.isEmpty()) {
+                    if (!this.trades.isEmpty()) {
                         this.h(entityhuman);
                     }
 
-                    return EnumInteractionResult.a(this.world.isClientSide);
+                    return EnumInteractionResult.a(true); // Yatopia
                 }
             }
         } else {
diff --git a/src/main/java/net/minecraft/server/EntityVillagerAbstract.java b/src/main/java/net/minecraft/server/EntityVillagerAbstract.java
index 2a5eda6a7e67d0b8682a96552248ea4e117c1196..894d933bad060743ee295c4ae390d0d28a8d5c48 100644
--- a/src/main/java/net/minecraft/server/EntityVillagerAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityVillagerAbstract.java
@@ -141,7 +141,8 @@ public abstract class EntityVillagerAbstract extends EntityAgeable implements NP
 
     @Override
     public void k(ItemStack itemstack) {
-        if (!this.world.isClientSide && this.e > -this.D() + 20) {
+        // if (!this.world.isClientSide && this.e > -this.D() + 20) {
+        if (this.e > -this.D() + 20) {
             this.e = -this.D();
             this.playSound(this.t(!itemstack.isEmpty()), this.getSoundVolume(), this.dH());
         }
diff --git a/src/main/java/net/minecraft/server/EntityVillagerTrader.java b/src/main/java/net/minecraft/server/EntityVillagerTrader.java
index 32864e522b63d5d02c73a4df9f996c2ebe1b53ad..de5a7028164b03600985fa3ee7f2494ea8dd7a10 100644
--- a/src/main/java/net/minecraft/server/EntityVillagerTrader.java
+++ b/src/main/java/net/minecraft/server/EntityVillagerTrader.java
@@ -94,12 +94,12 @@ public class EntityVillagerTrader extends EntityVillagerAbstract {
                 return tryRide(entityhuman, enumhand); // Purpur
             } else {
                 if (world.purpurConfig.villagerTraderRidable && itemstack.isEmpty()) return tryRide(entityhuman, enumhand); // Purpur
-                if (!this.world.isClientSide) {
+                // if (!this.world.isClientSide) {
                     this.setTradingPlayer(entityhuman);
                     this.openTrade(entityhuman, this.getScoreboardDisplayName(), 1);
-                }
+                // }
 
-                return EnumInteractionResult.a(this.world.isClientSide);
+                return EnumInteractionResult.a(true); // Yatopia
             }
         } else {
             return super.b(entityhuman, enumhand);
@@ -217,9 +217,9 @@ public class EntityVillagerTrader extends EntityVillagerAbstract {
     @Override
     public void movementTick() {
         super.movementTick();
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.eY();
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityWitch.java b/src/main/java/net/minecraft/server/EntityWitch.java
index dc846e7bda587a47b1cce9054e587a734179e7fe..5881b0b2032a45ca0765be8c6a0e2559f892369e 100644
--- a/src/main/java/net/minecraft/server/EntityWitch.java
+++ b/src/main/java/net/minecraft/server/EntityWitch.java
@@ -97,7 +97,8 @@ public class EntityWitch extends EntityRaider implements IRangedEntity {
 
     @Override
     public void movementTick() {
-        if (!this.world.isClientSide && this.isAlive()) {
+        // if (!this.world.isClientSide && this.isAlive()) {
+        if (this.isAlive()) {
             this.br.j();
             if (this.br.h() <= 0) {
                 this.bs.a(true);
diff --git a/src/main/java/net/minecraft/server/EntityWither.java b/src/main/java/net/minecraft/server/EntityWither.java
index d77ef303562ca255d51cf527d7dc8be6a4b8facc..36bef8efd708977c7f9ee6079144cb7ded0d1f60 100644
--- a/src/main/java/net/minecraft/server/EntityWither.java
+++ b/src/main/java/net/minecraft/server/EntityWither.java
@@ -220,7 +220,8 @@ public class EntityWither extends EntityMonster implements IRangedEntity {
     public void movementTick() {
         Vec3D vec3d = this.getMot().d(1.0D, 0.6D, 1.0D);
 
-        if (!this.world.isClientSide && this.getHeadTarget(0) > 0) {
+        // if (!this.world.isClientSide && this.getHeadTarget(0) > 0) {
+        if (this.getHeadTarget(0) > 0) {
             Entity entity = this.world.getEntity(this.getHeadTarget(0));
 
             if (entity != null) {
diff --git a/src/main/java/net/minecraft/server/EntityWitherSkull.java b/src/main/java/net/minecraft/server/EntityWitherSkull.java
index fedc78e4111864d1413e6fcd588b9951595b463a..7b0e945a2e02826b8df3312894ba9378b50b58cc 100644
--- a/src/main/java/net/minecraft/server/EntityWitherSkull.java
+++ b/src/main/java/net/minecraft/server/EntityWitherSkull.java
@@ -32,7 +32,7 @@ public class EntityWitherSkull extends EntityFireball {
     @Override
     protected void a(MovingObjectPositionEntity movingobjectpositionentity) {
         super.a(movingobjectpositionentity);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             Entity entity = movingobjectpositionentity.getEntity();
             Entity entity1 = this.getShooter();
             boolean flag;
@@ -66,13 +66,13 @@ public class EntityWitherSkull extends EntityFireball {
                 }
             }
 
-        }
+        // }
     }
 
     @Override
     protected void a(MovingObjectPosition movingobjectposition) {
         super.a(movingobjectposition);
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             Explosion.Effect explosion_effect = (this.world.purpurConfig.witherBypassMobGriefing || this.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING)) ? Explosion.Effect.DESTROY : Explosion.Effect.NONE; // Purpur
 
             // CraftBukkit start
@@ -85,7 +85,7 @@ public class EntityWitherSkull extends EntityFireball {
             }
             // CraftBukkit end
             this.die();
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityWolf.java b/src/main/java/net/minecraft/server/EntityWolf.java
index 03bcbf7c280476ef0e6fe87e3a96edb75544bddb..de69b7ec7c5ec58fd52b5ddf6a53f944351bfc87 100644
--- a/src/main/java/net/minecraft/server/EntityWolf.java
+++ b/src/main/java/net/minecraft/server/EntityWolf.java
@@ -234,16 +234,17 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
     @Override
     public void movementTick() {
         super.movementTick();
-        if (!this.world.isClientSide && this.bw && !this.bx && !this.eI() && this.onGround) {
+        // if (!this.world.isClientSide && this.bw && !this.bx && !this.eI() && this.onGround) {
+        if (this.bw && !this.bx && !this.eI() && this.onGround) {
             this.bx = true;
             this.by = 0.0F;
             this.bz = 0.0F;
             this.world.broadcastEntityEffect(this, (byte) 8);
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.a((WorldServer) this.world, true);
-        }
+        // }
 
     }
 
@@ -265,6 +266,7 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
 
             if (this.aG()) {
                 this.bw = true;
+                // if (this.bx && !this.world.isClientSide) {
                 if (this.bx && !this.world.isClientSide) {
                     this.world.broadcastEntityEffect(this, (byte) 56);
                     this.eZ();
@@ -369,12 +371,13 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
     public EnumInteractionResult b(EntityHuman entityhuman, EnumHand enumhand) {
         ItemStack itemstack = entityhuman.b(enumhand);
         Item item = itemstack.getItem();
-
+        /*
         if (this.world.isClientSide) {
             boolean flag = this.i((EntityLiving) entityhuman) || this.isTamed() || item == Items.BONE && !this.isTamed() && !this.isAngry();
 
             return flag ? EnumInteractionResult.CONSUME : EnumInteractionResult.PASS;
         } else {
+        */
             if (this.isTamed()) {
                 if (this.k(itemstack) && this.getHealth() < this.getMaxHealth()) {
                     if (!entityhuman.abilities.canInstantlyBuild) {
@@ -443,7 +446,7 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
             // Purpur end
 
             return super.b(entityhuman, enumhand);
-        }
+        // }
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityZoglin.java b/src/main/java/net/minecraft/server/EntityZoglin.java
index bcc4aa1d3f09e43016d0009cd04dd6b797dcfeca..36b54f9a2cda0d1e92a11154da91ff59f81da2eb 100644
--- a/src/main/java/net/minecraft/server/EntityZoglin.java
+++ b/src/main/java/net/minecraft/server/EntityZoglin.java
@@ -134,10 +134,12 @@ public class EntityZoglin extends EntityMonster implements IMonster, IOglin {
     @Override
     public boolean damageEntity(DamageSource damagesource, float f) {
         boolean flag = super.damageEntity(damagesource, f);
-
+        /*
         if (this.world.isClientSide) {
             return false;
         } else if (flag && damagesource.getEntity() instanceof EntityLiving) {
+        */
+        if (flag && damagesource.getEntity() instanceof EntityLiving) {
             EntityLiving entityliving = (EntityLiving) damagesource.getEntity();
 
             if (IEntitySelector.f.test(entityliving) && !BehaviorUtil.a(this, entityliving, 4.0D)) {
@@ -185,7 +187,8 @@ public class EntityZoglin extends EntityMonster implements IMonster, IOglin {
     @Override
     public void setBaby(boolean flag) {
         this.getDataWatcher().set(EntityZoglin.d, flag);
-        if (!this.world.isClientSide && flag) {
+        // if (!this.world.isClientSide && flag) {
+        if (flag) {
             this.getAttributeInstance(GenericAttributes.ATTACK_DAMAGE).setValue(0.5D);
         }
 
@@ -207,7 +210,8 @@ public class EntityZoglin extends EntityMonster implements IMonster, IOglin {
 
     @Override
     protected SoundEffect getSoundAmbient() {
-        return this.world.isClientSide ? null : (this.bg.hasMemory(MemoryModuleType.ATTACK_TARGET) ? SoundEffects.ENTITY_ZOGLIN_ANGRY : SoundEffects.ENTITY_ZOGLIN_AMBIENT);
+        // return this.world.isClientSide ? null : (this.bg.hasMemory(MemoryModuleType.ATTACK_TARGET) ? SoundEffects.ENTITY_ZOGLIN_ANGRY : SoundEffects.ENTITY_ZOGLIN_AMBIENT);
+        return this.bg.hasMemory(MemoryModuleType.ATTACK_TARGET) ? SoundEffects.ENTITY_ZOGLIN_ANGRY : SoundEffects.ENTITY_ZOGLIN_AMBIENT;
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityZombie.java b/src/main/java/net/minecraft/server/EntityZombie.java
index 16d73dc50b76523dd03e12d566646874e86fabca..b6b00776b81be943bdc67b3e3350718a9b814b84 100644
--- a/src/main/java/net/minecraft/server/EntityZombie.java
+++ b/src/main/java/net/minecraft/server/EntityZombie.java
@@ -172,7 +172,8 @@ public class EntityZombie extends EntityMonster {
     @Override
     public void setBaby(boolean flag) {
         this.getDataWatcher().set(EntityZombie.d, flag);
-        if (this.world != null && !this.world.isClientSide) {
+        // if (this.world != null && !this.world.isClientSide) {
+        if (this.world != null) {
             AttributeModifiable attributemodifiable = this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED);
 
             attributemodifiable.removeModifier(this.babyModifier); // Paper
@@ -198,7 +199,8 @@ public class EntityZombie extends EntityMonster {
 
     @Override
     public void tick() {
-        if (!this.world.isClientSide && this.isAlive() && !this.isNoAI()) {
+        // if (!this.world.isClientSide && this.isAlive() && !this.isNoAI()) {
+        if (this.isAlive() && !this.isNoAI()) {
             if (this.isDrownConverting()) {
                 // CraftBukkit start - Use wall time instead of ticks for conversion
                 int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
diff --git a/src/main/java/net/minecraft/server/EntityZombieVillager.java b/src/main/java/net/minecraft/server/EntityZombieVillager.java
index dc850677c29c16805f28af00b2a633638a776f0d..239d63f2dbb662d243ce59915d85bc7542bcd0d0 100644
--- a/src/main/java/net/minecraft/server/EntityZombieVillager.java
+++ b/src/main/java/net/minecraft/server/EntityZombieVillager.java
@@ -128,7 +128,8 @@ public class EntityZombieVillager extends EntityZombie implements VillagerDataHo
 
     @Override
     public void tick() {
-        if (!this.world.isClientSide && this.isAlive() && this.isConverting()) {
+        // if (!this.world.isClientSide && this.isAlive() && this.isConverting()) {
+        if (this.isAlive() && this.isConverting()) {
             int i = this.getConversionProgress();
             // CraftBukkit start - Use wall time instead of ticks for villager conversion
             int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
@@ -155,9 +156,9 @@ public class EntityZombieVillager extends EntityZombie implements VillagerDataHo
                     itemstack.subtract(1);
                 }
 
-                if (!this.world.isClientSide) {
+                // if (!this.world.isClientSide) {
                     this.startConversion(entityhuman.getUniqueID(), this.random.nextInt(2401) + 3600);
-                }
+                // }
 
                 return EnumInteractionResult.SUCCESS;
             } else {
diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index 5ca4d03215c979a4d122a32178a1859b4d9c3334..ef05a46ec50b62e185a6bea00eb90ff4bb0f39b6 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -218,9 +218,11 @@ public class Explosion {
     }
 
     public void a(boolean flag) {
+        /*
         if (this.world.isClientSide) {
             this.world.a(this.posX, this.posY, this.posZ, SoundEffects.ENTITY_GENERIC_EXPLODE, SoundCategory.BLOCKS, 4.0F, (1.0F + (this.world.random.nextFloat() - this.world.random.nextFloat()) * 0.2F) * 0.7F, false);
         }
+        */
 
         boolean flag1 = this.c != Explosion.Effect.NONE;
 
diff --git a/src/main/java/net/minecraft/server/ItemArmorStand.java b/src/main/java/net/minecraft/server/ItemArmorStand.java
index 315faee9e35d27071a62ea1d335dfbe5351582ca..6b8a9cb42fa607a55d5f98da3a1aff55afe9c10c 100644
--- a/src/main/java/net/minecraft/server/ItemArmorStand.java
+++ b/src/main/java/net/minecraft/server/ItemArmorStand.java
@@ -56,7 +56,7 @@ public class ItemArmorStand extends Item {
                 }
 
                 itemstack.subtract(1);
-                return EnumInteractionResult.a(world.isClientSide);
+                return EnumInteractionResult.a(false);
             } else {
                 return EnumInteractionResult.FAIL;
             }
diff --git a/src/main/java/net/minecraft/server/ItemBlock.java b/src/main/java/net/minecraft/server/ItemBlock.java
index b8c71925a6e4c58fcefba0ab38270aaa236aabba..be4a7c13cdea4fa2aad8fbff3f80a60a4bbca7aa 100644
--- a/src/main/java/net/minecraft/server/ItemBlock.java
+++ b/src/main/java/net/minecraft/server/ItemBlock.java
@@ -80,7 +80,7 @@ public class ItemBlock extends Item {
                         itemstack.subtract(1);
                     }
 
-                    return EnumInteractionResult.a(world.isClientSide);
+                    return EnumInteractionResult.a(false);
                 }
             }
         }
diff --git a/src/main/java/net/minecraft/server/ItemBoneMeal.java b/src/main/java/net/minecraft/server/ItemBoneMeal.java
index 01a7cf4c5b2a504c0c2dc569438a67566587378d..a8d49011db575f6fb3e2a84247bdc443fc27c5d4 100644
--- a/src/main/java/net/minecraft/server/ItemBoneMeal.java
+++ b/src/main/java/net/minecraft/server/ItemBoneMeal.java
@@ -27,7 +27,7 @@ public class ItemBoneMeal extends Item {
                 world.triggerEffect(2005, blockposition, 0);
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             IBlockData iblockdata = world.getType(blockposition);
             boolean flag = iblockdata.d(world, blockposition, itemactioncontext.getClickedFace());
@@ -37,7 +37,7 @@ public class ItemBoneMeal extends Item {
                     world.triggerEffect(2005, blockposition1, 0);
                 }
 
-                return EnumInteractionResult.a(world.isClientSide);
+                return EnumInteractionResult.a(false);
             } else {
                 return EnumInteractionResult.PASS;
             }
diff --git a/src/main/java/net/minecraft/server/ItemDebugStick.java b/src/main/java/net/minecraft/server/ItemDebugStick.java
index 54e2bc2ff6775c93d31c41296a04475a9640f73c..7ebed3e3c3425889bc2732fe7d422c60329c263a 100644
--- a/src/main/java/net/minecraft/server/ItemDebugStick.java
+++ b/src/main/java/net/minecraft/server/ItemDebugStick.java
@@ -34,7 +34,7 @@ public class ItemDebugStick extends Item {
             this.a(entityhuman, world.getType(blockposition), world, blockposition, true, itemactioncontext.getItemStack());
         }
 
-        return EnumInteractionResult.a(world.isClientSide);
+        return EnumInteractionResult.a(false);
     }
 
     private void a(EntityHuman entityhuman, IBlockData iblockdata, GeneratorAccess generatoraccess, BlockPosition blockposition, boolean flag, ItemStack itemstack) {
diff --git a/src/main/java/net/minecraft/server/ItemEndCrystal.java b/src/main/java/net/minecraft/server/ItemEndCrystal.java
index f948cf01f804f0c310f5d261a5d8badc4d948fe9..959e1008f6e1a06c3f45bbd4acc5273d1c27b40e 100644
--- a/src/main/java/net/minecraft/server/ItemEndCrystal.java
+++ b/src/main/java/net/minecraft/server/ItemEndCrystal.java
@@ -48,7 +48,7 @@ public class ItemEndCrystal extends Item {
                     }
 
                     itemactioncontext.getItemStack().subtract(1);
-                    return EnumInteractionResult.a(world.isClientSide);
+                    return EnumInteractionResult.a(false);
                 }
             }
         }
diff --git a/src/main/java/net/minecraft/server/ItemFireball.java b/src/main/java/net/minecraft/server/ItemFireball.java
index 7886f516a16f55547d0050138b17fee72b31552a..2b871ee9c9cbfdad654923497ba623476134b7f7 100644
--- a/src/main/java/net/minecraft/server/ItemFireball.java
+++ b/src/main/java/net/minecraft/server/ItemFireball.java
@@ -44,7 +44,7 @@ public class ItemFireball extends Item {
 
         if (flag) {
             itemactioncontext.getItemStack().subtract(1);
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return EnumInteractionResult.FAIL;
         }
diff --git a/src/main/java/net/minecraft/server/ItemFireworks.java b/src/main/java/net/minecraft/server/ItemFireworks.java
index 990eb656699d9ead26b42fbb305530b7ae860ee8..7ca7b7bc2636c919f9cf7aa648da7896d774a288 100644
--- a/src/main/java/net/minecraft/server/ItemFireworks.java
+++ b/src/main/java/net/minecraft/server/ItemFireworks.java
@@ -28,7 +28,7 @@ public class ItemFireworks extends Item {
             // Paper end
         }
 
-        return EnumInteractionResult.a(world.isClientSide);
+        return EnumInteractionResult.a(false);
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/ItemHanging.java b/src/main/java/net/minecraft/server/ItemHanging.java
index f2f800087adb0238b4b672b9f6f4c8c4836f2891..5a70c461aaf78b0de88fd7f4e0d85605ee097a64 100644
--- a/src/main/java/net/minecraft/server/ItemHanging.java
+++ b/src/main/java/net/minecraft/server/ItemHanging.java
@@ -32,7 +32,7 @@ public class ItemHanging extends Item {
                 object = new EntityPainting(world, blockposition1, enumdirection);
             } else {
                 if (this.a != EntityTypes.ITEM_FRAME) {
-                    return EnumInteractionResult.a(world.isClientSide);
+                    return EnumInteractionResult.a(false);
                 }
 
                 object = new EntityItemFrame(world, blockposition1, enumdirection);
@@ -68,7 +68,7 @@ public class ItemHanging extends Item {
                 }
 
                 itemstack.subtract(1);
-                return EnumInteractionResult.a(world.isClientSide);
+                return EnumInteractionResult.a(false);
             } else {
                 return EnumInteractionResult.CONSUME;
             }
diff --git a/src/main/java/net/minecraft/server/ItemLeash.java b/src/main/java/net/minecraft/server/ItemLeash.java
index aadceb34a09729b883ff1fcabfafdc02b4448bff..204642e7c840c271779d204fa25ce5f114c8c03f 100644
--- a/src/main/java/net/minecraft/server/ItemLeash.java
+++ b/src/main/java/net/minecraft/server/ItemLeash.java
@@ -24,7 +24,7 @@ public class ItemLeash extends Item {
                 a(entityhuman, world, blockposition);
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return EnumInteractionResult.PASS;
         }
diff --git a/src/main/java/net/minecraft/server/ItemMinecart.java b/src/main/java/net/minecraft/server/ItemMinecart.java
index 002651aaf3b8a9b489fe323756cd1ad13f9874e8..3091c98c77d221ff75049f064b9d140436b50690 100644
--- a/src/main/java/net/minecraft/server/ItemMinecart.java
+++ b/src/main/java/net/minecraft/server/ItemMinecart.java
@@ -132,7 +132,7 @@ public class ItemMinecart extends Item {
             }
 
             itemstack.subtract(1);
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         //} // Purpur - place minecarts anywhere
     }
 }
diff --git a/src/main/java/net/minecraft/server/ItemRecord.java b/src/main/java/net/minecraft/server/ItemRecord.java
index 3e49b2c9db37ddba1c6bdd544877d5e7cd67141e..e0d7865531e177a64b896dc902252a4f0de3386c 100644
--- a/src/main/java/net/minecraft/server/ItemRecord.java
+++ b/src/main/java/net/minecraft/server/ItemRecord.java
@@ -37,7 +37,7 @@ public class ItemRecord extends Item {
                 }
             }
 
-            return EnumInteractionResult.a(world.isClientSide);
+            return EnumInteractionResult.a(false);
         } else {
             return EnumInteractionResult.PASS;
         }
diff --git a/src/main/java/net/minecraft/server/TileEntityBeacon.java b/src/main/java/net/minecraft/server/TileEntityBeacon.java
index f97b27a4751d1fc3287de8dba384ab5639b832b8..1258b335abfa570c1cf1dc891c7f6b6de114fa68 100644
--- a/src/main/java/net/minecraft/server/TileEntityBeacon.java
+++ b/src/main/java/net/minecraft/server/TileEntityBeacon.java
@@ -91,7 +91,8 @@ public class TileEntityBeacon extends TileEntity implements ITileInventory, ITic
                         TileEntityBeacon.this.levels = j;
                         break;
                     case 1:
-                        if (!TileEntityBeacon.this.world.isClientSide && !TileEntityBeacon.this.c.isEmpty()) {
+                        // if (!TileEntityBeacon.this.world.isClientSide && !TileEntityBeacon.this.c.isEmpty()) {
+                        if (!TileEntityBeacon.this.c.isEmpty()) {
                             TileEntityBeacon.this.a(SoundEffects.BLOCK_BEACON_POWER_SELECT);
                         }
 
@@ -179,7 +180,7 @@ public class TileEntityBeacon extends TileEntity implements ITileInventory, ITic
             boolean flag = i1 > 0;
 
             this.c = this.g;
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 boolean flag1 = this.levels > 0;
 
                 if (!flag && flag1) {
@@ -194,7 +195,7 @@ public class TileEntityBeacon extends TileEntity implements ITileInventory, ITic
                 } else if (flag && !flag1) {
                     this.a(SoundEffects.BLOCK_BEACON_DEACTIVATE);
                 }
-            }
+            // }
         }
 
     }
@@ -306,7 +307,8 @@ public class TileEntityBeacon extends TileEntity implements ITileInventory, ITic
     }
 
     private void applyEffects() {
-        if (!this.world.isClientSide && this.primaryEffect != null) {
+        // if (!this.world.isClientSide && this.primaryEffect != null) {
+        if (this.primaryEffect != null) {
             double d0 = (double) (this.levels * 10 + 10);
             byte b0 = getAmplification();
 
diff --git a/src/main/java/net/minecraft/server/TileEntityBeehive.java b/src/main/java/net/minecraft/server/TileEntityBeehive.java
index 70239fa5ac05464606ad917b3c3498156c12c536..5f463483d5599fad08b018e1e792398a4d5bd10e 100644
--- a/src/main/java/net/minecraft/server/TileEntityBeehive.java
+++ b/src/main/java/net/minecraft/server/TileEntityBeehive.java
@@ -287,7 +287,7 @@ public class TileEntityBeehive extends TileEntity implements ITickable {
     @Override
     public void tick() {
         if (this.bees.size() == 0) { return; } // Yatopia - TE optimizations
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.y();
             BlockPosition blockposition = this.getPosition();
 
@@ -300,7 +300,7 @@ public class TileEntityBeehive extends TileEntity implements ITickable {
             }
 
             this.l();
-        }
+        // }
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/TileEntityBell.java b/src/main/java/net/minecraft/server/TileEntityBell.java
index 6963f3c8a0e257615084b558f5ce287aab9722ff..7d06752aac6eb7854ff76b2bcdf1d923bc9d2d8a 100644
--- a/src/main/java/net/minecraft/server/TileEntityBell.java
+++ b/src/main/java/net/minecraft/server/TileEntityBell.java
@@ -93,7 +93,7 @@ public class TileEntityBell extends TileEntity implements ITickable {
             this.h = this.world.a(EntityLiving.class, axisalignedbb);
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             Iterator iterator = this.h.iterator();
 
             while (iterator.hasNext()) {
@@ -103,7 +103,7 @@ public class TileEntityBell extends TileEntity implements ITickable {
                     entityliving.getBehaviorController().setMemory(MemoryModuleType.HEARD_BELL_TIME, this.world.getTime()); // Paper - decompile fix
                 }
             }
-        }
+        // }
 
         this.getEntitiesAtRing().removeIf(e -> !e.isAlive()); // Paper
     }
diff --git a/src/main/java/net/minecraft/server/TileEntityBrewingStand.java b/src/main/java/net/minecraft/server/TileEntityBrewingStand.java
index caee4f612238ee7112ed2f29e954cfe3b74a558e..b1d58d370f132195cd67c250a6866602c5a74fe8 100644
--- a/src/main/java/net/minecraft/server/TileEntityBrewingStand.java
+++ b/src/main/java/net/minecraft/server/TileEntityBrewingStand.java
@@ -169,7 +169,7 @@ public class TileEntityBrewingStand extends TileEntityContainer implements IWorl
             this.update();
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             boolean[] aboolean = this.f();
 
             if (!Arrays.equals(aboolean, this.j)) {
@@ -186,7 +186,7 @@ public class TileEntityBrewingStand extends TileEntityContainer implements IWorl
 
                 this.world.setTypeAndData(this.position, iblockdata, 2);
             }
-        }
+        // }
 
     }
 
@@ -247,7 +247,8 @@ public class TileEntityBrewingStand extends TileEntityContainer implements IWorl
 
             if (itemstack.isEmpty()) {
                 itemstack = itemstack1;
-            } else if (!this.world.isClientSide) {
+            // } else if (!this.world.isClientSide) {
+            } else {
                 InventoryUtils.dropItem(this.world, (double) blockposition.getX(), (double) blockposition.getY(), (double) blockposition.getZ(), itemstack1);
             }
         }
diff --git a/src/main/java/net/minecraft/server/TileEntityCampfire.java b/src/main/java/net/minecraft/server/TileEntityCampfire.java
index 0a60141b9ef3ac9eca7913d168d73ca5862a9bfa..7fb3a5a78d55e369c21199e4153da3dffb88cade 100644
--- a/src/main/java/net/minecraft/server/TileEntityCampfire.java
+++ b/src/main/java/net/minecraft/server/TileEntityCampfire.java
@@ -25,14 +25,15 @@ public class TileEntityCampfire extends TileEntity implements Clearable, ITickab
     @Override
     public void tick() {
         boolean flag = (Boolean) this.getBlock().get(BlockCampfire.LIT);
-        boolean flag1 = this.world.isClientSide;
-
+        // boolean flag1 = this.world.isClientSide;
+        /*
         if (flag1) {
             if (flag) {
                 this.j();
             }
 
         } else {
+        */
             if (flag) {
                 this.h();
             } else {
@@ -43,7 +44,7 @@ public class TileEntityCampfire extends TileEntity implements Clearable, ITickab
                 }
             }
 
-        }
+        // }
     }
 
     private void h() {
@@ -200,9 +201,9 @@ public class TileEntityCampfire extends TileEntity implements Clearable, ITickab
 
     public void f() {
         if (this.world != null) {
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 InventoryUtils.a(this.world, this.getPosition(), this.getItems());
-            }
+            // }
 
             this.k();
         }
diff --git a/src/main/java/net/minecraft/server/TileEntityConduit.java b/src/main/java/net/minecraft/server/TileEntityConduit.java
index ade830122762b2ba9a0142bdf3e13f325fc3a18a..8ec23a7ff35f1bcb5ef347820be465f7fcc277cf 100644
--- a/src/main/java/net/minecraft/server/TileEntityConduit.java
+++ b/src/main/java/net/minecraft/server/TileEntityConduit.java
@@ -73,7 +73,8 @@ public class TileEntityConduit extends TileEntity implements ITickable {
 
         if (i % 40L == 0L) {
             this.a(this.h());
-            if (!this.world.isClientSide && this.d()) {
+            // if (!this.world.isClientSide && this.d()) {
+            if (this.d()) {
                 this.j();
                 this.k();
             }
@@ -87,7 +88,7 @@ public class TileEntityConduit extends TileEntity implements ITickable {
             this.l = i + 60L + (long) this.world.getRandom().nextInt(40);
             this.a(SoundEffects.BLOCK_CONDUIT_AMBIENT_SHORT);
         }
-
+        /*
         if (this.world.isClientSide) {
             this.l();
             this.y();
@@ -95,6 +96,7 @@ public class TileEntityConduit extends TileEntity implements ITickable {
                 ++this.c;
             }
         }
+        */
 
     }
 
diff --git a/src/main/java/net/minecraft/server/TileEntityEndGateway.java b/src/main/java/net/minecraft/server/TileEntityEndGateway.java
index 127b5d8215f2bb4c5c523c5a77ebccfbf5fc25ff..f0bf0b31cddccbf8c5e94f21c75b5b9cdf4cc42c 100644
--- a/src/main/java/net/minecraft/server/TileEntityEndGateway.java
+++ b/src/main/java/net/minecraft/server/TileEntityEndGateway.java
@@ -60,7 +60,8 @@ public class TileEntityEndGateway extends TileEntityEnderPortal implements ITick
         ++this.age;
         if (flag1) {
             --this.c;
-        } else if (!this.world.isClientSide) {
+        // } else if (!this.world.isClientSide) {
+        } else {
             List<Entity> list = this.world.a(Entity.class, new AxisAlignedBB(this.getPosition()), TileEntityEndGateway::a);
 
             // Paper start
@@ -107,11 +108,11 @@ public class TileEntityEndGateway extends TileEntityEnderPortal implements ITick
     }
 
     public void h() {
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             this.c = 40;
             this.world.playBlockAction(this.getPosition(), this.getBlock().getBlock(), 1, 0);
             this.update();
-        }
+        // }
 
     }
 
diff --git a/src/main/java/net/minecraft/server/TileEntityFurnace.java b/src/main/java/net/minecraft/server/TileEntityFurnace.java
index c1d1ce582c94fd20f42b1979d6edbb6b377adff8..5963cedd7c5463dd6fd1d2ed748f1ac1714ff64f 100644
--- a/src/main/java/net/minecraft/server/TileEntityFurnace.java
+++ b/src/main/java/net/minecraft/server/TileEntityFurnace.java
@@ -275,7 +275,7 @@ public abstract class TileEntityFurnace extends TileEntityContainer implements I
             --this.burnTime;
         }
 
-        if (!this.world.isClientSide) {
+        // if (!this.world.isClientSide) {
             ItemStack itemstack = (ItemStack) this.items.get(1);
 
             // Purpur start
@@ -352,7 +352,7 @@ public abstract class TileEntityFurnace extends TileEntityContainer implements I
             }
 
             if (infiniteFuel) this.items.set(1, ItemStack.NULL_ITEM); // Purpur
-        }
+        // }
 
         if (flag1) {
             this.update();
@@ -415,9 +415,9 @@ public abstract class TileEntityFurnace extends TileEntityContainer implements I
             */
             // CraftBukkit end
 
-            if (!this.world.isClientSide) {
+            // if (!this.world.isClientSide) {
                 this.a(irecipe);
-            }
+            // }
 
             if (itemstack.getItem() == Blocks.WET_SPONGE.getItem() && !((ItemStack) this.items.get(1)).isEmpty() && ((ItemStack) this.items.get(1)).getItem() == Items.BUCKET) {
                 this.items.set(1, new ItemStack(Items.WATER_BUCKET));
diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index e5b32cf9662604277a8fe3c55422fd8a16ec5003..9d31f6c3b8d43f0addb9c55d0745d9e1a3896cd5 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -114,7 +114,8 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
 
     @Override
     public void tick() {
-        if (this.world != null && !this.world.isClientSide) {
+        // if (this.world != null && !this.world.isClientSide) {
+        if (this.world != null) {
             --this.j;
             this.k = this.world.getTime();
             if (!this.m()) {
@@ -133,7 +134,8 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
     }
 
     private boolean a(Supplier<Boolean> supplier) {
-        if (this.world != null && !this.world.isClientSide) {
+        // if (this.world != null && !this.world.isClientSide) {
+        if (this.world != null) {
             if (!this.m() && (Boolean) this.getBlock().get(BlockHopper.ENABLED)) {
                 boolean flag = false;
 
diff --git a/src/main/java/net/minecraft/server/TileEntityPiston.java b/src/main/java/net/minecraft/server/TileEntityPiston.java
index b0d52d7405ca24938ca753897f89e6fad575d04d..fd89344fad6bd62c4da310e0299ffbd72901d5d2 100644
--- a/src/main/java/net/minecraft/server/TileEntityPiston.java
+++ b/src/main/java/net/minecraft/server/TileEntityPiston.java
@@ -223,7 +223,8 @@ public class TileEntityPiston extends TileEntity implements ITickable {
     }
 
     public void l() {
-        if (this.world != null && (this.j < 1.0F || this.world.isClientSide)) {
+        // if (this.world != null && (this.j < 1.0F || this.world.isClientSide)) {
+        if (this.world != null && (this.j < 1.0F)) {
             this.i = 1.0F;
             this.j = this.i;
             this.world.removeTileEntity(this.position);
@@ -249,9 +250,11 @@ public class TileEntityPiston extends TileEntity implements ITickable {
         this.k = this.world.getTime();
         this.j = this.i;
         if (this.j >= 1.0F) {
+            /*
             if (this.world.isClientSide && this.l < 5) {
                 ++this.l;
             } else {
+            */
                 this.world.removeTileEntity(this.position);
                 this.al_();
                 if (this.a != null && this.world.getType(this.position).a(Blocks.MOVING_PISTON)) {
@@ -270,7 +273,7 @@ public class TileEntityPiston extends TileEntity implements ITickable {
                     }
                 }
 
-            }
+            // }
         } else {
             float f = this.i + 0.5F;
 
