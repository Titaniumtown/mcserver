From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mykyta Komarnytskyy <nkomarn@hotmail.com>
Date: Wed, 28 Oct 2020 11:44:05 -0700
Subject: [PATCH] (Hydrinity) Use faster random implementation

Replace usages of random in world and entity classes with FastRandom, an adapter for SplittableRandom. This nearly doubles random performance across the board.

This patch was created for the Hydrinity project <https://github.com/Hydrinity/Hydrinity> by Mykyta Komarnytskyy <nkomarn@hotmail.com> under the MIT license.

diff --git a/src/main/java/com/destroystokyo/paper/loottable/PaperLootableInventoryData.java b/src/main/java/com/destroystokyo/paper/loottable/PaperLootableInventoryData.java
index b5401eaf9..bcc01ea8a 100644
--- a/src/main/java/com/destroystokyo/paper/loottable/PaperLootableInventoryData.java
+++ b/src/main/java/com/destroystokyo/paper/loottable/PaperLootableInventoryData.java
@@ -13,7 +13,7 @@ import java.util.UUID;
 
 public class PaperLootableInventoryData {
 
-    private static final Random RANDOM = new Random();
+    private static final Random RANDOM = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
 
     private long lastFill = -1;
     private long nextRefill = -1;
diff --git a/src/main/java/net/minecraft/server/CommandSpreadPlayers.java b/src/main/java/net/minecraft/server/CommandSpreadPlayers.java
index c9f4b6987..b5047b0b6 100644
--- a/src/main/java/net/minecraft/server/CommandSpreadPlayers.java
+++ b/src/main/java/net/minecraft/server/CommandSpreadPlayers.java
@@ -37,7 +37,7 @@ public class CommandSpreadPlayers {
     }
 
     private static int a(CommandListenerWrapper commandlistenerwrapper, Vec2F vec2f, float f, float f1, int i, boolean flag, Collection<? extends Entity> collection) throws CommandSyntaxException {
-        Random random = new Random();
+        Random random = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
         double d0 = (double) (vec2f.i - f1);
         double d1 = (double) (vec2f.j - f1);
         double d2 = (double) (vec2f.i + f1);
diff --git a/src/main/java/net/minecraft/server/ContainerEnchantTable.java b/src/main/java/net/minecraft/server/ContainerEnchantTable.java
index 73bff2ca1..a481a2f05 100644
--- a/src/main/java/net/minecraft/server/ContainerEnchantTable.java
+++ b/src/main/java/net/minecraft/server/ContainerEnchantTable.java
@@ -52,7 +52,7 @@ public class ContainerEnchantTable extends Container {
             }
             // CraftBukkit end
         };
-        this.h = new Random();
+        this.h = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
         this.i = ContainerProperty.a();
         this.costs = new int[3];
         this.enchantments = new int[]{-1, -1, -1};
diff --git a/src/main/java/net/minecraft/server/EnderDragonBattle.java b/src/main/java/net/minecraft/server/EnderDragonBattle.java
index 5199cba87..2346929a9 100644
--- a/src/main/java/net/minecraft/server/EnderDragonBattle.java
+++ b/src/main/java/net/minecraft/server/EnderDragonBattle.java
@@ -73,7 +73,7 @@ public class EnderDragonBattle {
             }
         } else {
             this.gateways.addAll(ContiguousSet.create(Range.closedOpen(0, 20), DiscreteDomain.integers()));
-            Collections.shuffle(this.gateways, new Random(i));
+            Collections.shuffle(this.gateways, new net.yatopia.server.util.FastRandom(i));
         }
 
         this.f = ShapeDetectorBuilder.a().a("       ", "       ", "       ", "   #   ", "       ", "       ", "       ").a("       ", "       ", "       ", "   #   ", "       ", "       ", "       ").a("       ", "       ", "       ", "   #   ", "       ", "       ", "       ").a("  ###  ", " #   # ", "#     #", "#  #  #", "#     #", " #   # ", "  ###  ").a("       ", "  ###  ", " ##### ", " ##### ", " ##### ", "  ###  ", "       ").a('#', ShapeDetectorBlock.a(BlockPredicate.a(Blocks.BEDROCK))).b();
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 98e8f8d77..a274526a8 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -61,7 +61,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
 
     // Paper start
     boolean isQueuedForRegister = false;
-    public static Random SHARED_RANDOM = new Random() {
+    public static Random SHARED_RANDOM = new net.yatopia.server.util.FastRandom() { //Yatopia Faster Random
         private boolean locked = false;
         @Override
         public synchronized void setSeed(long seed) {
diff --git a/src/main/java/net/minecraft/server/EntityFishingHook.java b/src/main/java/net/minecraft/server/EntityFishingHook.java
index 6891e61bc..37172d3de 100644
--- a/src/main/java/net/minecraft/server/EntityFishingHook.java
+++ b/src/main/java/net/minecraft/server/EntityFishingHook.java
@@ -38,7 +38,7 @@ public class EntityFishingHook extends IProjectile {
 
     private EntityFishingHook(World world, EntityHuman entityhuman, int i, int j) {
         super(EntityTypes.FISHING_BOBBER, world);
-        this.b = new Random();
+        this.b = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
         this.ak = true;
         this.am = EntityFishingHook.HookState.FLYING;
         this.Y = true;
diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index cee95fa97..5d99d2139 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -191,7 +191,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             long l = k * k;
             int i1 = l > 2147483647L ? Integer.MAX_VALUE : (int) l;
             int j1 = this.u(i1);
-            int k1 = (new Random()).nextInt(i1);
+            int k1 = (new net.yatopia.server.util.FastRandom()).nextInt(i1);
 
             for (int l1 = 0; l1 < i1; ++l1) {
                 int i2 = (k1 + j1 * l1) % i1;
@@ -229,7 +229,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             long l = k * k;
             int i1 = l > 2147483647L ? Integer.MAX_VALUE : (int) l;
             int j1 = this.u(i1);
-            int k1 = (new Random()).nextInt(i1);
+            int k1 = (new net.yatopia.server.util.FastRandom()).nextInt(i1);
 
             for (int l1 = 0; l1 < i1; ++l1) {
                 int i2 = (k1 + j1 * l1) % i1;
diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index 5ca4d0321..3b56226e2 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -27,7 +27,7 @@ public class Explosion {
     private static final ExplosionDamageCalculator a = new ExplosionDamageCalculator();
     private final boolean b;
     private final Explosion.Effect c;
-    private final Random d = new Random();
+    private final Random d = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
     private final World world;
     private final double posX;
     private final double posY;
diff --git a/src/main/java/net/minecraft/server/Item.java b/src/main/java/net/minecraft/server/Item.java
index c3b57e8d5..6b15fc26f 100644
--- a/src/main/java/net/minecraft/server/Item.java
+++ b/src/main/java/net/minecraft/server/Item.java
@@ -13,7 +13,7 @@ public class Item implements IMaterial {
     public static final Map<Block, Item> e = Maps.newHashMap();
     protected static final UUID f = UUID.fromString("CB3F55D3-645C-4F38-A497-9C13A33DB5CF");
     protected static final UUID g = UUID.fromString("FA233E1C-4180-4865-B01B-BCCE9785ACA3");
-    protected static final Random RANDOM = new Random();
+    protected static final Random RANDOM = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
     protected final CreativeModeTab i;
     private final EnumItemRarity a;
     private final int maxStackSize;
diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index d98748325..e7fecb6e7 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -32,7 +32,7 @@ public class LoginListener implements PacketLoginInListener {
 
     private static final AtomicInteger b = new AtomicInteger(0);
     private static final Logger LOGGER = LogManager.getLogger();
-    private static final Random random = new Random();
+    private static final Random random = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
     private final byte[] e = new byte[4];
     private final MinecraftServer server;
     public final NetworkManager networkManager;
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index d39b04e2a..ba30567e8 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -197,7 +197,7 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
         this.m = new GameProfilerSwitcher(SystemUtils.a, this::ai);
         this.methodProfiler = GameProfilerDisabled.a;
         this.serverPing = new ServerPing();
-        this.r = new Random();
+        this.r = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
         this.serverPort = -1;
         this.worldServer = Maps.newLinkedHashMap(); // CraftBukkit - keep order, k+v already use identity methods
         this.isRunning = true;
diff --git a/src/main/java/net/minecraft/server/MobSpawnerTrader.java b/src/main/java/net/minecraft/server/MobSpawnerTrader.java
index 072ec40f7..9b4296b9f 100644
--- a/src/main/java/net/minecraft/server/MobSpawnerTrader.java
+++ b/src/main/java/net/minecraft/server/MobSpawnerTrader.java
@@ -7,7 +7,7 @@ import javax.annotation.Nullable;
 
 public class MobSpawnerTrader implements MobSpawner {
 
-    private final Random a = new Random();
+    private final Random a = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
     private final IWorldDataServer b;
     private int c; public final int getMinuteTimer() { return this.c; } public final void setMinuteTimer(int x) { this.c = x; } // Paper - OBFHELPER
     private int d; public final int getDayTimer() { return this.d; } public final void setDayTimer(int x) { this.d = x; } // Paper - OBFHELPER
diff --git a/src/main/java/net/minecraft/server/PiglinAI.java b/src/main/java/net/minecraft/server/PiglinAI.java
index df5aafec9..18656d0a8 100644
--- a/src/main/java/net/minecraft/server/PiglinAI.java
+++ b/src/main/java/net/minecraft/server/PiglinAI.java
@@ -273,7 +273,7 @@ public class PiglinAI {
     }
 
     private static boolean a(EntityLiving entityliving, EntityLiving entityliving1) {
-        return entityliving1.getEntityType() != EntityTypes.HOGLIN ? false : (new Random(entityliving.world.getTime())).nextFloat() < 0.1F;
+        return entityliving1.getEntityType() != EntityTypes.HOGLIN ? false : (new net.yatopia.server.util.FastRandom(entityliving.world.getTime())).nextFloat() < 0.1F;
     }
 
     protected static boolean a(EntityPiglin entitypiglin, ItemStack itemstack) {
diff --git a/src/main/java/net/minecraft/server/Raid.java b/src/main/java/net/minecraft/server/Raid.java
index 78f818bc7..988e4c33e 100644
--- a/src/main/java/net/minecraft/server/Raid.java
+++ b/src/main/java/net/minecraft/server/Raid.java
@@ -47,7 +47,7 @@ public class Raid {
 
     public Raid(int i, WorldServer worldserver, BlockPosition blockposition) {
         this.bossBattle = new BossBattleServer(Raid.a, BossBattle.BarColor.RED, BossBattle.BarStyle.NOTCHED_10);
-        this.random = new Random();
+        this.random = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
         this.y = Optional.empty();
         this.id = i;
         this.world = worldserver;
@@ -61,7 +61,7 @@ public class Raid {
 
     public Raid(WorldServer worldserver, NBTTagCompound nbttagcompound) {
         this.bossBattle = new BossBattleServer(Raid.a, BossBattle.BarColor.RED, BossBattle.BarStyle.NOTCHED_10);
-        this.random = new Random();
+        this.random = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
         this.y = Optional.empty();
         this.world = worldserver;
         this.id = nbttagcompound.getInt("Id");
diff --git a/src/main/java/net/minecraft/server/TileEntityDispenser.java b/src/main/java/net/minecraft/server/TileEntityDispenser.java
index 6ea4bc311..bcd36fd3a 100644
--- a/src/main/java/net/minecraft/server/TileEntityDispenser.java
+++ b/src/main/java/net/minecraft/server/TileEntityDispenser.java
@@ -10,7 +10,7 @@ import org.bukkit.entity.HumanEntity;
 
 public class TileEntityDispenser extends TileEntityLootable {
 
-    private static final Random a = new Random();
+    private static final Random a = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
     private NonNullList<ItemStack> items;
 
     // CraftBukkit start - add fields and methods
diff --git a/src/main/java/net/minecraft/server/TileEntityEnchantTable.java b/src/main/java/net/minecraft/server/TileEntityEnchantTable.java
index 9b0c75332..de597d053 100644
--- a/src/main/java/net/minecraft/server/TileEntityEnchantTable.java
+++ b/src/main/java/net/minecraft/server/TileEntityEnchantTable.java
@@ -15,7 +15,7 @@ public class TileEntityEnchantTable extends TileEntity implements INamableTileEn
     public float k;
     public float l;
     public float m;
-    private static final Random n = new Random();
+    private static final Random n = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
     private IChatBaseComponent o;
 
     public TileEntityEnchantTable() {
diff --git a/src/main/java/net/minecraft/server/WeightedList.java b/src/main/java/net/minecraft/server/WeightedList.java
index f0fdfd689..964f7a4cd 100644
--- a/src/main/java/net/minecraft/server/WeightedList.java
+++ b/src/main/java/net/minecraft/server/WeightedList.java
@@ -28,7 +28,7 @@ public class WeightedList<U> {
     private WeightedList(List<WeightedList.a<U>> list, boolean isUnsafe) {
         this.isUnsafe = isUnsafe;
         // Paper end
-        this.b = new Random();
+        this.b = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
         this.list = Lists.newArrayList(list); // Paper - decompile conflict
     }
 
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index b4ba9b56a..d4afba540 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -48,13 +48,13 @@ public abstract class World implements GeneratorAccess, AutoCloseable {
     public final Thread serverThread;
     private final boolean debugWorld;
     private int d;
-    protected int n = (new Random()).nextInt();
+    protected int n = (new net.yatopia.server.util.FastRandom()).nextInt();
     protected final int o = 1013904223;
     protected float lastRainLevel;
     protected float rainLevel;
     protected float lastThunderLevel;
     protected float thunderLevel;
-    public final Random random = new Random();
+    public final Random random = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
     private final DimensionManager x;
     public final WorldDataMutable worldData;
     private final Supplier<GameProfilerFiller> methodProfiler;
diff --git a/src/main/java/net/yatopia/server/util/FastRandom.java b/src/main/java/net/yatopia/server/util/FastRandom.java
new file mode 100644
index 000000000..f0320d1c3
--- /dev/null
+++ b/src/main/java/net/yatopia/server/util/FastRandom.java
@@ -0,0 +1,64 @@
+package net.yatopia.server.util;
+
+import org.apache.commons.rng.core.source64.XoRoShiRo128PlusPlus;
+
+import java.util.Random;
+import java.util.SplittableRandom;
+
+public class FastRandom extends Random {
+
+    private XoRoShiRo128PlusPlus random;
+
+    public FastRandom() {
+        super();
+        SplittableRandom randomseed = new SplittableRandom();
+        this.random = new XoRoShiRo128PlusPlus(randomseed.nextLong(), randomseed.nextLong());
+    }
+
+    public FastRandom(long seed) {
+        super(seed);
+        SplittableRandom randomseed = new SplittableRandom(seed);
+        this.random = new XoRoShiRo128PlusPlus(randomseed.nextLong(), randomseed.nextLong());
+    }
+
+    @Override
+    public boolean nextBoolean() {
+        return random.nextBoolean();
+    }
+
+    @Override
+    public int nextInt() {
+        return random.nextInt();
+    }
+
+    @Override
+    public float nextFloat() {
+        return (float) random.nextDouble();
+    }
+
+    @Override
+    public double nextDouble() {
+        return random.nextDouble();
+    }
+
+    @Override
+    public synchronized void setSeed(long seed) {
+        SplittableRandom randomseed = new SplittableRandom(seed);
+        this.random = new XoRoShiRo128PlusPlus(randomseed.nextLong(), randomseed.nextLong());
+    }
+
+    @Override
+    public void nextBytes(byte[] bytes) {
+        random.nextBytes(bytes);
+    }
+
+    @Override
+    public int nextInt(int bound) {
+        return random.nextInt(bound);
+    }
+
+    @Override
+    public long nextLong() {
+        return random.nextLong();
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index a69b38f29..1a0718026 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -334,7 +334,7 @@ public class CraftWorld implements World {
     }
     // Paper end
 
-    private static final Random rand = new Random();
+    private static final Random rand = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
 
     public CraftWorld(WorldServer world, ChunkGenerator gen, Environment env) {
         this.world = world;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
index f3066e6c7..defeba537 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
@@ -13,7 +13,7 @@ import org.bukkit.inventory.meta.FireworkMeta;
 
 public class CraftFirework extends CraftProjectile implements Firework {
 
-    private final Random random = new Random();
+    private final Random random = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
     private final CraftItemStack item;
 
     public CraftFirework(CraftServer server, EntityFireworks entity) {
diff --git a/src/test/java/org/bukkit/NibbleArrayTest.java b/src/test/java/org/bukkit/NibbleArrayTest.java
index 40ba97fb7..86f9b00dd 100644
--- a/src/test/java/org/bukkit/NibbleArrayTest.java
+++ b/src/test/java/org/bukkit/NibbleArrayTest.java
@@ -11,7 +11,7 @@ public class NibbleArrayTest {
 
     @Test
     public void testNibble() {
-        Random random = new Random();
+        Random random = new net.yatopia.server.util.FastRandom(); //Yatopia Faster Random
         byte[] classic = new byte[NIBBLE_SIZE];
         NibbleArray nibble = new NibbleArray();
 
