diff --git a/src/main/java/io/papermc/paper/region/RegionCompressionType.java b/src/main/java/io/papermc/paper/region/RegionCompressionType.java
new file mode 100644
index 00000000..bd654ebc
--- /dev/null
+++ b/src/main/java/io/papermc/paper/region/RegionCompressionType.java
@@ -0,0 +1,46 @@
+package io.papermc.paper.region;
+
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+public enum RegionCompressionType {
+    GZIP(1, "gzip"),
+    ZLIB(2, "zlib"),
+    NONE(3, "none"),
+    LZ4(30, "lz4"),
+    ZSTD(31, "zstd");
+
+    private final int type;
+    private final String name;
+    RegionCompressionType(int type, @NotNull String name) {
+        this.type = type;
+        this.name = name;
+    }
+
+    public int getType() { return type; }
+
+    @NotNull
+    public String getName() { return name; }
+
+    @Nullable
+    public static RegionCompressionType getFromName(@NotNull String name) {
+        for (RegionCompressionType value : values()) {
+            if (value.name.equalsIgnoreCase(name)) {
+                return value;
+            }
+        }
+        return null;
+    }
+
+    @Nullable
+    public static RegionCompressionType getFromType(int type) {
+        for (RegionCompressionType value : values()) {
+            if (value.type == type) {
+                return value;
+            }
+        }
+        return null;
+    }
+
+    public String toString() { return name; }
+}
diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index c3ffbb86..2afc9fa0 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -1813,6 +1813,27 @@ public final class Bukkit {
     }
     // Paper end
 
+    // Paper start - API for compression settings
+    /**
+     * Returns the current region compression type
+     *
+     * @return the current region compression type
+     */
+    @NotNull
+    public static io.papermc.paper.region.RegionCompressionType getRegionCompressionType() {
+        return server.getRegionCompressionType();
+    }
+
+    /**
+     * Returns the current Zstd dictionary version.
+     *
+     * @return the current Zstd dictionary version
+     */
+    public static short getZstdDictVersion() {
+        return server.getZstdDictVersion();
+    }
+    // Paper end
+
     @NotNull
     public static Server.Spigot spigot() {
         return server.spigot();
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 10cab1b0..792f698e 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1657,4 +1657,21 @@ public interface Server extends PluginMessageRecipient {
     @NotNull
     java.time.Duration getLastTickTime();
     // Yatopia end
+
+    // Paper start - API for compression settings
+    /**
+     * Returns the current region compression type
+     *
+     * @return the current region compression type
+     */
+    @NotNull
+    io.papermc.paper.region.RegionCompressionType getRegionCompressionType();
+
+    /**
+     * Returns the current Zstd dictionary version.
+     *
+     * @return the current Zstd dictionary version
+     */
+    short getZstdDictVersion();
+    // Paper end
 }
